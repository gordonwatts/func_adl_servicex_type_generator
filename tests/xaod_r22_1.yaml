collections:
  - collection_name: CompositeParticles
    cpp_item_type: xAOD::CompositeParticle_v1
    python_item_type: xAOD.CompositeParticle_v1
    cpp_container_type: DataVector<xAOD::CompositeParticle_v1>
    python_container_type: Iterable[xAOD.CompositeParticle_v1]
    include_file: xAODParticleEvent/CompositeParticleContainer.h
    link_libraries:
      - xAODParticleEvent
    parameters:
      - name: name
        type: str
  - collection_name: Particles
    cpp_item_type: xAOD::Particle_v1
    python_item_type: xAOD.Particle_v1
    cpp_container_type: DataVector<xAOD::Particle_v1>
    python_container_type: Iterable[xAOD.Particle_v1]
    include_file: xAODParticleEvent/ParticleContainer.h
    link_libraries:
      - xAODParticleEvent
    parameters:
      - name: name
        type: str
  - collection_name: SystematicEvents
    cpp_item_type: xAOD::SystematicEvent
    python_item_type: xAOD.SystematicEvent
    cpp_container_type: DataVector<xAOD::SystematicEvent>
    python_container_type: Iterable[xAOD.SystematicEvent]
    include_file: TopEvent/SystematicEventContainer.h
    link_libraries:
      - TopEvent
    parameters:
      - name: name
        type: str
  - collection_name: PseudoTopResults
    cpp_item_type: xAOD::PseudoTopResult
    python_item_type: xAOD.PseudoTopResult
    cpp_container_type: DataVector<xAOD::PseudoTopResult>
    python_container_type: Iterable[xAOD.PseudoTopResult]
    include_file: TopEvent/PseudoTopResultContainer.h
    link_libraries:
      - TopEvent
    parameters:
      - name: name
        type: str
  - collection_name: KLFitterResults
    cpp_item_type: xAOD::KLFitterResult
    python_item_type: xAOD.KLFitterResult
    cpp_container_type: DataVector<xAOD::KLFitterResult>
    python_container_type: Iterable[xAOD.KLFitterResult]
    include_file: TopEvent/KLFitterResultContainer.h
    link_libraries:
      - TopEvent
    parameters:
      - name: name
        type: str
  - collection_name: jFexTowers
    cpp_item_type: xAOD::jFexTower_v1
    python_item_type: xAOD.jFexTower_v1
    cpp_container_type: DataVector<xAOD::jFexTower_v1>
    python_container_type: Iterable[xAOD.jFexTower_v1]
    include_file: xAODTrigL1Calo/jFexTowerContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: JEMRoIs
    cpp_item_type: xAOD::JEMRoI_v1
    python_item_type: xAOD.JEMRoI_v1
    cpp_container_type: DataVector<xAOD::JEMRoI_v1>
    python_container_type: Iterable[xAOD.JEMRoI_v1]
    include_file: xAODTrigL1Calo/JEMRoIContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: JEMEtSumss
    cpp_item_type: xAOD::JEMEtSums_v2
    python_item_type: xAOD.JEMEtSums_v2
    cpp_container_type: DataVector<xAOD::JEMEtSums_v2>
    python_container_type: Iterable[xAOD.JEMEtSums_v2]
    include_file: xAODTrigL1Calo/JEMEtSumsContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: JEMHitss
    cpp_item_type: xAOD::JEMHits_v1
    python_item_type: xAOD.JEMHits_v1
    cpp_container_type: DataVector<xAOD::JEMHits_v1>
    python_container_type: Iterable[xAOD.JEMHits_v1]
    include_file: xAODTrigL1Calo/JEMHitsContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CMXRoIs
    cpp_item_type: xAOD::CMXRoI_v1
    python_item_type: xAOD.CMXRoI_v1
    cpp_container_type: DataVector<xAOD::CMXRoI_v1>
    python_container_type: Iterable[xAOD.CMXRoI_v1]
    include_file: xAODTrigL1Calo/CMXRoIContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CPMTowers
    cpp_item_type: xAOD::CPMTower_v2
    python_item_type: xAOD.CPMTower_v2
    cpp_container_type: DataVector<xAOD::CPMTower_v2>
    python_container_type: Iterable[xAOD.CPMTower_v2]
    include_file: xAODTrigL1Calo/CPMTowerContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CPMRoIs
    cpp_item_type: xAOD::CPMRoI_v1
    python_item_type: xAOD.CPMRoI_v1
    cpp_container_type: DataVector<xAOD::CPMRoI_v1>
    python_container_type: Iterable[xAOD.CPMRoI_v1]
    include_file: xAODTrigL1Calo/CPMRoIContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CMMCPHitss
    cpp_item_type: xAOD::CMMCPHits_v1
    python_item_type: xAOD.CMMCPHits_v1
    cpp_container_type: DataVector<xAOD::CMMCPHits_v1>
    python_container_type: Iterable[xAOD.CMMCPHits_v1]
    include_file: xAODTrigL1Calo/CMMCPHitsContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CMMJetHitss
    cpp_item_type: xAOD::CMMJetHits_v1
    python_item_type: xAOD.CMMJetHits_v1
    cpp_container_type: DataVector<xAOD::CMMJetHits_v1>
    python_container_type: Iterable[xAOD.CMMJetHits_v1]
    include_file: xAODTrigL1Calo/CMMJetHitsContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: eFexTowers
    cpp_item_type: xAOD::eFexTower_v1
    python_item_type: xAOD.eFexTower_v1
    cpp_container_type: DataVector<xAOD::eFexTower_v1>
    python_container_type: Iterable[xAOD.eFexTower_v1]
    include_file: xAODTrigL1Calo/eFexTowerContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CMMEtSumss
    cpp_item_type: xAOD::CMMEtSums_v1
    python_item_type: xAOD.CMMEtSums_v1
    cpp_container_type: DataVector<xAOD::CMMEtSums_v1>
    python_container_type: Iterable[xAOD.CMMEtSums_v1]
    include_file: xAODTrigL1Calo/CMMEtSumsContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: L1TopoRawDatas
    cpp_item_type: xAOD::L1TopoRawData_v1
    python_item_type: xAOD.L1TopoRawData_v1
    cpp_container_type: DataVector<xAOD::L1TopoRawData_v1>
    python_container_type: Iterable[xAOD.L1TopoRawData_v1]
    include_file: xAODTrigL1Calo/L1TopoRawDataContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CPMHitss
    cpp_item_type: xAOD::CPMHits_v1
    python_item_type: xAOD.CPMHits_v1
    cpp_container_type: DataVector<xAOD::CPMHits_v1>
    python_container_type: Iterable[xAOD.CPMHits_v1]
    include_file: xAODTrigL1Calo/CPMHitsContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CMXEtSumss
    cpp_item_type: xAOD::CMXEtSums_v1
    python_item_type: xAOD.CMXEtSums_v1
    cpp_container_type: DataVector<xAOD::CMXEtSums_v1>
    python_container_type: Iterable[xAOD.CMXEtSums_v1]
    include_file: xAODTrigL1Calo/CMXEtSumsContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: RODHeaders
    cpp_item_type: xAOD::RODHeader_v2
    python_item_type: xAOD.RODHeader_v2
    cpp_container_type: DataVector<xAOD::RODHeader_v2>
    python_container_type: Iterable[xAOD.RODHeader_v2]
    include_file: xAODTrigL1Calo/RODHeaderContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CMXJetHitss
    cpp_item_type: xAOD::CMXJetHits_v1
    python_item_type: xAOD.CMXJetHits_v1
    cpp_container_type: DataVector<xAOD::CMXJetHits_v1>
    python_container_type: Iterable[xAOD.CMXJetHits_v1]
    include_file: xAODTrigL1Calo/CMXJetHitsContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CMXCPHitss
    cpp_item_type: xAOD::CMXCPHits_v1
    python_item_type: xAOD.CMXCPHits_v1
    cpp_container_type: DataVector<xAOD::CMXCPHits_v1>
    python_container_type: Iterable[xAOD.CMXCPHits_v1]
    include_file: xAODTrigL1Calo/CMXCPHitsContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CMXCPTobs
    cpp_item_type: xAOD::CMXCPTob_v1
    python_item_type: xAOD.CMXCPTob_v1
    cpp_container_type: DataVector<xAOD::CMXCPTob_v1>
    python_container_type: Iterable[xAOD.CMXCPTob_v1]
    include_file: xAODTrigL1Calo/CMXCPTobContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CMXJetTobs
    cpp_item_type: xAOD::CMXJetTob_v1
    python_item_type: xAOD.CMXJetTob_v1
    cpp_container_type: DataVector<xAOD::CMXJetTob_v1>
    python_container_type: Iterable[xAOD.CMXJetTob_v1]
    include_file: xAODTrigL1Calo/CMXJetTobContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: TriggerTowers
    cpp_item_type: xAOD::TriggerTower_v2
    python_item_type: xAOD.TriggerTower_v2
    cpp_container_type: DataVector<xAOD::TriggerTower_v2>
    python_container_type: Iterable[xAOD.TriggerTower_v2]
    include_file: xAODTrigL1Calo/TriggerTowerContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: JEMTobRoIs
    cpp_item_type: xAOD::JEMTobRoI_v1
    python_item_type: xAOD.JEMTobRoI_v1
    cpp_container_type: DataVector<xAOD::JEMTobRoI_v1>
    python_container_type: Iterable[xAOD.JEMTobRoI_v1]
    include_file: xAODTrigL1Calo/JEMTobRoIContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: JetElements
    cpp_item_type: xAOD::JetElement_v2
    python_item_type: xAOD.JetElement_v2
    cpp_container_type: DataVector<xAOD::JetElement_v2>
    python_container_type: Iterable[xAOD.JetElement_v2]
    include_file: xAODTrigL1Calo/JetElementContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: gFexTowers
    cpp_item_type: xAOD::gFexTower_v1
    python_item_type: xAOD.gFexTower_v1
    cpp_container_type: DataVector<xAOD::gFexTower_v1>
    python_container_type: Iterable[xAOD.gFexTower_v1]
    include_file: xAODTrigL1Calo/gFexTowerContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: CPMTobRoIs
    cpp_item_type: xAOD::CPMTobRoI_v1
    python_item_type: xAOD.CPMTobRoI_v1
    cpp_container_type: DataVector<xAOD::CPMTobRoI_v1>
    python_container_type: Iterable[xAOD.CPMTobRoI_v1]
    include_file: xAODTrigL1Calo/CPMTobRoIContainer.h
    link_libraries:
      - xAODTrigL1Calo
    parameters:
      - name: name
        type: str
  - collection_name: SlowMuons
    cpp_item_type: xAOD::SlowMuon_v1
    python_item_type: xAOD.SlowMuon_v1
    cpp_container_type: DataVector<xAOD::SlowMuon_v1>
    python_container_type: Iterable[xAOD.SlowMuon_v1]
    include_file: xAODMuon/SlowMuonContainer.h
    link_libraries:
      - xAODMuon
    parameters:
      - name: name
        type: str
  - collection_name: MuonSegments
    cpp_item_type: xAOD::MuonSegment_v1
    python_item_type: xAOD.MuonSegment_v1
    cpp_container_type: DataVector<xAOD::MuonSegment_v1>
    python_container_type: Iterable[xAOD.MuonSegment_v1]
    include_file: xAODMuon/MuonSegmentContainer.h
    link_libraries:
      - xAODMuon
    parameters:
      - name: name
        type: str
  - collection_name: Muons
    cpp_item_type: xAOD::Muon_v1
    python_item_type: xAOD.Muon_v1
    cpp_container_type: DataVector<xAOD::Muon_v1>
    python_container_type: Iterable[xAOD.Muon_v1]
    include_file: xAODMuon/MuonContainer.h
    link_libraries:
      - xAODMuon
    method_callback: "lambda s, a: {{package_name}}.calibration_support.fixup_collection_call(s, a, 'muon_collection')"
    parameters:
      - name: calibrated_collection
        type: Optional[str]
        default_value: None
      - name: uncalibrated_collection
        type: Optional[str]
        default_value: None
  - collection_name: TauJets
    cpp_item_type: xAOD::TauJet_v3
    python_item_type: xAOD.TauJet_v3
    cpp_container_type: DataVector<xAOD::TauJet_v3>
    python_container_type: Iterable[xAOD.TauJet_v3]
    include_file: xAODTau/TauJetContainer.h
    link_libraries:
      - xAODTau
    method_callback: "lambda s, a: {{package_name}}.calibration_support.fixup_collection_call(s, a, 'tau_collection')"
    parameters:
      - name: calibrated_collection
        type: Optional[str]
        default_value: None
      - name: uncalibrated_collection
        type: Optional[str]
        default_value: None
  - collection_name: TauTracks
    cpp_item_type: xAOD::TauTrack_v1
    python_item_type: xAOD.TauTrack_v1
    cpp_container_type: DataVector<xAOD::TauTrack_v1>
    python_container_type: Iterable[xAOD.TauTrack_v1]
    include_file: xAODTau/TauTrackContainer.h
    link_libraries:
      - xAODTau
    parameters:
      - name: name
        type: str
  - collection_name: DiTauJets
    cpp_item_type: xAOD::DiTauJet_v1
    python_item_type: xAOD.DiTauJet_v1
    cpp_container_type: DataVector<xAOD::DiTauJet_v1>
    python_container_type: Iterable[xAOD.DiTauJet_v1]
    include_file: xAODTau/DiTauJetContainer.h
    link_libraries:
      - xAODTau
    extra_parameters:
      - name: calibration
        type: str
        default_value: "'NOSYS'"
        actions:
          - value: "'*None*'"
            metadata_names:
              []
            bank_rename: "{bank_name}"
          - value: "'*Any*'"
            metadata_names:
              - sys_error_tool
              - pileup_tool
              - ditau_corrections
              - add_calibration_to_job
            bank_rename: "{bank_name}_{working_point}_{calibration}"
      - name: working_point
        type: str
        default_value: "'Tight'"
        actions:
          []
  - collection_name: CutBookkeepers
    cpp_item_type: xAOD::CutBookkeeper_v1
    python_item_type: xAOD.CutBookkeeper_v1
    cpp_container_type: xAOD::CutBookkeeperContainer_v1
    python_container_type: Iterable[xAOD.CutBookkeeper_v1]
    include_file: xAODCutFlow/CutBookkeeperContainer.h
    link_libraries:
      - xAODCutFlow
    parameters:
      - name: name
        type: str
  - collection_name: HIEventShapes
    cpp_item_type: xAOD::HIEventShape_v2
    python_item_type: xAOD.HIEventShape_v2
    cpp_container_type: DataVector<xAOD::HIEventShape_v2>
    python_container_type: Iterable[xAOD.HIEventShape_v2]
    include_file: xAODHIEvent/HIEventShapeContainer.h
    link_libraries:
      - xAODHIEvent
    parameters:
      - name: name
        type: str
  - collection_name: CaloClusters
    cpp_item_type: xAOD::CaloCluster_v1
    python_item_type: xAOD.CaloCluster_v1
    cpp_container_type: DataVector<xAOD::CaloCluster_v1>
    python_container_type: Iterable[xAOD.CaloCluster_v1]
    include_file: xAODCaloEvent/CaloClusterContainer.h
    link_libraries:
      - xAODCaloEvent
    parameters:
      - name: name
        type: str
  - collection_name: CaloTowers
    cpp_item_type: xAOD::CaloTower_v1
    python_item_type: xAOD.CaloTower_v1
    cpp_container_type: xAOD::CaloTowerContainer_v1
    python_container_type: Iterable[xAOD.CaloTower_v1]
    include_file: xAODCaloEvent/CaloTowerContainer.h
    link_libraries:
      - xAODCaloEvent
    parameters:
      - name: name
        type: str
  - collection_name: TrigElectrons
    cpp_item_type: xAOD::TrigElectron_v1
    python_item_type: xAOD.TrigElectron_v1
    cpp_container_type: DataVector<xAOD::TrigElectron_v1>
    python_container_type: Iterable[xAOD.TrigElectron_v1]
    include_file: xAODTrigEgamma/TrigElectronContainer.h
    link_libraries:
      - xAODTrigEgamma
    parameters:
      - name: name
        type: str
  - collection_name: TrigPhotons
    cpp_item_type: xAOD::TrigPhoton_v1
    python_item_type: xAOD.TrigPhoton_v1
    cpp_container_type: DataVector<xAOD::TrigPhoton_v1>
    python_container_type: Iterable[xAOD.TrigPhoton_v1]
    include_file: xAODTrigEgamma/TrigPhotonContainer.h
    link_libraries:
      - xAODTrigEgamma
    parameters:
      - name: name
        type: str
  - collection_name: UncalibratedMeasurements
    cpp_item_type: xAOD::UncalibratedMeasurement_v1
    python_item_type: xAOD.UncalibratedMeasurement_v1
    cpp_container_type: DataVector<xAOD::UncalibratedMeasurement_v1>
    python_container_type: Iterable[xAOD.UncalibratedMeasurement_v1]
    include_file: xAODMeasurementBase/UncalibratedMeasurementContainer.h
    link_libraries:
      - xAODMeasurementBase
    parameters:
      - name: name
        type: str
  - collection_name: TrigCaloClusters
    cpp_item_type: xAOD::TrigCaloCluster_v1
    python_item_type: xAOD.TrigCaloCluster_v1
    cpp_container_type: DataVector<xAOD::TrigCaloCluster_v1>
    python_container_type: Iterable[xAOD.TrigCaloCluster_v1]
    include_file: xAODTrigCalo/TrigCaloClusterContainer.h
    link_libraries:
      - xAODTrigCalo
    parameters:
      - name: name
        type: str
  - collection_name: TrigEMClusters
    cpp_item_type: xAOD::TrigEMCluster_v1
    python_item_type: xAOD.TrigEMCluster_v1
    cpp_container_type: DataVector<xAOD::TrigEMCluster_v1>
    python_container_type: Iterable[xAOD.TrigEMCluster_v1]
    include_file: xAODTrigCalo/TrigEMClusterContainer.h
    link_libraries:
      - xAODTrigCalo
    parameters:
      - name: name
        type: str
  - collection_name: TrackCaloClusters
    cpp_item_type: xAOD::TrackCaloCluster_v1
    python_item_type: xAOD.TrackCaloCluster_v1
    cpp_container_type: DataVector<xAOD::TrackCaloCluster_v1>
    python_container_type: Iterable[xAOD.TrackCaloCluster_v1]
    include_file: xAODPFlow/TrackCaloClusterContainer.h
    link_libraries:
      - xAODPFlow
    parameters:
      - name: name
        type: str
  - collection_name: PFOs
    cpp_item_type: xAOD::PFO_v1
    python_item_type: xAOD.PFO_v1
    cpp_container_type: DataVector<xAOD::PFO_v1>
    python_container_type: Iterable[xAOD.PFO_v1]
    include_file: xAODPFlow/PFOContainer.h
    link_libraries:
      - xAODPFlow
    parameters:
      - name: name
        type: str
  - collection_name: TruthMetaDatas
    cpp_item_type: xAOD::TruthMetaData_v1
    python_item_type: xAOD.TruthMetaData_v1
    cpp_container_type: DataVector<xAOD::TruthMetaData_v1>
    python_container_type: Iterable[xAOD.TruthMetaData_v1]
    include_file: xAODTruth/TruthMetaDataContainer.h
    link_libraries:
      - xAODTruth
    parameters:
      - name: name
        type: str
  - collection_name: TruthPileupEvents
    cpp_item_type: xAOD::TruthPileupEvent_v1
    python_item_type: xAOD.TruthPileupEvent_v1
    cpp_container_type: DataVector<xAOD::TruthPileupEvent_v1>
    python_container_type: Iterable[xAOD.TruthPileupEvent_v1]
    include_file: xAODTruth/TruthPileupEventContainer.h
    link_libraries:
      - xAODTruth
    parameters:
      - name: name
        type: str
  - collection_name: TruthEventBases
    cpp_item_type: xAOD::TruthEventBase_v1
    python_item_type: xAOD.TruthEventBase_v1
    cpp_container_type: DataVector<xAOD::TruthEventBase_v1>
    python_container_type: Iterable[xAOD.TruthEventBase_v1]
    include_file: xAODTruth/TruthEventBaseContainer.h
    link_libraries:
      - xAODTruth
    parameters:
      - name: name
        type: str
  - collection_name: TruthParticles
    cpp_item_type: xAOD::TruthParticle_v1
    python_item_type: xAOD.TruthParticle_v1
    cpp_container_type: DataVector<xAOD::TruthParticle_v1>
    python_container_type: Iterable[xAOD.TruthParticle_v1]
    include_file: xAODTruth/TruthParticleContainer.h
    link_libraries:
      - xAODTruth
    parameters:
      - name: name
        type: str
  - collection_name: TruthVertices
    cpp_item_type: xAOD::TruthVertex_v1
    python_item_type: xAOD.TruthVertex_v1
    cpp_container_type: DataVector<xAOD::TruthVertex_v1>
    python_container_type: Iterable[xAOD.TruthVertex_v1]
    include_file: xAODTruth/TruthVertexContainer.h
    link_libraries:
      - xAODTruth
    parameters:
      - name: name
        type: str
  - collection_name: TruthEvents
    cpp_item_type: xAOD::TruthEvent_v1
    python_item_type: xAOD.TruthEvent_v1
    cpp_container_type: DataVector<xAOD::TruthEvent_v1>
    python_container_type: Iterable[xAOD.TruthEvent_v1]
    include_file: xAODTruth/TruthEventContainer.h
    link_libraries:
      - xAODTruth
    parameters:
      - name: name
        type: str
  - collection_name: LumiBlockRanges
    cpp_item_type: xAOD::LumiBlockRange_v1
    python_item_type: xAOD.LumiBlockRange_v1
    cpp_container_type: DataVector<xAOD::LumiBlockRange_v1>
    python_container_type: Iterable[xAOD.LumiBlockRange_v1]
    include_file: xAODLuminosity/LumiBlockRangeContainer.h
    link_libraries:
      - xAODLuminosity
    parameters:
      - name: name
        type: str
  - collection_name: BCMRawDatas
    cpp_item_type: xAOD::BCMRawData_v1
    python_item_type: xAOD.BCMRawData_v1
    cpp_container_type: DataVector<xAOD::BCMRawData_v1>
    python_container_type: Iterable[xAOD.BCMRawData_v1]
    include_file: xAODLuminosity/BCMRawDataContainer.h
    link_libraries:
      - xAODLuminosity
    parameters:
      - name: name
        type: str
  - collection_name: BTagVertices
    cpp_item_type: xAOD::BTagVertex_v1
    python_item_type: xAOD.BTagVertex_v1
    cpp_container_type: DataVector<xAOD::BTagVertex_v1>
    python_container_type: Iterable[xAOD.BTagVertex_v1]
    include_file: xAODBTagging/BTagVertexContainer.h
    link_libraries:
      - xAODBTagging
    parameters:
      - name: name
        type: str
  - collection_name: BTaggings
    cpp_item_type: xAOD::BTagging_v1
    python_item_type: xAOD.BTagging_v1
    cpp_container_type: DataVector<xAOD::BTagging_v1>
    python_container_type: Iterable[xAOD.BTagging_v1]
    include_file: xAODBTagging/BTaggingContainer.h
    link_libraries:
      - xAODBTagging
    parameters:
      - name: name
        type: str
  - collection_name: MissingET
    cpp_item_type: xAOD::MissingET_v1
    python_item_type: xAOD.MissingET_v1
    cpp_container_type: xAOD::MissingETContainer_v1
    python_container_type: Iterable[xAOD.MissingET_v1]
    include_file: xAODMissingET/MissingETContainer.h
    link_libraries:
      - xAODMissingET
    method_callback: "lambda s, a: {{package_name}}.calibration_support.fixup_collection_call(s, a, 'met_collection')"
    parameters:
      - name: calibrated_collection
        type: Optional[str]
        default_value: None
      - name: uncalibrated_collection
        type: Optional[str]
        default_value: None
  - collection_name: TrigMissingETs
    cpp_item_type: xAOD::TrigMissingET_v1
    python_item_type: xAOD.TrigMissingET_v1
    cpp_container_type: DataVector<xAOD::TrigMissingET_v1>
    python_container_type: Iterable[xAOD.TrigMissingET_v1]
    include_file: xAODTrigMissingET/TrigMissingETContainer.h
    link_libraries:
      - xAODTrigMissingET
    parameters:
      - name: name
        type: str
  - collection_name: ForwardEventInfos
    cpp_item_type: xAOD::ForwardEventInfo_v1
    python_item_type: xAOD.ForwardEventInfo_v1
    cpp_container_type: DataVector<xAOD::ForwardEventInfo_v1>
    python_container_type: Iterable[xAOD.ForwardEventInfo_v1]
    include_file: xAODForward/ForwardEventInfoContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: ALFADatas
    cpp_item_type: xAOD::ALFAData_v1
    python_item_type: xAOD.ALFAData_v1
    cpp_container_type: DataVector<xAOD::ALFAData_v1>
    python_container_type: Iterable[xAOD.ALFAData_v1]
    include_file: xAODForward/ALFADataContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: MBTSModules
    cpp_item_type: xAOD::MBTSModule_v1
    python_item_type: xAOD.MBTSModule_v1
    cpp_container_type: DataVector<xAOD::MBTSModule_v1>
    python_container_type: Iterable[xAOD.MBTSModule_v1]
    include_file: xAODForward/MBTSModuleContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: AFPToFTracks
    cpp_item_type: xAOD::AFPToFTrack_v1
    python_item_type: xAOD.AFPToFTrack_v1
    cpp_container_type: DataVector<xAOD::AFPToFTrack_v1>
    python_container_type: Iterable[xAOD.AFPToFTrack_v1]
    include_file: xAODForward/AFPToFTrackContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: AFPSiHits
    cpp_item_type: xAOD::AFPSiHit_v2
    python_item_type: xAOD.AFPSiHit_v2
    cpp_container_type: DataVector<xAOD::AFPSiHit_v2>
    python_container_type: Iterable[xAOD.AFPSiHit_v2]
    include_file: xAODForward/AFPSiHitContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: ZdcModules
    cpp_item_type: xAOD::ZdcModule_v1
    python_item_type: xAOD.ZdcModule_v1
    cpp_container_type: DataVector<xAOD::ZdcModule_v1>
    python_container_type: Iterable[xAOD.ZdcModule_v1]
    include_file: xAODForward/ZdcModuleContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: AFPVertexs
    cpp_item_type: xAOD::AFPVertex_v1
    python_item_type: xAOD.AFPVertex_v1
    cpp_container_type: DataVector<xAOD::AFPVertex_v1>
    python_container_type: Iterable[xAOD.AFPVertex_v1]
    include_file: xAODForward/AFPVertexContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: AFPDatas
    cpp_item_type: xAOD::AFPData_v1
    python_item_type: xAOD.AFPData_v1
    cpp_container_type: DataVector<xAOD::AFPData_v1>
    python_container_type: Iterable[xAOD.AFPData_v1]
    include_file: xAODForward/AFPDataContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: AFPTracks
    cpp_item_type: xAOD::AFPTrack_v2
    python_item_type: xAOD.AFPTrack_v2
    cpp_container_type: DataVector<xAOD::AFPTrack_v2>
    python_container_type: Iterable[xAOD.AFPTrack_v2]
    include_file: xAODForward/AFPTrackContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: AFPProtons
    cpp_item_type: xAOD::AFPProton_v1
    python_item_type: xAOD.AFPProton_v1
    cpp_container_type: DataVector<xAOD::AFPProton_v1>
    python_container_type: Iterable[xAOD.AFPProton_v1]
    include_file: xAODForward/AFPProtonContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: AFPToFHits
    cpp_item_type: xAOD::AFPToFHit_v1
    python_item_type: xAOD.AFPToFHit_v1
    cpp_container_type: DataVector<xAOD::AFPToFHit_v1>
    python_container_type: Iterable[xAOD.AFPToFHit_v1]
    include_file: xAODForward/AFPToFHitContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: AFPSiHitsClusters
    cpp_item_type: xAOD::AFPSiHitsCluster_v1
    python_item_type: xAOD.AFPSiHitsCluster_v1
    cpp_container_type: DataVector<xAOD::AFPSiHitsCluster_v1>
    python_container_type: Iterable[xAOD.AFPSiHitsCluster_v1]
    include_file: xAODForward/AFPSiHitsClusterContainer.h
    link_libraries:
      - xAODForward
    parameters:
      - name: name
        type: str
  - collection_name: TrigRNNOutputs
    cpp_item_type: xAOD::TrigRNNOutput_v2
    python_item_type: xAOD.TrigRNNOutput_v2
    cpp_container_type: DataVector<xAOD::TrigRNNOutput_v2>
    python_container_type: Iterable[xAOD.TrigRNNOutput_v2]
    include_file: xAODTrigRinger/TrigRNNOutputContainer.h
    link_libraries:
      - xAODTrigRinger
    parameters:
      - name: name
        type: str
  - collection_name: TrigRingerRingss
    cpp_item_type: xAOD::TrigRingerRings_v2
    python_item_type: xAOD.TrigRingerRings_v2
    cpp_container_type: DataVector<xAOD::TrigRingerRings_v2>
    python_container_type: Iterable[xAOD.TrigRingerRings_v2]
    include_file: xAODTrigRinger/TrigRingerRingsContainer.h
    link_libraries:
      - xAODTrigRinger
    parameters:
      - name: name
        type: str
  - collection_name: TrigBphyss
    cpp_item_type: xAOD::TrigBphys_v1
    python_item_type: xAOD.TrigBphys_v1
    cpp_container_type: DataVector<xAOD::TrigBphys_v1>
    python_container_type: Iterable[xAOD.TrigBphys_v1]
    include_file: xAODTrigBphys/TrigBphysContainer.h
    link_libraries:
      - xAODTrigBphys
    parameters:
      - name: name
        type: str
  - collection_name: JetRoIs
    cpp_item_type: xAOD::JetRoI_v2
    python_item_type: xAOD.JetRoI_v2
    cpp_container_type: DataVector<xAOD::JetRoI_v2>
    python_container_type: Iterable[xAOD.JetRoI_v2]
    include_file: xAODTrigger/JetRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: jFexSumETRoIs
    cpp_item_type: xAOD::jFexSumETRoI_v1
    python_item_type: xAOD.jFexSumETRoI_v1
    cpp_container_type: DataVector<xAOD::jFexSumETRoI_v1>
    python_container_type: Iterable[xAOD.jFexSumETRoI_v1]
    include_file: xAODTrigger/jFexSumETRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: TrigComposites
    cpp_item_type: xAOD::TrigComposite_v1
    python_item_type: xAOD.TrigComposite_v1
    cpp_container_type: DataVector<xAOD::TrigComposite_v1>
    python_container_type: Iterable[xAOD.TrigComposite_v1]
    include_file: xAODTrigger/TrigCompositeContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: jFexTauRoIs
    cpp_item_type: xAOD::jFexTauRoI_v1
    python_item_type: xAOD.jFexTauRoI_v1
    cpp_container_type: DataVector<xAOD::jFexTauRoI_v1>
    python_container_type: Iterable[xAOD.jFexTauRoI_v1]
    include_file: xAODTrigger/jFexTauRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: jFexMETRoIs
    cpp_item_type: xAOD::jFexMETRoI_v1
    python_item_type: xAOD.jFexMETRoI_v1
    cpp_container_type: DataVector<xAOD::jFexMETRoI_v1>
    python_container_type: Iterable[xAOD.jFexMETRoI_v1]
    include_file: xAODTrigger/jFexMETRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: eFexTauRoIs
    cpp_item_type: xAOD::eFexTauRoI_v1
    python_item_type: xAOD.eFexTauRoI_v1
    cpp_container_type: DataVector<xAOD::eFexTauRoI_v1>
    python_container_type: Iterable[xAOD.eFexTauRoI_v1]
    include_file: xAODTrigger/eFexTauRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: gFexGlobalRoIs
    cpp_item_type: xAOD::gFexGlobalRoI_v1
    python_item_type: xAOD.gFexGlobalRoI_v1
    cpp_container_type: DataVector<xAOD::gFexGlobalRoI_v1>
    python_container_type: Iterable[xAOD.gFexGlobalRoI_v1]
    include_file: xAODTrigger/gFexGlobalRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: gFexJetRoIs
    cpp_item_type: xAOD::gFexJetRoI_v1
    python_item_type: xAOD.gFexJetRoI_v1
    cpp_container_type: DataVector<xAOD::gFexJetRoI_v1>
    python_container_type: Iterable[xAOD.gFexJetRoI_v1]
    include_file: xAODTrigger/gFexJetRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: TriggerMenus
    cpp_item_type: xAOD::TriggerMenu_v1
    python_item_type: xAOD.TriggerMenu_v1
    cpp_container_type: DataVector<xAOD::TriggerMenu_v1>
    python_container_type: Iterable[xAOD.TriggerMenu_v1]
    include_file: xAODTrigger/TriggerMenuContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: TrigPassBitss
    cpp_item_type: xAOD::TrigPassBits_v1
    python_item_type: xAOD.TrigPassBits_v1
    cpp_container_type: DataVector<xAOD::TrigPassBits_v1>
    python_container_type: Iterable[xAOD.TrigPassBits_v1]
    include_file: xAODTrigger/TrigPassBitsContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: TriggerMenuJsons
    cpp_item_type: xAOD::TriggerMenuJson_v1
    python_item_type: xAOD.TriggerMenuJson_v1
    cpp_container_type: DataVector<xAOD::TriggerMenuJson_v1>
    python_container_type: Iterable[xAOD.TriggerMenuJson_v1]
    include_file: xAODTrigger/TriggerMenuJsonContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: jFexLRJetRoIs
    cpp_item_type: xAOD::jFexLRJetRoI_v1
    python_item_type: xAOD.jFexLRJetRoI_v1
    cpp_container_type: DataVector<xAOD::jFexLRJetRoI_v1>
    python_container_type: Iterable[xAOD.jFexLRJetRoI_v1]
    include_file: xAODTrigger/jFexLRJetRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: jFexSRJetRoIs
    cpp_item_type: xAOD::jFexSRJetRoI_v1
    python_item_type: xAOD.jFexSRJetRoI_v1
    cpp_container_type: DataVector<xAOD::jFexSRJetRoI_v1>
    python_container_type: Iterable[xAOD.jFexSRJetRoI_v1]
    include_file: xAODTrigger/jFexSRJetRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: L1TopoSimResultss
    cpp_item_type: xAOD::L1TopoSimResults_v1
    python_item_type: xAOD.L1TopoSimResults_v1
    cpp_container_type: DataVector<xAOD::L1TopoSimResults_v1>
    python_container_type: Iterable[xAOD.L1TopoSimResults_v1]
    include_file: xAODTrigger/L1TopoSimResultsContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: eFexEMRoIs
    cpp_item_type: xAOD::eFexEMRoI_v1
    python_item_type: xAOD.eFexEMRoI_v1
    cpp_container_type: DataVector<xAOD::eFexEMRoI_v1>
    python_container_type: Iterable[xAOD.eFexEMRoI_v1]
    include_file: xAODTrigger/eFexEMRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: EmTauRoIs
    cpp_item_type: xAOD::EmTauRoI_v2
    python_item_type: xAOD.EmTauRoI_v2
    cpp_container_type: DataVector<xAOD::EmTauRoI_v2>
    python_container_type: Iterable[xAOD.EmTauRoI_v2]
    include_file: xAODTrigger/EmTauRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: MuonRoIs
    cpp_item_type: xAOD::MuonRoI_v1
    python_item_type: xAOD.MuonRoI_v1
    cpp_container_type: DataVector<xAOD::MuonRoI_v1>
    python_container_type: Iterable[xAOD.MuonRoI_v1]
    include_file: xAODTrigger/MuonRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: jFexFwdElRoIs
    cpp_item_type: xAOD::jFexFwdElRoI_v1
    python_item_type: xAOD.jFexFwdElRoI_v1
    cpp_container_type: DataVector<xAOD::jFexFwdElRoI_v1>
    python_container_type: Iterable[xAOD.jFexFwdElRoI_v1]
    include_file: xAODTrigger/jFexFwdElRoIContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: BunchConfs
    cpp_item_type: xAOD::BunchConf_v1
    python_item_type: xAOD.BunchConf_v1
    cpp_container_type: DataVector<xAOD::BunchConf_v1>
    python_container_type: Iterable[xAOD.BunchConf_v1]
    include_file: xAODTrigger/BunchConfContainer.h
    link_libraries:
      - xAODTrigger
    parameters:
      - name: name
        type: str
  - collection_name: TrackParticleClusterAssociations
    cpp_item_type: xAOD::TrackParticleClusterAssociation_v1
    python_item_type: xAOD.TrackParticleClusterAssociation_v1
    cpp_container_type: DataVector<xAOD::TrackParticleClusterAssociation_v1>
    python_container_type: Iterable[xAOD.TrackParticleClusterAssociation_v1]
    include_file: xAODAssociations/TrackParticleClusterAssociationContainer.h
    link_libraries:
      - xAODAssociations
    parameters:
      - name: name
        type: str
  - collection_name: Jets
    cpp_item_type: xAOD::Jet_v1
    python_item_type: xAOD.Jet_v1
    cpp_container_type: DataVector<xAOD::Jet_v1>
    python_container_type: Iterable[xAOD.Jet_v1]
    include_file: xAODJet/JetContainer.h
    link_libraries:
      - xAODJet
    method_callback: "lambda s, a: {{package_name}}.calibration_support.fixup_collection_call(s, a, 'jet_collection')"
    parameters:
      - name: calibrated_collection
        type: Optional[str]
        default_value: None
      - name: uncalibrated_collection
        type: Optional[str]
        default_value: None
  - collection_name: IParticles
    cpp_item_type: xAOD::IParticle
    python_item_type: xAOD.IParticle
    cpp_container_type: DataVector<xAOD::IParticle>
    python_container_type: Iterable[xAOD.IParticle]
    include_file: xAODBase/IParticleContainer.h
    link_libraries:
      - xAODBase
    parameters:
      - name: name
        type: str
  - collection_name: Electrons
    cpp_item_type: xAOD::Electron_v1
    python_item_type: xAOD.Electron_v1
    cpp_container_type: DataVector<xAOD::Electron_v1>
    python_container_type: Iterable[xAOD.Electron_v1]
    include_file: xAODEgamma/ElectronContainer.h
    link_libraries:
      - xAODEgamma
    method_callback: "lambda s, a: {{package_name}}.calibration_support.fixup_collection_call(s, a, 'electron_collection')"
    parameters:
      - name: calibrated_collection
        type: Optional[str]
        default_value: None
      - name: uncalibrated_collection
        type: Optional[str]
        default_value: None
  - collection_name: Photons
    cpp_item_type: xAOD::Photon_v1
    python_item_type: xAOD.Photon_v1
    cpp_container_type: DataVector<xAOD::Photon_v1>
    python_container_type: Iterable[xAOD.Photon_v1]
    include_file: xAODEgamma/PhotonContainer.h
    link_libraries:
      - xAODEgamma
    method_callback: "lambda s, a: {{package_name}}.calibration_support.fixup_collection_call(s, a, 'photon_collection')"
    parameters:
      - name: calibrated_collection
        type: Optional[str]
        default_value: None
      - name: uncalibrated_collection
        type: Optional[str]
        default_value: None
  - collection_name: Egammas
    cpp_item_type: xAOD::Egamma_v1
    python_item_type: xAOD.Egamma_v1
    cpp_container_type: DataVector<xAOD::Egamma_v1>
    python_container_type: Iterable[xAOD.Egamma_v1]
    include_file: xAODEgamma/EgammaContainer.h
    link_libraries:
      - xAODEgamma
    parameters:
      - name: name
        type: str
  - collection_name: EventInfos
    cpp_item_type: xAOD::EventInfo_v1
    python_item_type: xAOD.EventInfo_v1
    cpp_container_type: DataVector<xAOD::EventInfo_v1>
    python_container_type: Iterable[xAOD.EventInfo_v1]
    include_file: xAODEventInfo/EventInfoContainer.h
    link_libraries:
      - xAODEventInfo
    parameters:
      - name: name
        type: str
  - collection_name: RingSetConfs
    cpp_item_type: xAOD::RingSetConf_v1
    python_item_type: xAOD.RingSetConf_v1
    cpp_container_type: DataVector<xAOD::RingSetConf_v1>
    python_container_type: Iterable[xAOD.RingSetConf_v1]
    include_file: xAODCaloRings/RingSetConfContainer.h
    link_libraries:
      - xAODCaloRings
    parameters:
      - name: name
        type: str
  - collection_name: CaloRingss
    cpp_item_type: xAOD::CaloRings_v1
    python_item_type: xAOD.CaloRings_v1
    cpp_container_type: DataVector<xAOD::CaloRings_v1>
    python_container_type: Iterable[xAOD.CaloRings_v1]
    include_file: xAODCaloRings/CaloRingsContainer.h
    link_libraries:
      - xAODCaloRings
    parameters:
      - name: name
        type: str
  - collection_name: RingSets
    cpp_item_type: xAOD::RingSet_v1
    python_item_type: xAOD.RingSet_v1
    cpp_container_type: DataVector<xAOD::RingSet_v1>
    python_container_type: Iterable[xAOD.RingSet_v1]
    include_file: xAODCaloRings/RingSetContainer.h
    link_libraries:
      - xAODCaloRings
    parameters:
      - name: name
        type: str
  - collection_name: L2CombinedMuons
    cpp_item_type: xAOD::L2CombinedMuon_v1
    python_item_type: xAOD.L2CombinedMuon_v1
    cpp_container_type: DataVector<xAOD::L2CombinedMuon_v1>
    python_container_type: Iterable[xAOD.L2CombinedMuon_v1]
    include_file: xAODTrigMuon/L2CombinedMuonContainer.h
    link_libraries:
      - xAODTrigMuon
    parameters:
      - name: name
        type: str
  - collection_name: L2StandAloneMuons
    cpp_item_type: xAOD::L2StandAloneMuon_v2
    python_item_type: xAOD.L2StandAloneMuon_v2
    cpp_container_type: DataVector<xAOD::L2StandAloneMuon_v2>
    python_container_type: Iterable[xAOD.L2StandAloneMuon_v2]
    include_file: xAODTrigMuon/L2StandAloneMuonContainer.h
    link_libraries:
      - xAODTrigMuon
    parameters:
      - name: name
        type: str
  - collection_name: L2IsoMuons
    cpp_item_type: xAOD::L2IsoMuon_v1
    python_item_type: xAOD.L2IsoMuon_v1
    cpp_container_type: DataVector<xAOD::L2IsoMuon_v1>
    python_container_type: Iterable[xAOD.L2IsoMuon_v1]
    include_file: xAODTrigMuon/L2IsoMuonContainer.h
    link_libraries:
      - xAODTrigMuon
    parameters:
      - name: name
        type: str
  - collection_name: TrigT2ZdcSignalss
    cpp_item_type: xAOD::TrigT2ZdcSignals_v1
    python_item_type: xAOD.TrigT2ZdcSignals_v1
    cpp_container_type: DataVector<xAOD::TrigT2ZdcSignals_v1>
    python_container_type: Iterable[xAOD.TrigT2ZdcSignals_v1]
    include_file: xAODTrigMinBias/TrigT2ZdcSignalsContainer.h
    link_libraries:
      - xAODTrigMinBias
    parameters:
      - name: name
        type: str
  - collection_name: TrigTrackCountss
    cpp_item_type: xAOD::TrigTrackCounts_v1
    python_item_type: xAOD.TrigTrackCounts_v1
    cpp_container_type: DataVector<xAOD::TrigTrackCounts_v1>
    python_container_type: Iterable[xAOD.TrigTrackCounts_v1]
    include_file: xAODTrigMinBias/TrigTrackCountsContainer.h
    link_libraries:
      - xAODTrigMinBias
    parameters:
      - name: name
        type: str
  - collection_name: TrigHisto2Ds
    cpp_item_type: xAOD::TrigHisto2D_v1
    python_item_type: xAOD.TrigHisto2D_v1
    cpp_container_type: DataVector<xAOD::TrigHisto2D_v1>
    python_container_type: Iterable[xAOD.TrigHisto2D_v1]
    include_file: xAODTrigMinBias/TrigHisto2DContainer.h
    link_libraries:
      - xAODTrigMinBias
    parameters:
      - name: name
        type: str
  - collection_name: TrigSpacePointCountss
    cpp_item_type: xAOD::TrigSpacePointCounts_v1
    python_item_type: xAOD.TrigSpacePointCounts_v1
    cpp_container_type: DataVector<xAOD::TrigSpacePointCounts_v1>
    python_container_type: Iterable[xAOD.TrigSpacePointCounts_v1]
    include_file: xAODTrigMinBias/TrigSpacePointCountsContainer.h
    link_libraries:
      - xAODTrigMinBias
    parameters:
      - name: name
        type: str
  - collection_name: TrigVertexCountss
    cpp_item_type: xAOD::TrigVertexCounts_v1
    python_item_type: xAOD.TrigVertexCounts_v1
    cpp_container_type: DataVector<xAOD::TrigVertexCounts_v1>
    python_container_type: Iterable[xAOD.TrigVertexCounts_v1]
    include_file: xAODTrigMinBias/TrigVertexCountsContainer.h
    link_libraries:
      - xAODTrigMinBias
    parameters:
      - name: name
        type: str
  - collection_name: TrigT2MbtsBitss
    cpp_item_type: xAOD::TrigT2MbtsBits_v1
    python_item_type: xAOD.TrigT2MbtsBits_v1
    cpp_container_type: DataVector<xAOD::TrigT2MbtsBits_v1>
    python_container_type: Iterable[xAOD.TrigT2MbtsBits_v1]
    include_file: xAODTrigMinBias/TrigT2MbtsBitsContainer.h
    link_libraries:
      - xAODTrigMinBias
    parameters:
      - name: name
        type: str
  - collection_name: TrackStates
    cpp_item_type: xAOD::TrackState_v1
    python_item_type: xAOD.TrackState_v1
    cpp_container_type: DataVector<xAOD::TrackState_v1>
    python_container_type: Iterable[xAOD.TrackState_v1]
    include_file: xAODTracking/TrackStateContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: TrackMeasurementValidations
    cpp_item_type: xAOD::TrackMeasurementValidation_v1
    python_item_type: xAOD.TrackMeasurementValidation_v1
    cpp_container_type: DataVector<xAOD::TrackMeasurementValidation_v1>
    python_container_type: Iterable[xAOD.TrackMeasurementValidation_v1]
    include_file: xAODTracking/TrackMeasurementValidationContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: TrackJacobians
    cpp_item_type: xAOD::TrackJacobian_v1
    python_item_type: xAOD.TrackJacobian_v1
    cpp_container_type: DataVector<xAOD::TrackJacobian_v1>
    python_container_type: Iterable[xAOD.TrackJacobian_v1]
    include_file: xAODTracking/TrackJacobianContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: NeutralParticles
    cpp_item_type: xAOD::NeutralParticle_v1
    python_item_type: xAOD.NeutralParticle_v1
    cpp_container_type: DataVector<xAOD::NeutralParticle_v1>
    python_container_type: Iterable[xAOD.NeutralParticle_v1]
    include_file: xAODTracking/NeutralParticleContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: TrackMeasurements
    cpp_item_type: xAOD::TrackMeasurement_v1
    python_item_type: xAOD.TrackMeasurement_v1
    cpp_container_type: DataVector<xAOD::TrackMeasurement_v1>
    python_container_type: Iterable[xAOD.TrackMeasurement_v1]
    include_file: xAODTracking/TrackMeasurementContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: SCTRawHitValidations
    cpp_item_type: xAOD::SCTRawHitValidation_v1
    python_item_type: xAOD.SCTRawHitValidation_v1
    cpp_container_type: DataVector<xAOD::SCTRawHitValidation_v1>
    python_container_type: Iterable[xAOD.SCTRawHitValidation_v1]
    include_file: xAODTracking/SCTRawHitValidationContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: TrackParticles
    cpp_item_type: xAOD::TrackParticle_v1
    python_item_type: xAOD.TrackParticle_v1
    cpp_container_type: DataVector<xAOD::TrackParticle_v1>
    python_container_type: Iterable[xAOD.TrackParticle_v1]
    include_file: xAODTracking/TrackParticleContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: TrackStateValidations
    cpp_item_type: xAOD::TrackStateValidation_v1
    python_item_type: xAOD.TrackStateValidation_v1
    cpp_container_type: DataVector<xAOD::TrackStateValidation_v1>
    python_container_type: Iterable[xAOD.TrackStateValidation_v1]
    include_file: xAODTracking/TrackStateValidationContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: TrackParameterss
    cpp_item_type: xAOD::TrackParameters_v1
    python_item_type: xAOD.TrackParameters_v1
    cpp_container_type: DataVector<xAOD::TrackParameters_v1>
    python_container_type: Iterable[xAOD.TrackParameters_v1]
    include_file: xAODTracking/TrackParametersContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: Vertices
    cpp_item_type: xAOD::Vertex_v1
    python_item_type: xAOD.Vertex_v1
    cpp_container_type: DataVector<xAOD::Vertex_v1>
    python_container_type: Iterable[xAOD.Vertex_v1]
    include_file: xAODTracking/VertexContainer.h
    link_libraries:
      - xAODTracking
    parameters:
      - name: name
        type: str
  - collection_name: EventInfo
    cpp_item_type: xAOD::EventInfo_v1
    python_item_type: xAOD.EventInfo_v1
    cpp_container_type: xAOD::EventInfo_v1
    python_container_type: xAOD.EventInfo_v1
    include_file: xAODEventInfo/versions/EventInfo_v1.h
    link_libraries:
      - xAODEventInfo
    parameters:
      - name: name
        type: str
classes:
  - python_name: ElementLink_DataVector_xAOD_AFPProton_v1__
    cpp_name: ElementLink<DataVector<xAOD::AFPProton_v1> >
    also_behaves_like:
      - xAOD::AFPProton_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_AFPSiHit_v2__
    cpp_name: ElementLink<DataVector<xAOD::AFPSiHit_v2> >
    also_behaves_like:
      - xAOD::AFPSiHit_v2**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_AFPSiHitsCluster_v1__
    cpp_name: ElementLink<DataVector<xAOD::AFPSiHitsCluster_v1> >
    also_behaves_like:
      - xAOD::AFPSiHitsCluster_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_AFPToFHit_v1__
    cpp_name: ElementLink<DataVector<xAOD::AFPToFHit_v1> >
    also_behaves_like:
      - xAOD::AFPToFHit_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_AFPToFTrack_v1__
    cpp_name: ElementLink<DataVector<xAOD::AFPToFTrack_v1> >
    also_behaves_like:
      - xAOD::AFPToFTrack_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_AFPTrack_v2__
    cpp_name: ElementLink<DataVector<xAOD::AFPTrack_v2> >
    also_behaves_like:
      - xAOD::AFPTrack_v2**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_CaloCluster_v1__
    cpp_name: ElementLink<DataVector<xAOD::CaloCluster_v1> >
    also_behaves_like:
      - xAOD::CaloCluster_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_EventInfo_v1__
    cpp_name: ElementLink<DataVector<xAOD::EventInfo_v1> >
    also_behaves_like:
      - xAOD::EventInfo_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_IParticle__
    cpp_name: ElementLink<DataVector<xAOD::IParticle> >
    also_behaves_like:
      - xAOD::IParticle**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_Jet_v1__
    cpp_name: ElementLink<DataVector<xAOD::Jet_v1> >
    also_behaves_like:
      - xAOD::Jet_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_L2StandAloneMuon_v2__
    cpp_name: ElementLink<DataVector<xAOD::L2StandAloneMuon_v2> >
    also_behaves_like:
      - xAOD::L2StandAloneMuon_v2**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_MuonSegment_v1__
    cpp_name: ElementLink<DataVector<xAOD::MuonSegment_v1> >
    also_behaves_like:
      - xAOD::MuonSegment_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_Muon_v1__
    cpp_name: ElementLink<DataVector<xAOD::Muon_v1> >
    also_behaves_like:
      - xAOD::Muon_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_NeutralParticle_v1__
    cpp_name: ElementLink<DataVector<xAOD::NeutralParticle_v1> >
    also_behaves_like:
      - xAOD::NeutralParticle_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_PFO_v1__
    cpp_name: ElementLink<DataVector<xAOD::PFO_v1> >
    also_behaves_like:
      - xAOD::PFO_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_RingSet_v1__
    cpp_name: ElementLink<DataVector<xAOD::RingSet_v1> >
    also_behaves_like:
      - xAOD::RingSet_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_TauTrack_v1__
    cpp_name: ElementLink<DataVector<xAOD::TauTrack_v1> >
    also_behaves_like:
      - xAOD::TauTrack_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_TrackMeasurementValidation_v1__
    cpp_name: ElementLink<DataVector<xAOD::TrackMeasurementValidation_v1> >
    also_behaves_like:
      - xAOD::TrackMeasurementValidation_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_TrackParticle_v1__
    cpp_name: ElementLink<DataVector<xAOD::TrackParticle_v1> >
    also_behaves_like:
      - xAOD::TrackParticle_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_TrigBphys_v1__
    cpp_name: ElementLink<DataVector<xAOD::TrigBphys_v1> >
    also_behaves_like:
      - xAOD::TrigBphys_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_TrigEMCluster_v1__
    cpp_name: ElementLink<DataVector<xAOD::TrigEMCluster_v1> >
    also_behaves_like:
      - xAOD::TrigEMCluster_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_TrigRingerRings_v2__
    cpp_name: ElementLink<DataVector<xAOD::TrigRingerRings_v2> >
    also_behaves_like:
      - xAOD::TrigRingerRings_v2**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_TruthParticle_v1__
    cpp_name: ElementLink<DataVector<xAOD::TruthParticle_v1> >
    also_behaves_like:
      - xAOD::TruthParticle_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_TruthVertex_v1__
    cpp_name: ElementLink<DataVector<xAOD::TruthVertex_v1> >
    also_behaves_like:
      - xAOD::TruthVertex_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_UncalibratedMeasurement_v1__
    cpp_name: ElementLink<DataVector<xAOD::UncalibratedMeasurement_v1> >
    also_behaves_like:
      - xAOD::UncalibratedMeasurement_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ElementLink_DataVector_xAOD_Vertex_v1__
    cpp_name: ElementLink<DataVector<xAOD::Vertex_v1> >
    also_behaves_like:
      - xAOD::Vertex_v1**
    methods:
      - name: isValid
        return_type: bool
  - python_name: ROOT.Detail.TSchemaRuleSet
    cpp_name: ROOT::Detail::TSchemaRuleSet
    methods:
      - name: GetClassVersion
        return_type: int
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: ROOT.Detail.TSchemaRuleSet.TMatches
    cpp_name: ROOT::Detail::TSchemaRuleSet::TMatches
    is_container_of_cpp: __gnu_cxx::__normal_iterator<const ROOT::TSchemaRule**,vector<const ROOT::TSchemaRule*> >
    is_container_of_python: __gnu_cxx.__normal_iterator_ROOT_TSchemaRule_vector_ROOT_TSchemaRule__
    methods:
      - name: empty
        return_type: bool
      - name: data
        return_type: const ROOT::TSchemaRule*
  - python_name: ROOT.Fit.BinData
    cpp_name: ROOT::Fit::BinData
    methods:
      - name: HaveCoordErrors
        return_type: bool
      - name: HaveAsymErrors
        return_type: bool
      - name: LogTransform
        return_type: ROOT::Fit::BinData
      - name: Value
        return_type: double
        arguments:
          - name: ipoint
            type: int
      - name: ValuePtr
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
      - name: ErrorPtr
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
      - name: Error
        return_type: double
        arguments:
          - name: ipoint
            type: int
      - name: InvError
        return_type: double
        arguments:
          - name: ipoint
            type: int
      - name: GetPoint
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
          - name: value
            type: float
      - name: GetCoordErrorComponent
        return_type: double
        arguments:
          - name: ipoint
            type: int
          - name: icoord
            type: int
      - name: CoordErrors
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
      - name: GetPointError
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
          - name: errvalue
            type: float
      - name: GetBinUpEdgeComponent
        return_type: double
        arguments:
          - name: ipoint
            type: int
          - name: icoord
            type: int
      - name: BinUpEdge
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
      - name: HasBinEdges
        return_type: bool
      - name: RefVolume
        return_type: double
      - name: SumOfContent
        return_type: double
      - name: SumOfError2
        return_type: double
      - name: IsWeighted
        return_type: bool
      - name: GetCoordComponent
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
          - name: icoord
            type: int
      - name: Coords
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
      - name: NPoints
        return_type: unsigned int
      - name: Size
        return_type: unsigned int
      - name: NDim
        return_type: unsigned int
      - name: Range
        return_type: const ROOT::Fit::DataRange
  - python_name: ROOT.Fit.DataRange
    cpp_name: ROOT::Fit::DataRange
    methods:
      - name: NDim
        return_type: unsigned int
      - name: Size
        return_type: unsigned int
        arguments:
          - name: icoord
            type: int
      - name: IsSet
        return_type: bool
      - name: IsInside
        return_type: bool
        arguments:
          - name: x
            type: float
          - name: icoord
            type: int
  - python_name: ROOT.Fit.FitConfig
    cpp_name: ROOT::Fit::FitConfig
    methods:
      - name: ParSettings
        return_type: const ROOT::Fit::ParameterSettings
        arguments:
          - name: i
            type: int
      - name: ParamsSettings
        return_type: const vector<ROOT::Fit::ParameterSettings>
      - name: NPar
        return_type: unsigned int
      - name: ParamsValues
        return_type: vector<double>
      - name: CreateMinimizer
        return_type: ROOT::Math::Minimizer*
      - name: MinimizerOptions
        return_type: ROOT::Math::MinimizerOptions
      - name: MinimizerType
        return_type: const string
      - name: MinimizerAlgoType
        return_type: const string
      - name: MinimizerName
        return_type: string
      - name: NormalizeErrors
        return_type: bool
      - name: ParabErrors
        return_type: bool
      - name: MinosErrors
        return_type: bool
      - name: UpdateAfterFit
        return_type: bool
      - name: UseWeightCorrection
        return_type: bool
  - python_name: ROOT.Fit.FitData
    cpp_name: ROOT::Fit::FitData
    methods:
      - name: GetCoordComponent
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
          - name: icoord
            type: int
      - name: Coords
        return_type: const double*
        arguments:
          - name: ipoint
            type: int
      - name: NPoints
        return_type: unsigned int
      - name: Size
        return_type: unsigned int
      - name: NDim
        return_type: unsigned int
      - name: Range
        return_type: const ROOT::Fit::DataRange
  - python_name: ROOT.Fit.FitResult
    cpp_name: ROOT::Fit::FitResult
    methods:
      - name: MinimizerType
        return_type: const string
      - name: IsValid
        return_type: bool
      - name: IsEmpty
        return_type: bool
      - name: MinFcnValue
        return_type: double
      - name: NCalls
        return_type: unsigned int
      - name: Edm
        return_type: double
      - name: NTotalParameters
        return_type: unsigned int
      - name: NPar
        return_type: unsigned int
      - name: NFreeParameters
        return_type: unsigned int
      - name: Status
        return_type: int
      - name: CovMatrixStatus
        return_type: int
      - name: FittedBinData
        return_type: const ROOT::Fit::BinData*
      - name: Chi2
        return_type: double
      - name: Ndf
        return_type: unsigned int
      - name: Prob
        return_type: double
      - name: Errors
        return_type: const vector<double>
      - name: GetErrors
        return_type: const double*
      - name: Parameters
        return_type: const vector<double>
      - name: GetParams
        return_type: const double*
      - name: Value
        return_type: double
        arguments:
          - name: i
            type: int
      - name: Parameter
        return_type: double
        arguments:
          - name: i
            type: int
      - name: Error
        return_type: double
        arguments:
          - name: i
            type: int
      - name: ParError
        return_type: double
        arguments:
          - name: i
            type: int
      - name: ParName
        return_type: string
        arguments:
          - name: i
            type: int
      - name: HasMinosError
        return_type: bool
        arguments:
          - name: i
            type: int
      - name: LowerError
        return_type: double
        arguments:
          - name: i
            type: int
      - name: UpperError
        return_type: double
        arguments:
          - name: i
            type: int
      - name: GlobalCC
        return_type: double
        arguments:
          - name: i
            type: int
      - name: CovMatrix
        return_type: double
        arguments:
          - name: i
            type: int
          - name: j
            type: int
      - name: Correlation
        return_type: double
        arguments:
          - name: i
            type: int
          - name: j
            type: int
      - name: Scan
        return_type: bool
        arguments:
          - name: ipar
            type: int
          - name: npoints
            type: int
          - name: pntsx
            type: float
          - name: pntsy
            type: float
          - name: xmin
            type: float
          - name: xmax
            type: float
      - name: Contour
        return_type: bool
        arguments:
          - name: ipar
            type: int
          - name: jpar
            type: int
          - name: npoints
            type: int
          - name: pntsx
            type: float
          - name: pntsy
            type: float
          - name: confLevel
            type: float
      - name: Index
        return_type: int
        arguments:
          - name: name
            type: str
      - name: NormalizedErrors
        return_type: bool
      - name: IsParameterBound
        return_type: bool
        arguments:
          - name: ipar
            type: int
      - name: IsParameterFixed
        return_type: bool
        arguments:
          - name: ipar
            type: int
      - name: ParameterBounds
        return_type: bool
        arguments:
          - name: ipar
            type: int
          - name: lower
            type: float
          - name: upper
            type: float
      - name: GetParameterName
        return_type: string
        arguments:
          - name: ipar
            type: int
  - python_name: ROOT.Fit.ParameterSettings
    cpp_name: ROOT::Fit::ParameterSettings
    methods:
      - name: Value
        return_type: double
      - name: StepSize
        return_type: double
      - name: LowerLimit
        return_type: double
      - name: UpperLimit
        return_type: double
      - name: IsFixed
        return_type: bool
      - name: HasLowerLimit
        return_type: bool
      - name: HasUpperLimit
        return_type: bool
      - name: IsBound
        return_type: bool
      - name: IsDoubleBound
        return_type: bool
      - name: Name
        return_type: const string
  - python_name: ROOT.Math.IBaseParam
    cpp_name: ROOT::Math::IBaseParam
    methods:
      - name: Parameters
        return_type: const double*
      - name: NPar
        return_type: unsigned int
      - name: ParameterName
        return_type: string
        arguments:
          - name: i
            type: int
  - python_name: ROOT.Math.IOptions
    cpp_name: ROOT::Math::IOptions
    methods:
      - name: Clone
        return_type: ROOT::Math::IOptions*
  - python_name: ROOT.Math.Minimizer
    cpp_name: ROOT::Math::Minimizer
    methods:
      - name: SetVariable
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: name
            type: str
          - name: val
            type: float
          - name: step
            type: float
      - name: SetLowerLimitedVariable
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: name
            type: str
          - name: val
            type: float
          - name: step
            type: float
          - name: lower
            type: float
      - name: SetUpperLimitedVariable
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: name
            type: str
          - name: val
            type: float
          - name: step
            type: float
          - name: upper
            type: float
      - name: SetLimitedVariable
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: name
            type: str
          - name: val
            type: float
          - name: step
            type: float
          - name: lower
            type: float
          - name: upper
            type: float
      - name: SetFixedVariable
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: name
            type: str
          - name: val
            type: float
      - name: SetVariableValue
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: value
            type: float
      - name: SetVariableValues
        return_type: bool
        arguments:
          - name: x
            type: float
      - name: SetVariableStepSize
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: value
            type: float
      - name: SetVariableLowerLimit
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: lower
            type: float
      - name: SetVariableUpperLimit
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: upper
            type: float
      - name: SetVariableLimits
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: lower
            type: float
          - name: upper
            type: float
      - name: FixVariable
        return_type: bool
        arguments:
          - name: ivar
            type: int
      - name: ReleaseVariable
        return_type: bool
        arguments:
          - name: ivar
            type: int
      - name: IsFixedVariable
        return_type: bool
        arguments:
          - name: ivar
            type: int
      - name: GetVariableSettings
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: pars
            type: ROOT.Fit.ParameterSettings
      - name: SetVariableInitialRange
        return_type: bool
        arguments:
          - name: noname_arg
            type: int
          - name: noname_arg_1
            type: float
          - name: noname_arg_2
            type: float
      - name: Minimize
        return_type: bool
      - name: MinValue
        return_type: double
      - name: X
        return_type: const double*
      - name: Edm
        return_type: double
      - name: MinGradient
        return_type: const double*
      - name: NCalls
        return_type: unsigned int
      - name: NIterations
        return_type: unsigned int
      - name: NDim
        return_type: unsigned int
      - name: NFree
        return_type: unsigned int
      - name: ProvidesError
        return_type: bool
      - name: Errors
        return_type: const double*
      - name: CovMatrix
        return_type: double
        arguments:
          - name: ivar
            type: int
          - name: jvar
            type: int
      - name: GetCovMatrix
        return_type: bool
        arguments:
          - name: covMat
            type: float
      - name: GetHessianMatrix
        return_type: bool
        arguments:
          - name: hMat
            type: float
      - name: CovMatrixStatus
        return_type: int
      - name: Correlation
        return_type: double
        arguments:
          - name: i
            type: int
          - name: j
            type: int
      - name: GlobalCC
        return_type: double
        arguments:
          - name: ivar
            type: int
      - name: GetMinosError
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: errLow
            type: float
          - name: errUp
            type: float
          - name: option
            type: int
      - name: Hesse
        return_type: bool
      - name: Scan
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: nstep
            type: int
          - name: x
            type: float
          - name: y
            type: float
          - name: xmin
            type: float
          - name: xmax
            type: float
      - name: Contour
        return_type: bool
        arguments:
          - name: ivar
            type: int
          - name: jvar
            type: int
          - name: npoints
            type: int
          - name: xi
            type: float
          - name: xj
            type: float
      - name: VariableName
        return_type: string
        arguments:
          - name: ivar
            type: int
      - name: VariableIndex
        return_type: int
        arguments:
          - name: name
            type: str
      - name: PrintLevel
        return_type: int
      - name: MaxFunctionCalls
        return_type: unsigned int
      - name: MaxIterations
        return_type: unsigned int
      - name: Tolerance
        return_type: double
      - name: Precision
        return_type: double
      - name: Strategy
        return_type: int
      - name: Status
        return_type: int
      - name: MinosStatus
        return_type: int
      - name: ErrorDef
        return_type: double
      - name: IsValidError
        return_type: bool
      - name: Options
        return_type: ROOT::Math::MinimizerOptions
  - python_name: ROOT.Math.MinimizerOptions
    cpp_name: ROOT::Math::MinimizerOptions
    methods:
      - name: DefaultMinimizerType
        return_type: const string
      - name: DefaultMinimizerAlgo
        return_type: const string
      - name: DefaultErrorDef
        return_type: double
      - name: DefaultTolerance
        return_type: double
      - name: DefaultPrecision
        return_type: double
      - name: DefaultMaxFunctionCalls
        return_type: int
      - name: DefaultMaxIterations
        return_type: int
      - name: DefaultStrategy
        return_type: int
      - name: DefaultPrintLevel
        return_type: int
      - name: DefaultExtraOptions
        return_type: ROOT::Math::IOptions*
      - name: PrintLevel
        return_type: int
      - name: MaxFunctionCalls
        return_type: unsigned int
      - name: MaxIterations
        return_type: unsigned int
      - name: Strategy
        return_type: int
      - name: Tolerance
        return_type: double
      - name: Precision
        return_type: double
      - name: ErrorDef
        return_type: double
      - name: ExtraOptions
        return_type: const ROOT::Math::IOptions*
      - name: MinimizerType
        return_type: const string
      - name: MinimizerAlgorithm
        return_type: const string
  - python_name: ROOT.Math.TRandomEngine
    cpp_name: ROOT::Math::TRandomEngine
    methods:
      - name: Rndm
        return_type: double
  - python_name: ROOT.TSchemaRule
    cpp_name: ROOT::TSchemaRule
    methods:
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: TComplex
    cpp_name: TComplex
    methods:
      - name: I
        return_type: TComplex
      - name: One
        return_type: TComplex
      - name: Sqrt
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Exp
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Log
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Log2
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Log10
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Sin
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Cos
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Tan
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: ASin
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: ACos
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: ATan
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: SinH
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: CosH
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: TanH
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: ASinH
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: ACosH
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: ATanH
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Power
        return_type: TComplex
        arguments:
          - name: x
            type: TComplex
          - name: y
            type: TComplex
      - name: Finite
        return_type: int
        arguments:
          - name: c
            type: TComplex
      - name: IsNaN
        return_type: int
        arguments:
          - name: c
            type: TComplex
      - name: Min
        return_type: TComplex
        arguments:
          - name: a
            type: TComplex
          - name: b
            type: TComplex
      - name: Max
        return_type: TComplex
        arguments:
          - name: a
            type: TComplex
          - name: b
            type: TComplex
      - name: Normalize
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Conjugate
        return_type: TComplex
        arguments:
          - name: c
            type: TComplex
      - name: Range
        return_type: TComplex
        arguments:
          - name: lb
            type: TComplex
          - name: ub
            type: TComplex
          - name: c
            type: TComplex
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
  - python_name: TLorentzVector
    cpp_name: TLorentzVector
    methods:
      - name: Vect
        return_type: TVector3
      - name: EtaPhiVector
        return_type: TVector2
      - name: BoostVector
        return_type: TVector3
      - name: Transform
        return_type: TLorentzVector
        arguments:
          - name: noname_arg
            type: TRotation
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: TRandom
    cpp_name: TRandom
    methods:
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: Sizeof
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: TRotation
    cpp_name: TRotation
    methods:
      - name: Transform
        return_type: TRotation
        arguments:
          - name: noname_arg
            type: TRotation
      - name: Inverse
        return_type: TRotation
      - name: Invert
        return_type: TRotation
      - name: RotateAxes
        return_type: TRotation
        arguments:
          - name: newX
            type: TVector3
          - name: newY
            type: TVector3
          - name: newZ
            type: TVector3
      - name: SetToIdentity
        return_type: TRotation
      - name: SetXAxis
        return_type: TRotation
        arguments:
          - name: axis
            type: TVector3
      - name: SetYAxis
        return_type: TRotation
        arguments:
          - name: axis
            type: TVector3
      - name: SetZAxis
        return_type: TRotation
        arguments:
          - name: axis
            type: TVector3
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: TSQLResult
    cpp_name: TSQLResult
    methods:
      - name: GetFieldCount
        return_type: int
      - name: GetRowCount
        return_type: int
      - name: Next
        return_type: TSQLRow*
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: TSQLRow
    cpp_name: TSQLRow
    methods:
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: TThread
    cpp_name: TThread
    methods:
      - name: Kill
        return_type: int
      - name: Exists
        return_type: int
      - name: Lock
        return_type: int
      - name: TryLock
        return_type: int
      - name: UnLock
        return_type: int
      - name: Self
        return_type: TThread*
      - name: SetCancelOn
        return_type: int
      - name: SetCancelOff
        return_type: int
      - name: SetCancelAsynchronous
        return_type: int
      - name: SetCancelDeferred
        return_type: int
      - name: CancelPoint
        return_type: int
      - name: CleanUpPop
        return_type: int
        arguments:
          - name: exe
            type: int
      - name: CleanUp
        return_type: int
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: Sizeof
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: TVector2
    cpp_name: TVector2
    methods:
      - name: Unit
        return_type: TVector2
      - name: Ort
        return_type: TVector2
      - name: Proj
        return_type: TVector2
        arguments:
          - name: v
            type: TVector2
      - name: Norm
        return_type: TVector2
        arguments:
          - name: v
            type: TVector2
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: TVector3
    cpp_name: TVector3
    methods:
      - name: EtaPhiVector
        return_type: TVector2
      - name: Unit
        return_type: TVector3
      - name: Orthogonal
        return_type: TVector3
      - name: Cross
        return_type: TVector3
        arguments:
          - name: noname_arg
            type: TVector3
      - name: Transform
        return_type: TVector3
        arguments:
          - name: noname_arg
            type: TRotation
      - name: XYvector
        return_type: TVector2
      - name: ImplFileLine
        return_type: int
      - name: DeclFileLine
        return_type: int
      - name: DistancetoPrimitive
        return_type: int
        arguments:
          - name: px
            type: int
          - name: py
            type: int
  - python_name: mutex
    cpp_name: mutex
    methods:
      - name: try_lock
        return_type: bool
  - python_name: std.vector_float_
    cpp_name: std::vector<double>
    is_container_of_cpp: double
    is_container_of_python: float
    methods:
      - name: size
        return_type: int
  - python_name: std.vector_int_
    cpp_name: std::vector<int>
    is_container_of_cpp: int
    is_container_of_python: int
    methods:
      - name: size
        return_type: int
  - python_name: str
    cpp_name: string
    is_container_of_cpp: __gnu_cxx::__normal_iterator<char*,string>
    is_container_of_python: __gnu_cxx.__normal_iterator_char_str_
    methods:
      - name: empty
        return_type: bool
      - name: append
        return_type: string
        arguments:
          - name: __str
            type: str
      - name: assign
        return_type: string
        arguments:
          - name: __str
            type: str
      - name: compare
        return_type: int
        arguments:
          - name: __str
            type: str
  - python_name: vector_ElementLink_DataVector_xAOD_AFPProton_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::AFPProton_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::AFPProton_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_AFPProton_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_AFPSiHit_v2___
    cpp_name: vector<ElementLink<DataVector<xAOD::AFPSiHit_v2> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::AFPSiHit_v2>  >
    is_container_of_python: ElementLink_DataVector_xAOD_AFPSiHit_v2__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_AFPSiHitsCluster_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::AFPSiHitsCluster_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::AFPSiHitsCluster_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_AFPSiHitsCluster_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_AFPToFHit_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::AFPToFHit_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::AFPToFHit_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_AFPToFHit_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_AFPToFTrack_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::AFPToFTrack_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::AFPToFTrack_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_AFPToFTrack_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_AFPTrack_v2___
    cpp_name: vector<ElementLink<DataVector<xAOD::AFPTrack_v2> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::AFPTrack_v2>  >
    is_container_of_python: ElementLink_DataVector_xAOD_AFPTrack_v2__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_CaloCluster_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::CaloCluster_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::CaloCluster_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_CaloCluster_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_IParticle___
    cpp_name: vector<ElementLink<DataVector<xAOD::IParticle> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::IParticle>  >
    is_container_of_python: ElementLink_DataVector_xAOD_IParticle__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_MuonSegment_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::MuonSegment_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::MuonSegment_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_MuonSegment_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_NeutralParticle_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::NeutralParticle_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::NeutralParticle_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_NeutralParticle_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_PFO_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::PFO_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::PFO_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_PFO_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_RingSet_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::RingSet_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::RingSet_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_RingSet_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_TauTrack_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::TauTrack_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::TauTrack_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_TauTrack_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_TrackParticle_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::TrackParticle_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_TrackParticle_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_TruthParticle_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::TruthParticle_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::TruthParticle_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_TruthParticle_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_TruthVertex_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::TruthVertex_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::TruthVertex_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_TruthVertex_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ElementLink_DataVector_xAOD_Vertex_v1___
    cpp_name: vector<ElementLink<DataVector<xAOD::Vertex_v1> > >
    is_container_of_cpp: ElementLink<DataVector<xAOD::Vertex_v1>  >
    is_container_of_python: ElementLink_DataVector_xAOD_Vertex_v1__
    methods:
      - name: size
        return_type: int
  - python_name: vector_ROOT_Fit_ParameterSettings_
    cpp_name: vector<ROOT::Fit::ParameterSettings>
    is_container_of_cpp: ROOT::Fit::ParameterSettings
    is_container_of_python: ROOT.Fit.ParameterSettings
    methods:
      - name: size
        return_type: int
  - python_name: vector_bool_
    cpp_name: vector<bool>
    is_container_of_cpp: bool
    is_container_of_python: bool
    methods:
      - name: size
        return_type: int
  - python_name: vector_float_
    cpp_name: vector<double>
    is_container_of_cpp: double
    is_container_of_python: float
    methods:
      - name: size
        return_type: int
  - python_name: vector_float_
    cpp_name: vector<float>
    is_container_of_cpp: float
    is_container_of_python: float
    methods:
      - name: size
        return_type: int
  - python_name: vector_int_
    cpp_name: vector<int>
    is_container_of_cpp: int
    is_container_of_python: int
    methods:
      - name: size
        return_type: int
  - python_name: vector_pair_float_float__
    cpp_name: vector<pair<double,double> >
    is_container_of_cpp: pair<double,double>
    is_container_of_python: pair_float_float_
    methods:
      - name: size
        return_type: int
  - python_name: vector_pair_str_str__
    cpp_name: vector<pair<string,string> >
    is_container_of_cpp: pair<string,string>
    is_container_of_python: pair_str_str_
    methods:
      - name: size
        return_type: int
  - python_name: vector_int_
    cpp_name: vector<short>
    is_container_of_cpp: short
    is_container_of_python: int
    methods:
      - name: size
        return_type: int
  - python_name: vector_str_
    cpp_name: vector<string>
    is_container_of_cpp: string
    is_container_of_python: str
    methods:
      - name: size
        return_type: int
  - python_name: vector_vector_float__
    cpp_name: vector<vector<float> >
    is_container_of_cpp: vector<float>
    is_container_of_python: vector_float_
    methods:
      - name: size
        return_type: int
  - python_name: vector_vector_int__
    cpp_name: vector<vector<int> >
    is_container_of_cpp: vector<int>
    is_container_of_python: vector_int_
    methods:
      - name: size
        return_type: int
  - python_name: vector_vector_str__
    cpp_name: vector<vector<string> >
    is_container_of_cpp: vector<string>
    is_container_of_python: vector_str_
    methods:
      - name: size
        return_type: int
  - python_name: vector_vector_vector_str___
    cpp_name: vector<vector<vector<string> > >
    is_container_of_cpp: vector<vector<string>  >
    is_container_of_python: vector_vector_str__
    methods:
      - name: size
        return_type: int
  - python_name: vector_xAOD_CaloClusterBadChannelData_v1_
    cpp_name: vector<xAOD::CaloClusterBadChannelData_v1>
    is_container_of_cpp: xAOD::CaloClusterBadChannelData_v1
    is_container_of_python: xAOD.CaloClusterBadChannelData_v1
    methods:
      - name: size
        return_type: int
  - python_name: vector_xAOD_CaloVertexedTopoCluster_
    cpp_name: vector<xAOD::CaloVertexedTopoCluster>
    is_container_of_cpp: xAOD::CaloVertexedTopoCluster
    is_container_of_python: xAOD.CaloVertexedTopoCluster
    methods:
      - name: size
        return_type: int
  - python_name: vector_xAOD_EventInfo_v1_StreamTag_
    cpp_name: vector<xAOD::EventInfo_v1::StreamTag>
    is_container_of_cpp: xAOD::EventInfo_v1::StreamTag
    is_container_of_python: xAOD.EventInfo_v1.StreamTag
    methods:
      - name: size
        return_type: int
  - python_name: vector_xAOD_EventInfo_v1_SubEvent_
    cpp_name: vector<xAOD::EventInfo_v1::SubEvent>
    is_container_of_cpp: xAOD::EventInfo_v1::SubEvent
    is_container_of_python: xAOD.EventInfo_v1.SubEvent
    methods:
      - name: size
        return_type: int
  - python_name: vector_xAOD_JetConstituent_
    cpp_name: vector<xAOD::JetConstituent>
    is_container_of_cpp: xAOD::JetConstituent
    is_container_of_python: xAOD.JetConstituent
    methods:
      - name: size
        return_type: int
  - python_name: xAOD.AFPData_v1
    cpp_name: xAOD::AFPData_v1
    include_file: xAODForward/versions/AFPData_v1.h
    methods:
      - name: pixelTotNum
        return_type: int
      - name: pixelStID
        return_type: const vector<int>
      - name: pixelLayerID
        return_type: const vector<int>
      - name: pixelRow
        return_type: const vector<int>
      - name: pixelCol
        return_type: const vector<int>
      - name: pixelE
        return_type: const vector<float>
      - name: layerTotNum
        return_type: int
      - name: layerStID
        return_type: const vector<int>
      - name: layerLayerID
        return_type: const vector<int>
      - name: layerNpix
        return_type: const vector<int>
      - name: layerEtot
        return_type: const vector<float>
      - name: statTotNum
        return_type: int
      - name: statStID
        return_type: const vector<int>
      - name: statNpix
        return_type: const vector<int>
      - name: statEtot
        return_type: const vector<float>
      - name: trkTotNumTracks
        return_type: int
      - name: trkStID
        return_type: const vector<int>
      - name: trkX
        return_type: const vector<float>
      - name: trkY
        return_type: const vector<float>
      - name: trkZ
        return_type: const vector<float>
      - name: trkXslope
        return_type: const vector<float>
      - name: trkYslope
        return_type: const vector<float>
      - name: trkNpix
        return_type: const vector<int>
      - name: trkNholes
        return_type: const vector<int>
      - name: trkQuality
        return_type: const vector<float>
      - name: simSidTotNumHits
        return_type: int
      - name: simSidHitID
        return_type: const vector<int>
      - name: simSidTrackID
        return_type: const vector<int>
      - name: simSidEncoding
        return_type: const vector<int>
      - name: simSidKineticE
        return_type: const vector<float>
      - name: simSidDepE
        return_type: const vector<float>
      - name: simSidPreStepX
        return_type: const vector<float>
      - name: simSidPreStepY
        return_type: const vector<float>
      - name: simSidPreStepZ
        return_type: const vector<float>
      - name: simSidPostStepX
        return_type: const vector<float>
      - name: simSidPostStepY
        return_type: const vector<float>
      - name: simSidPostStepZ
        return_type: const vector<float>
      - name: simSidTime
        return_type: const vector<float>
      - name: simSidStID
        return_type: const vector<int>
      - name: simSidLayerID
        return_type: const vector<int>
      - name: simSidIsVacLayer
        return_type: const vector<int>
      - name: simSidPixelRow
        return_type: const vector<int>
      - name: simSidPixelCol
        return_type: const vector<int>
      - name: tidTotNumTracks
        return_type: int
      - name: tidStID
        return_type: const vector<int>
      - name: tidQID
        return_type: const vector<int>
      - name: tidTrainID
        return_type: const vector<int>
      - name: tidTime
        return_type: const vector<float>
      - name: tidAmplitude
        return_type: const vector<float>
      - name: tidNumSaturatedBars
        return_type: const vector<int>
      - name: simTidTotNumHits
        return_type: int
      - name: simTidHitID
        return_type: const vector<int>
      - name: simTidTrackID
        return_type: const vector<int>
      - name: simTidEncoding
        return_type: const vector<int>
      - name: simTidKineticE
        return_type: const vector<float>
      - name: simTidDepE
        return_type: const vector<float>
      - name: simTidPreStepX
        return_type: const vector<float>
      - name: simTidPreStepY
        return_type: const vector<float>
      - name: simTidPreStepZ
        return_type: const vector<float>
      - name: simTidPostStepX
        return_type: const vector<float>
      - name: simTidPostStepY
        return_type: const vector<float>
      - name: simTidPostStepZ
        return_type: const vector<float>
      - name: simTidTime
        return_type: const vector<float>
      - name: simTidStID
        return_type: const vector<int>
      - name: simTidLayerID
        return_type: const vector<int>
      - name: simTidSensElID
        return_type: const vector<int>
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.AFPProton_v1
    cpp_name: xAOD::AFPProton_v1
    include_file: xAODForward/versions/AFPProton_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: px
        return_type: float
      - name: py
        return_type: float
      - name: pz
        return_type: float
      - name: chi2
        return_type: float
      - name: side
        return_type: int
      - name: methodID
        return_type: int
      - name: afpTrackLinks
        return_type: const vector<ElementLink<DataVector<xAOD::AFPTrack_v2> > >
      - name: nTracks
        return_type: int
      - name: track
        return_type: const xAOD::AFPTrack_v2*
        arguments:
          - name: index
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.AFPSiHit_v2
    cpp_name: xAOD::AFPSiHit_v2
    include_file: xAODForward/versions/AFPSiHit_v2.h
    methods:
      - name: depositedCharge
        return_type: float
      - name: timeOverThreshold
        return_type: float
      - name: stationID
        return_type: int
      - name: pixelLayerID
        return_type: int
      - name: pixelRowIDChip
        return_type: int
      - name: pixelColIDChip
        return_type: int
      - name: pixelHorizID
        return_type: int
      - name: pixelVertID
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.AFPSiHitsCluster_v1
    cpp_name: xAOD::AFPSiHitsCluster_v1
    include_file: xAODForward/versions/AFPSiHitsCluster_v1.h
    methods:
      - name: stationID
        return_type: int
      - name: pixelLayerID
        return_type: int
      - name: xLocal
        return_type: float
      - name: xLocalErr
        return_type: float
      - name: yLocal
        return_type: float
      - name: yLocalErr
        return_type: float
      - name: zLocal
        return_type: float
      - name: zLocalErr
        return_type: float
      - name: depositedCharge
        return_type: float
      - name: nHits
        return_type: int
      - name: hitsLinks
        return_type: const vector<ElementLink<DataVector<xAOD::AFPSiHit_v2> > >
      - name: clusterAlgID
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.AFPToFHit_v1
    cpp_name: xAOD::AFPToFHit_v1
    include_file: xAODForward/versions/AFPToFHit_v1.h
    methods:
      - name: time
        return_type: float
      - name: hptdcChannel
        return_type: int
      - name: barInTrainID
        return_type: int
      - name: trainID
        return_type: int
      - name: pulseLength
        return_type: float
      - name: hptdcID
        return_type: int
      - name: stationID
        return_type: int
      - name: isSideA
        return_type: bool
      - name: isSideC
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.AFPToFTrack_v1
    cpp_name: xAOD::AFPToFTrack_v1
    include_file: xAODForward/versions/AFPToFTrack_v1.h
    methods:
      - name: stationID
        return_type: int
      - name: trainTime
        return_type: float
      - name: trainID
        return_type: int
      - name: trainSize
        return_type: int
      - name: trainNSat
        return_type: int
      - name: hits
        return_type: const vector<ElementLink<DataVector<xAOD::AFPToFHit_v1> > >
      - name: algID
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.AFPTrack_v2
    cpp_name: xAOD::AFPTrack_v2
    include_file: xAODForward/versions/AFPTrack_v2.h
    methods:
      - name: stationID
        return_type: int
      - name: xLocal
        return_type: float
      - name: yLocal
        return_type: float
      - name: zLocal
        return_type: float
      - name: xSlope
        return_type: float
      - name: ySlope
        return_type: float
      - name: nHoles
        return_type: int
      - name: nClusters
        return_type: int
      - name: clusters
        return_type: const vector<ElementLink<DataVector<xAOD::AFPSiHitsCluster_v1> > >
      - name: chi2
        return_type: float
      - name: algID
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.AFPVertex_v1
    cpp_name: xAOD::AFPVertex_v1
    include_file: xAODForward/versions/AFPVertex_v1.h
    methods:
      - name: position
        return_type: float
      - name: protons
        return_type: const vector<ElementLink<DataVector<xAOD::AFPProton_v1> > >
      - name: tofTracks
        return_type: const vector<ElementLink<DataVector<xAOD::AFPToFTrack_v1> > >
      - name: distA
        return_type: float
      - name: distC
        return_type: float
      - name: algID
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.ALFAData_v1
    cpp_name: xAOD::ALFAData_v1
    include_file: xAODForward/versions/ALFAData_v1.h
    methods:
      - name: detectorPartID
        return_type: const vector<int>
      - name: maxTrackCnt
        return_type: int
      - name: overU
        return_type: const vector<float>
      - name: overV
        return_type: const vector<float>
      - name: overY
        return_type: const vector<float>
      - name: numU
        return_type: const vector<int>
      - name: numV
        return_type: const vector<int>
      - name: numY
        return_type: const vector<int>
      - name: mdFibSel
        return_type: const vector<int>
      - name: odFibSel
        return_type: const vector<int>
      - name: xDetCS
        return_type: const vector<float>
      - name: yDetCS
        return_type: const vector<float>
      - name: xLhcCS
        return_type: const vector<float>
      - name: yLhcCS
        return_type: const vector<float>
      - name: zLhcCS
        return_type: const vector<float>
      - name: xRPotCS
        return_type: const vector<float>
      - name: yRPotCS
        return_type: const vector<float>
      - name: xStatCS
        return_type: const vector<float>
      - name: yStatCS
        return_type: const vector<float>
      - name: xBeamCS
        return_type: const vector<float>
      - name: yBeamCS
        return_type: const vector<float>
      - name: scaler
        return_type: const vector<int>
      - name: trigPat
        return_type: const vector<int>
      - name: mdFiberHits
        return_type: const vector<int>
      - name: mdMultiplicity
        return_type: const vector<int>
      - name: odFiberHitsPos
        return_type: const vector<int>
      - name: odFiberHitsNeg
        return_type: const vector<int>
      - name: odMultiplicityPos
        return_type: const vector<int>
      - name: odMultiplicityNeg
        return_type: const vector<int>
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.BCMRawData_v1
    cpp_name: xAOD::BCMRawData_v1
    include_file: xAODLuminosity/versions/BCMRawData_v1.h
    methods:
      - name: bcmWord1
        return_type: unsigned int
      - name: bcmWord2
        return_type: unsigned int
      - name: channel
        return_type: int
      - name: pulse1Position
        return_type: int
      - name: pulse1Width
        return_type: int
      - name: pulse2Position
        return_type: int
      - name: pulse2Width
        return_type: int
      - name: lvl1a
        return_type: int
      - name: bcid
        return_type: int
      - name: lvl1id
        return_type: int
      - name: error
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.BTagVertex_v1
    cpp_name: xAOD::BTagVertex_v1
    include_file: xAODBTagging/versions/BTagVertex_v1.h
    methods:
      - name: chi2
        return_type: float
      - name: NDF
        return_type: float
      - name: pv_compatibility
        return_type: float
      - name: compToOtherSV
        return_type: const vector<float>
      - name: track_chi2
        return_type: const vector<float>
      - name: track_NDF
        return_type: const vector<float>
      - name: track_refPx
        return_type: const vector<float>
      - name: track_refPy
        return_type: const vector<float>
      - name: track_refPz
        return_type: const vector<float>
      - name: track_links
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.BTagging_v1
    cpp_name: xAOD::BTagging_v1
    include_file: xAODBTagging/versions/BTagging_v1.h
    methods:
      - name: SV0_significance3D
        return_type: float
      - name: SV0_TrackParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: SV0_TrackParticle
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: i
            type: int
      - name: nSV0_TrackParticles
        return_type: int
      - name: SV1_pb
        return_type: float
      - name: SV1_pc
        return_type: float
      - name: SV1_pu
        return_type: float
      - name: SV1_loglikelihoodratio
        return_type: double
      - name: SV1_TrackParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: SV1_TrackParticle
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: i
            type: int
      - name: nSV1_TrackParticles
        return_type: int
      - name: IP2D_pb
        return_type: float
      - name: IP2D_pc
        return_type: float
      - name: IP2D_pu
        return_type: float
      - name: IP2D_loglikelihoodratio
        return_type: float
      - name: IP2D_TrackParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: IP2D_TrackParticle
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: i
            type: int
      - name: nIP2D_TrackParticles
        return_type: int
      - name: IP3D_pb
        return_type: float
      - name: IP3D_pc
        return_type: float
      - name: IP3D_pu
        return_type: float
      - name: IP3D_loglikelihoodratio
        return_type: float
      - name: IP3D_TrackParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: IP3D_TrackParticle
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: i
            type: int
      - name: nIP3D_TrackParticles
        return_type: int
      - name: SV1plusIP3D_discriminant
        return_type: float
      - name: JetFitter_pb
        return_type: float
      - name: JetFitter_pc
        return_type: float
      - name: JetFitter_pu
        return_type: float
      - name: JetFitter_loglikelihoodratio
        return_type: float
      - name: MV1_discriminant
        return_type: float
      - name: loglikelihoodratio
        return_type: bool
        arguments:
          - name: taggername
            type: str
          - name: value
            type: float
          - name: signal
            type: str
          - name: bckgd
            type: str
      - name: MVx_discriminant
        return_type: bool
        arguments:
          - name: taggername
            type: str
          - name: value
            type: float
      - name: pu
        return_type: bool
        arguments:
          - name: taggername
            type: str
          - name: value
            type: float
      - name: pb
        return_type: bool
        arguments:
          - name: taggername
            type: str
          - name: value
            type: float
      - name: pc
        return_type: bool
        arguments:
          - name: taggername
            type: str
          - name: value
            type: float
      - name: calcLLR
        return_type: float
        arguments:
          - name: num
            type: float
          - name: den
            type: float
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.BunchConf_v1
    cpp_name: xAOD::BunchConf_v1
    include_file: xAODTrigger/versions/BunchConf_v1.h
    methods:
      - name: configID
        return_type: unsigned int
      - name: collidingBCIDs
        return_type: const vector<int>
      - name: intensitiesBeam1
        return_type: const vector<float>
      - name: intensitiesBeam1Available
        return_type: bool
      - name: intensitiesBeam2
        return_type: const vector<float>
      - name: intensitiesBeam2Available
        return_type: bool
      - name: unpairedBCIDsBeam1
        return_type: const vector<int>
      - name: unpairedBCIDsBeam1Available
        return_type: bool
      - name: unpairedBCIDsBeam2
        return_type: const vector<int>
      - name: unpairedBCIDsBeam2Available
        return_type: bool
      - name: unpairedIntensisitesBeam1
        return_type: const vector<float>
      - name: unpairedIntensitiesBeam1Available
        return_type: bool
      - name: unpairedIntensisitesBeam2
        return_type: const vector<float>
      - name: unpairedIntensitiesBeam2Available
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CMMCPHits_v1
    cpp_name: xAOD::CMMCPHits_v1
    include_file: xAODTrigL1Calo/versions/CMMCPHits_v1.h
    methods:
      - name: crate
        return_type: int
      - name: dataID
        return_type: int
      - name: peak
        return_type: int
      - name: errorVec0
        return_type: const vector<int>
      - name: errorVec1
        return_type: const vector<int>
      - name: hitWord0
        return_type: unsigned int
      - name: hitWord1
        return_type: unsigned int
      - name: error0
        return_type: int
      - name: error1
        return_type: int
      - name: HitWord0
        return_type: unsigned int
      - name: HitWord1
        return_type: unsigned int
      - name: Error0
        return_type: int
      - name: Error1
        return_type: int
      - name: ErrorVec0
        return_type: const vector<int>
      - name: ErrorVec1
        return_type: const vector<int>
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CMMEtSums_v1
    cpp_name: xAOD::CMMEtSums_v1
    include_file: xAODTrigL1Calo/versions/CMMEtSums_v1.h
    methods:
      - name: crate
        return_type: int
      - name: dataID
        return_type: int
      - name: peak
        return_type: int
      - name: etErrorVec
        return_type: const vector<int>
      - name: exErrorVec
        return_type: const vector<int>
      - name: eyErrorVec
        return_type: const vector<int>
      - name: et
        return_type: unsigned int
      - name: ex
        return_type: unsigned int
      - name: ey
        return_type: unsigned int
      - name: etError
        return_type: int
      - name: exError
        return_type: int
      - name: eyError
        return_type: int
      - name: EtErrorVec
        return_type: const vector<int>
      - name: ExErrorVec
        return_type: const vector<int>
      - name: EyErrorVec
        return_type: const vector<int>
      - name: Et
        return_type: unsigned int
      - name: Ex
        return_type: unsigned int
      - name: Ey
        return_type: unsigned int
      - name: EtError
        return_type: int
      - name: ExError
        return_type: int
      - name: EyError
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CMMJetHits_v1
    cpp_name: xAOD::CMMJetHits_v1
    include_file: xAODTrigL1Calo/versions/CMMJetHits_v1.h
    methods:
      - name: crate
        return_type: int
      - name: dataID
        return_type: int
      - name: peak
        return_type: int
      - name: errorVec
        return_type: const vector<int>
      - name: hits
        return_type: unsigned int
      - name: error
        return_type: int
      - name: Hits
        return_type: unsigned int
      - name: Error
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CMXCPHits_v1
    cpp_name: xAOD::CMXCPHits_v1
    include_file: xAODTrigL1Calo/versions/CMXCPHits_v1.h
    methods:
      - name: hits0
        return_type: unsigned int
      - name: hits1
        return_type: unsigned int
      - name: error0
        return_type: unsigned int
      - name: error1
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CMXCPTob_v1
    cpp_name: xAOD::CMXCPTob_v1
    include_file: xAODTrigL1Calo/versions/CMXCPTob_v1.h
    methods:
      - name: error
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CMXEtSums_v1
    cpp_name: xAOD::CMXEtSums_v1
    include_file: xAODTrigL1Calo/versions/CMXEtSums_v1.h
    methods:
      - name: etError
        return_type: unsigned int
      - name: exError
        return_type: unsigned int
      - name: eyError
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CMXJetHits_v1
    cpp_name: xAOD::CMXJetHits_v1
    include_file: xAODTrigL1Calo/versions/CMXJetHits_v1.h
    methods:
      - name: hits0
        return_type: unsigned int
      - name: hits1
        return_type: unsigned int
      - name: error0
        return_type: unsigned int
      - name: error1
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CMXJetTob_v1
    cpp_name: xAOD::CMXJetTob_v1
    include_file: xAODTrigL1Calo/versions/CMXJetTob_v1.h
    methods:
      - name: error
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CMXRoI_v1
    cpp_name: xAOD::CMXRoI_v1
    include_file: xAODTrigL1Calo/versions/CMXRoI_v1.h
    methods:
      - name: missingEtSigHits
        return_type: unsigned int
      - name: roiWord
        return_type: unsigned int
        arguments:
          - name: word
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CPMHits_v1
    cpp_name: xAOD::CPMHits_v1
    include_file: xAODTrigL1Calo/versions/CPMHits_v1.h
    methods:
      - name: crate
        return_type: int
      - name: module
        return_type: int
      - name: peak
        return_type: int
      - name: hitWord0
        return_type: unsigned int
      - name: hitWord1
        return_type: unsigned int
      - name: HitWord0
        return_type: unsigned int
      - name: HitWord1
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CPMRoI_v1
    cpp_name: xAOD::CPMRoI_v1
    include_file: xAODTrigL1Calo/versions/CPMRoI_v1.h
    methods:
      - name: roiWord
        return_type: unsigned int
      - name: crate
        return_type: int
      - name: cpm
        return_type: int
      - name: chip
        return_type: int
      - name: location
        return_type: int
      - name: hits
        return_type: int
      - name: error
        return_type: int
      - name: parity
        return_type: int
      - name: saturation
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CPMTobRoI_v1
    cpp_name: xAOD::CPMTobRoI_v1
    include_file: xAODTrigL1Calo/versions/CPMTobRoI_v1.h
    methods:
      - name: roiWord
        return_type: unsigned int
      - name: crate
        return_type: int
      - name: cpm
        return_type: int
      - name: chip
        return_type: int
      - name: location
        return_type: int
      - name: type
        return_type: int
      - name: energy
        return_type: int
      - name: isolation
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CPMTower_v2
    cpp_name: xAOD::CPMTower_v2
    include_file: xAODTrigL1Calo/versions/CPMTower_v2.h
    methods:
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: emError
        return_type: unsigned int
      - name: hadError
        return_type: unsigned int
      - name: emSliceError
        return_type: unsigned int
        arguments:
          - name: slice
            type: int
      - name: hadSliceError
        return_type: unsigned int
        arguments:
          - name: slice
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CaloClusterBadChannelData_v1
    cpp_name: xAOD::CaloClusterBadChannelData_v1
    include_file: xAODCaloEvent/versions/CaloClusterBadChannelData_v1.h
    methods:
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: badChannel
        return_type: unsigned int
  - python_name: xAOD.CaloCluster_v1
    cpp_name: xAOD::CaloCluster_v1
    include_file: xAODCaloEvent/versions/CaloCluster_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: et
        return_type: double
      - name: numberCells
        return_type: int
      - name: energyBE
        return_type: float
        arguments:
          - name: layer
            type: int
      - name: etaBE
        return_type: float
        arguments:
          - name: layer
            type: int
      - name: phiBE
        return_type: float
        arguments:
          - name: layer
            type: int
      - name: samplingPattern
        return_type: unsigned int
      - name: nSamples
        return_type: unsigned int
      - name: inBarrel
        return_type: bool
      - name: inEndcap
        return_type: bool
      - name: getClusterEtaSize
        return_type: unsigned int
      - name: getClusterPhiSize
        return_type: unsigned int
      - name: badChannelList
        return_type: const vector<xAOD::CaloClusterBadChannelData_v1>
      - name: getSisterCluster
        return_type: const xAOD::CaloCluster_v1*
      - name: getSisterClusterLink
        return_type: const ElementLink<DataVector<xAOD::CaloCluster_v1> >
      - name: setSisterClusterLink
        return_type: bool
        arguments:
          - name: sister
            type: ElementLink_DataVector_xAOD_CaloCluster_v1__
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CaloRings_v1
    cpp_name: xAOD::CaloRings_v1
    is_container_of_cpp: __gnu_cxx::__normal_iterator<ElementLink<DataVector<xAOD::RingSet_v1> >*,vector<ElementLink<DataVector<xAOD::RingSet_v1> > > >
    is_container_of_python: __gnu_cxx.__normal_iterator_ElementLink_DataVector_xAOD_RingSet_v1___vector_ElementLink_DataVector_xAOD_RingSet_v1____
    include_file: xAODCaloRings/versions/CaloRings_v1.h
    methods:
      - name: nRingSets
        return_type: unsigned int
      - name: size
        return_type: unsigned int
      - name: at
        return_type: const xAOD::RingSet_v1*
        arguments:
          - name: index
            type: int
      - name: ringSetLinks
        return_type: const vector<ElementLink<DataVector<xAOD::RingSet_v1> > >
      - name: ringAt
        return_type: float
        arguments:
          - name: rsIdx
            type: int
          - name: ringIdx
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CaloTower_v1
    cpp_name: xAOD::CaloTower_v1
    include_file: xAODCaloEvent/versions/CaloTower_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: rapidity
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CaloVertexedClusterBase
    cpp_name: xAOD::CaloVertexedClusterBase
    include_file: xAODCaloEvent/CaloVertexedClusterBase.h
    methods:
      - name: clust
        return_type: const xAOD::CaloCluster_v1
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CaloVertexedTopoCluster
    cpp_name: xAOD::CaloVertexedTopoCluster
    include_file: xAODCaloEvent/CaloVertexedTopoCluster.h
    methods:
      - name: clust
        return_type: const xAOD::CaloCluster_v1
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CompositeParticle_v1
    cpp_name: xAOD::CompositeParticle_v1
    include_file: xAODParticleEvent/versions/CompositeParticle_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: px
        return_type: double
      - name: py
        return_type: double
      - name: pz
        return_type: double
      - name: et
        return_type: double
      - name: hasCharge
        return_type: bool
      - name: charge
        return_type: float
      - name: hasPdgId
        return_type: bool
      - name: pdgId
        return_type: int
      - name: p
        return_type: double
        arguments:
          - name: partIndices
            type: vector_int_
      - name: weight
        return_type: float
        arguments:
          - name: varNames
            type: vector_str_
          - name: partIndices
            type: vector_int_
      - name: missingET
        return_type: const xAOD::MissingET_v1*
      - name: contains
        return_type: bool
        arguments:
          - name: met
            type: xAOD.MissingET_v1
      - name: nParts
        return_type: int
      - name: nCompParts
        return_type: int
      - name: nPhotons
        return_type: int
      - name: nTruthPhotons
        return_type: int
      - name: nElectrons
        return_type: int
      - name: nTruthElectrons
        return_type: int
      - name: nMuons
        return_type: int
      - name: nTruthMuons
        return_type: int
      - name: nTaus
        return_type: int
      - name: nTruthTaus
        return_type: int
      - name: nLeptons
        return_type: int
      - name: nTruthLeptons
        return_type: int
      - name: nJets
        return_type: int
      - name: nTruthParts
        return_type: int
      - name: part
        return_type: const xAOD::IParticle*
        arguments:
          - name: index
            type: int
      - name: partLink
        return_type: const ElementLink<DataVector<xAOD::IParticle> >
        arguments:
          - name: index
            type: int
      - name: partLinks
        return_type: const vector<ElementLink<DataVector<xAOD::IParticle> > >
      - name: compPart
        return_type: xAOD::CompositeParticle_v1*
        arguments:
          - name: partIndices
            type: vector_int_
          - name: otherPartIndices
            type: vector_int_
          - name: updateFourMom
            type: bool
      - name: photon
        return_type: const xAOD::Photon_v1*
        arguments:
          - name: index
            type: int
      - name: electron
        return_type: const xAOD::Electron_v1*
        arguments:
          - name: index
            type: int
      - name: muon
        return_type: const xAOD::Muon_v1*
        arguments:
          - name: index
            type: int
      - name: tau
        return_type: const xAOD::TauJet_v3*
        arguments:
          - name: index
            type: int
      - name: jet
        return_type: const xAOD::Jet_v1*
        arguments:
          - name: index
            type: int
      - name: truthPart
        return_type: const xAOD::TruthParticle_v1*
        arguments:
          - name: index
            type: int
      - name: containsOther
        return_type: bool
        arguments:
          - name: part
            type: xAOD.IParticle
      - name: nOtherParts
        return_type: int
      - name: nOtherCompParts
        return_type: int
      - name: nOtherPhotons
        return_type: int
      - name: nOtherTruthPhotons
        return_type: int
      - name: nOtherElectrons
        return_type: int
      - name: nOtherTruthElectrons
        return_type: int
      - name: nOtherMuons
        return_type: int
      - name: nOtherTruthMuons
        return_type: int
      - name: nOtherTaus
        return_type: int
      - name: nOtherTruthTaus
        return_type: int
      - name: nOtherLeptons
        return_type: int
      - name: nOtherTruthLeptons
        return_type: int
      - name: nOtherJets
        return_type: int
      - name: nOtherTruthParts
        return_type: int
      - name: otherPart
        return_type: const xAOD::IParticle*
        arguments:
          - name: index
            type: int
      - name: otherPartLink
        return_type: const ElementLink<DataVector<xAOD::IParticle> >
        arguments:
          - name: index
            type: int
      - name: otherPartLinks
        return_type: const vector<ElementLink<DataVector<xAOD::IParticle> > >
      - name: otherCompPart
        return_type: const xAOD::CompositeParticle_v1*
        arguments:
          - name: index
            type: int
      - name: otherPhoton
        return_type: const xAOD::Photon_v1*
        arguments:
          - name: index
            type: int
      - name: otherElectron
        return_type: const xAOD::Electron_v1*
        arguments:
          - name: index
            type: int
      - name: otherMuon
        return_type: const xAOD::Muon_v1*
        arguments:
          - name: index
            type: int
      - name: otherTau
        return_type: const xAOD::TauJet_v3*
        arguments:
          - name: index
            type: int
      - name: otherJet
        return_type: const xAOD::Jet_v1*
        arguments:
          - name: index
            type: int
      - name: otherTruthPart
        return_type: const xAOD::TruthParticle_v1*
        arguments:
          - name: index
            type: int
      - name: getBool
        return_type: bool
        arguments:
          - name: varName
            type: str
      - name: getInt
        return_type: int
        arguments:
          - name: varName
            type: str
      - name: getUInt
        return_type: unsigned int
        arguments:
          - name: varName
            type: str
      - name: getFloat
        return_type: float
        arguments:
          - name: varName
            type: str
      - name: getDouble
        return_type: double
        arguments:
          - name: varName
            type: str
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.CutBookkeeper_v1
    cpp_name: xAOD::CutBookkeeper_v1
    include_file: xAODCutFlow/versions/CutBookkeeper_v1.h
    methods:
      - name: nameIdentifier
        return_type: unsigned int
      - name: uniqueIdentifier
        return_type: unsigned int
      - name: name
        return_type: const string
      - name: description
        return_type: const string
      - name: isTopFilter
        return_type: bool
      - name: cycle
        return_type: int
      - name: inputStream
        return_type: const string
      - name: outputStreams
        return_type: const vector<string>
      - name: hasOutputStream
        return_type: bool
        arguments:
          - name: outputstream
            type: str
      - name: sumOfEventWeights
        return_type: double
      - name: sumOfEventWeightsSquared
        return_type: double
      - name: isEqualTo
        return_type: bool
        arguments:
          - name: eb
            type: xAOD.CutBookkeeper_v1
      - name: hasParent
        return_type: bool
      - name: parent
        return_type: const xAOD::CutBookkeeper_v1*
      - name: nChildren
        return_type: int
      - name: hasChild
        return_type: bool
        arguments:
          - name: testCBK
            type: xAOD.CutBookkeeper_v1
      - name: child
        return_type: const xAOD::CutBookkeeper_v1*
        arguments:
          - name: i
            type: int
      - name: addNewChild
        return_type: xAOD::CutBookkeeper_v1*
        arguments:
          - name: name
            type: str
          - name: description
            type: str
      - name: nUsedOthers
        return_type: int
      - name: hasUsedOther
        return_type: bool
        arguments:
          - name: testCBK
            type: xAOD.CutBookkeeper_v1
      - name: usedOther
        return_type: const xAOD::CutBookkeeper_v1*
        arguments:
          - name: i
            type: int
      - name: nSiblings
        return_type: int
      - name: hasSibling
        return_type: bool
        arguments:
          - name: testCBK
            type: xAOD.CutBookkeeper_v1
      - name: sibling
        return_type: const xAOD::CutBookkeeper_v1*
        arguments:
          - name: i
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.DiTauJet_v1
    cpp_name: xAOD::DiTauJet_v1
    include_file: xAODTau/versions/DiTauJet_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: e
        return_type: double
      - name: m
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: jetLink
        return_type: const ElementLink<DataVector<xAOD::Jet_v1> >
      - name: jet
        return_type: const xAOD::Jet_v1*
      - name: subjetPt
        return_type: float
        arguments:
          - name: numSubjet
            type: int
      - name: subjetEta
        return_type: float
        arguments:
          - name: numSubjet
            type: int
      - name: subjetPhi
        return_type: float
        arguments:
          - name: numSubjet
            type: int
      - name: subjetE
        return_type: float
        arguments:
          - name: numSubjet
            type: int
      - name: nSubjets
        return_type: float
      - name: fCore
        return_type: float
        arguments:
          - name: numSubjet
            type: int
      - name: vertexLink
        return_type: const ElementLink<DataVector<xAOD::Vertex_v1> >
      - name: vertex
        return_type: const xAOD::Vertex_v1*
      - name: trackLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: track
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: i
            type: int
      - name: nTracks
        return_type: int
      - name: otherTrackLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: otherTrack
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: i
            type: int
      - name: nOtherTracks
        return_type: int
      - name: isoTrackLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: isoTrack
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: i
            type: int
      - name: nIsoTracks
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.Egamma_v1
    cpp_name: xAOD::Egamma_v1
    include_file: xAODEgamma/versions/Egamma_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: nCaloClusters
        return_type: int
      - name: caloCluster
        return_type: const xAOD::CaloCluster_v1*
        arguments:
          - name: index
            type: int
      - name: caloClusterLink
        return_type: const ElementLink<DataVector<xAOD::CaloCluster_v1> >
        arguments:
          - name: index
            type: int
      - name: caloClusterLinks
        return_type: const vector<ElementLink<DataVector<xAOD::CaloCluster_v1> > >
      - name: ambiguousObject
        return_type: const xAOD::Egamma_v1*
      - name: isGoodOQ
        return_type: bool
        arguments:
          - name: mask
            type: int
      - name: OQ
        return_type: unsigned int
      - name: passSelection
        return_type: bool
        arguments:
          - name: value
            type: bool
          - name: menu
            type: str
      - name: selectionisEM
        return_type: bool
        arguments:
          - name: value
            type: int
          - name: isEM
            type: str
      - name: likelihoodValue
        return_type: bool
        arguments:
          - name: value
            type: float
          - name: LHValue
            type: str
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.Electron_v1
    cpp_name: xAOD::Electron_v1
    include_file: xAODEgamma/versions/Electron_v1.h
    methods:
      - name: charge
        return_type: float
      - name: nTrackParticles
        return_type: int
      - name: trackParticle
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: index
            type: int
      - name: trackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
        arguments:
          - name: index
            type: int
      - name: trackParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: nCaloClusters
        return_type: int
      - name: caloCluster
        return_type: const xAOD::CaloCluster_v1*
        arguments:
          - name: index
            type: int
      - name: caloClusterLink
        return_type: const ElementLink<DataVector<xAOD::CaloCluster_v1> >
        arguments:
          - name: index
            type: int
      - name: caloClusterLinks
        return_type: const vector<ElementLink<DataVector<xAOD::CaloCluster_v1> > >
      - name: ambiguousObject
        return_type: const xAOD::Egamma_v1*
      - name: isGoodOQ
        return_type: bool
        arguments:
          - name: mask
            type: int
      - name: OQ
        return_type: unsigned int
      - name: passSelection
        return_type: bool
        arguments:
          - name: value
            type: bool
          - name: menu
            type: str
      - name: selectionisEM
        return_type: bool
        arguments:
          - name: value
            type: int
          - name: isEM
            type: str
      - name: likelihoodValue
        return_type: bool
        arguments:
          - name: value
            type: float
          - name: LHValue
            type: str
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.EmTauRoI_v2
    cpp_name: xAOD::EmTauRoI_v2
    include_file: xAODTrigger/versions/EmTauRoI_v2.h
    methods:
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: roiWord
        return_type: unsigned int
      - name: etScale
        return_type: float
      - name: eT
        return_type: float
      - name: thrPattern
        return_type: unsigned int
      - name: core
        return_type: float
      - name: emClus
        return_type: float
      - name: tauClus
        return_type: float
      - name: emIsol
        return_type: float
      - name: hadIsol
        return_type: float
      - name: hadCore
        return_type: float
      - name: thrNames
        return_type: const vector<string>
      - name: thrValues
        return_type: const vector<float>
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.EventInfo_v1
    cpp_name: xAOD::EventInfo_v1
    include_file: xAODEventInfo/versions/EventInfo_v1.h
    methods:
      - name: runNumber
        return_type: unsigned int
      - name: eventNumber
        return_type: unsigned long long
      - name: lumiBlock
        return_type: unsigned int
      - name: timeStamp
        return_type: unsigned int
      - name: timeStampNSOffset
        return_type: unsigned int
      - name: bcid
        return_type: unsigned int
      - name: detectorMask0
        return_type: unsigned int
      - name: detectorMask1
        return_type: unsigned int
      - name: detectorMask2
        return_type: unsigned int
      - name: detectorMask3
        return_type: unsigned int
      - name: mcChannelNumber
        return_type: unsigned int
      - name: mcEventNumber
        return_type: unsigned long long
      - name: mcEventWeights
        return_type: const vector<float>
      - name: mcEventWeight
        return_type: float
        arguments:
          - name: i
            type: int
      - name: eventTypeBitmask
        return_type: unsigned int
      - name: statusElement
        return_type: unsigned int
      - name: extendedLevel1ID
        return_type: unsigned int
      - name: streamTags
        return_type: const vector<xAOD::EventInfo_v1::StreamTag>
      - name: actualInteractionsPerCrossing
        return_type: float
      - name: averageInteractionsPerCrossing
        return_type: float
      - name: pileUpMixtureIDLowBits
        return_type: unsigned long long
      - name: pileUpMixtureIDHighBits
        return_type: unsigned long long
      - name: subEvents
        return_type: const vector<xAOD::EventInfo_v1::SubEvent>
      - name: beamPosX
        return_type: float
      - name: beamPosY
        return_type: float
      - name: beamPosZ
        return_type: float
      - name: beamPosSigmaX
        return_type: float
      - name: beamPosSigmaY
        return_type: float
      - name: beamPosSigmaZ
        return_type: float
      - name: beamPosSigmaXY
        return_type: float
      - name: beamTiltXZ
        return_type: float
      - name: beamTiltYZ
        return_type: float
      - name: beamStatus
        return_type: unsigned int
      - name: beamSpotWeight
        return_type: float
      - name: hasBeamSpotWeight
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.EventInfo_v1.StreamTag
    cpp_name: xAOD::EventInfo_v1::StreamTag
    methods:
      - name: name
        return_type: const string
      - name: type
        return_type: const string
      - name: obeysLumiblock
        return_type: bool
  - python_name: xAOD.EventInfo_v1.SubEvent
    cpp_name: xAOD::EventInfo_v1::SubEvent
    methods:
      - name: typeName
        return_type: const string
      - name: link
        return_type: const ElementLink<DataVector<xAOD::EventInfo_v1> >
      - name: ptr
        return_type: const xAOD::EventInfo_v1*
  - python_name: xAOD.ForwardEventInfo_v1
    cpp_name: xAOD::ForwardEventInfo_v1
    include_file: xAODForward/versions/ForwardEventInfo_v1.h
    methods:
      - name: timeDiff
        return_type: float
      - name: timeA
        return_type: float
      - name: timeC
        return_type: float
      - name: countA
        return_type: unsigned short
      - name: countC
        return_type: unsigned short
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.HIEventShape_v2
    cpp_name: xAOD::HIEventShape_v2
    include_file: xAODHIEvent/versions/HIEventShape_v2.h
    methods:
      - name: et
        return_type: float
      - name: area
        return_type: float
      - name: rho
        return_type: float
      - name: nCells
        return_type: int
      - name: etCos
        return_type: const vector<float>
      - name: etSin
        return_type: const vector<float>
      - name: etaMin
        return_type: float
      - name: etaMax
        return_type: float
      - name: layer
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.IParticle
    cpp_name: xAOD::IParticle
    include_file: xAODBase/IParticle.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.JEMEtSums_v2
    cpp_name: xAOD::JEMEtSums_v2
    include_file: xAODTrigL1Calo/versions/JEMEtSums_v2.h
    methods:
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.JEMHits_v1
    cpp_name: xAOD::JEMHits_v1
    include_file: xAODTrigL1Calo/versions/JEMHits_v1.h
    methods:
      - name: crate
        return_type: int
      - name: module
        return_type: int
      - name: peak
        return_type: int
      - name: forward
        return_type: unsigned int
      - name: jetHits
        return_type: unsigned int
      - name: JetHits
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.JEMRoI_v1
    cpp_name: xAOD::JEMRoI_v1
    include_file: xAODTrigL1Calo/versions/JEMRoI_v1.h
    methods:
      - name: roiWord
        return_type: unsigned int
      - name: crate
        return_type: int
      - name: jem
        return_type: int
      - name: frame
        return_type: int
      - name: location
        return_type: int
      - name: forward
        return_type: int
      - name: hits
        return_type: int
      - name: error
        return_type: int
      - name: parity
        return_type: int
      - name: saturation
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.JEMTobRoI_v1
    cpp_name: xAOD::JEMTobRoI_v1
    include_file: xAODTrigL1Calo/versions/JEMTobRoI_v1.h
    methods:
      - name: roiWord
        return_type: unsigned int
      - name: crate
        return_type: int
      - name: jem
        return_type: int
      - name: frame
        return_type: int
      - name: location
        return_type: int
      - name: energyLarge
        return_type: int
      - name: energySmall
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.JetConstituent
    cpp_name: xAOD::JetConstituent
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: rawConstituent
        return_type: const xAOD::IParticle*
      - name: isTimelike
        return_type: bool
      - name: isSpacelike
        return_type: bool
  - python_name: xAOD.JetConstituentVector
    cpp_name: xAOD::JetConstituentVector
    is_container_of_cpp: xAOD::JetConstituent*
    is_container_of_python: xAOD.JetConstituent
    methods:
      - name: isValid
        return_type: bool
      - name: empty
        return_type: bool
      - name: size
        return_type: int
      - name: at
        return_type: xAOD::JetConstituent
        arguments:
          - name: i
            type: int
      - name: front
        return_type: xAOD::JetConstituent
      - name: back
        return_type: xAOD::JetConstituent
      - name: asSTLVector
        return_type: vector<xAOD::JetConstituent>
  - python_name: xAOD.JetElement_v2
    cpp_name: xAOD::JetElement_v2
    include_file: xAODTrigL1Calo/versions/JetElement_v2.h
    methods:
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: key
        return_type: unsigned int
      - name: emJetElementET
        return_type: unsigned int
      - name: hadJetElementET
        return_type: unsigned int
      - name: et
        return_type: unsigned int
      - name: emJetElementETSlice
        return_type: unsigned int
        arguments:
          - name: slice
            type: int
      - name: hadJetElementETSlice
        return_type: unsigned int
        arguments:
          - name: slice
            type: int
      - name: sliceET
        return_type: unsigned int
        arguments:
          - name: slice
            type: int
      - name: isSaturated
        return_type: bool
      - name: isEmSaturated
        return_type: bool
      - name: isHadSaturated
        return_type: bool
      - name: emJetElementError
        return_type: unsigned int
      - name: hadJetElementError
        return_type: unsigned int
      - name: linkError
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.JetRoI_v2
    cpp_name: xAOD::JetRoI_v2
    include_file: xAODTrigger/versions/JetRoI_v2.h
    methods:
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: roiWord
        return_type: unsigned int
      - name: etLarge
        return_type: float
      - name: etSmall
        return_type: float
      - name: etScale
        return_type: float
      - name: thrPattern
        return_type: unsigned int
      - name: et4x4
        return_type: float
      - name: et6x6
        return_type: float
      - name: et8x8
        return_type: float
      - name: thrNames
        return_type: const vector<string>
      - name: thrValues
        return_type: const vector<float>
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.Jet_v1
    cpp_name: xAOD::Jet_v1
    include_file: xAODJet/versions/Jet_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: px
        return_type: float
      - name: py
        return_type: float
      - name: pz
        return_type: float
      - name: getConstituents
        return_type: xAOD::JetConstituentVector
      - name: numConstituents
        return_type: int
      - name: rawConstituent
        return_type: const xAOD::IParticle*
        arguments:
          - name: i
            type: int
      - name: constituentLinks
        return_type: const vector<ElementLink<DataVector<xAOD::IParticle> > >
      - name: getSizeParameter
        return_type: float
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: getAttribute
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: attribute_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('getAttribute', s, a, param_1)"
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.KLFitterResult
    cpp_name: xAOD::KLFitterResult
    include_file: TopEvent/KLFitterResult.h
    methods:
      - name: selectionCode
        return_type: int
      - name: minuitDidNotConverge
        return_type: short
      - name: fitAbortedDueToNaN
        return_type: short
      - name: atLeastOneFitParameterAtItsLimit
        return_type: short
      - name: invalidTransferFunctionAtConvergence
        return_type: short
      - name: bestPermutation
        return_type: unsigned int
      - name: logLikelihood
        return_type: float
      - name: eventProbability
        return_type: float
      - name: parameters
        return_type: const vector<double>
      - name: parameterErrors
        return_type: const vector<double>
      - name: model_bhad_pt
        return_type: float
      - name: model_bhad_eta
        return_type: float
      - name: model_bhad_phi
        return_type: float
      - name: model_bhad_E
        return_type: float
      - name: model_bhad_jetIndex
        return_type: unsigned int
      - name: model_blep_pt
        return_type: float
      - name: model_blep_eta
        return_type: float
      - name: model_blep_phi
        return_type: float
      - name: model_blep_E
        return_type: float
      - name: model_blep_jetIndex
        return_type: unsigned int
      - name: model_lq1_pt
        return_type: float
      - name: model_lq1_eta
        return_type: float
      - name: model_lq1_phi
        return_type: float
      - name: model_lq1_E
        return_type: float
      - name: model_lq1_jetIndex
        return_type: unsigned int
      - name: model_lq2_pt
        return_type: float
      - name: model_lq2_eta
        return_type: float
      - name: model_lq2_phi
        return_type: float
      - name: model_lq2_E
        return_type: float
      - name: model_lq2_jetIndex
        return_type: unsigned int
      - name: model_Higgs_b1_pt
        return_type: float
      - name: model_Higgs_b1_eta
        return_type: float
      - name: model_Higgs_b1_phi
        return_type: float
      - name: model_Higgs_b1_E
        return_type: float
      - name: model_Higgs_b1_jetIndex
        return_type: unsigned int
      - name: model_Higgs_b2_pt
        return_type: float
      - name: model_Higgs_b2_eta
        return_type: float
      - name: model_Higgs_b2_phi
        return_type: float
      - name: model_Higgs_b2_E
        return_type: float
      - name: model_Higgs_b2_jetIndex
        return_type: unsigned int
      - name: model_lep_pt
        return_type: float
      - name: model_lep_eta
        return_type: float
      - name: model_lep_phi
        return_type: float
      - name: model_lep_E
        return_type: float
      - name: model_lep_index
        return_type: unsigned int
      - name: model_lepZ1_pt
        return_type: float
      - name: model_lepZ1_eta
        return_type: float
      - name: model_lepZ1_phi
        return_type: float
      - name: model_lepZ1_E
        return_type: float
      - name: model_lepZ1_index
        return_type: unsigned int
      - name: model_lepZ2_pt
        return_type: float
      - name: model_lepZ2_eta
        return_type: float
      - name: model_lepZ2_phi
        return_type: float
      - name: model_lepZ2_E
        return_type: float
      - name: model_lepZ2_index
        return_type: unsigned int
      - name: model_nu_pt
        return_type: float
      - name: model_nu_eta
        return_type: float
      - name: model_nu_phi
        return_type: float
      - name: model_nu_E
        return_type: float
      - name: model_b_from_top1_pt
        return_type: float
      - name: model_b_from_top1_eta
        return_type: float
      - name: model_b_from_top1_phi
        return_type: float
      - name: model_b_from_top1_E
        return_type: float
      - name: model_b_from_top1_jetIndex
        return_type: unsigned int
      - name: model_b_from_top2_pt
        return_type: float
      - name: model_b_from_top2_eta
        return_type: float
      - name: model_b_from_top2_phi
        return_type: float
      - name: model_b_from_top2_E
        return_type: float
      - name: model_b_from_top2_jetIndex
        return_type: unsigned int
      - name: model_lj1_from_top1_pt
        return_type: float
      - name: model_lj1_from_top1_eta
        return_type: float
      - name: model_lj1_from_top1_phi
        return_type: float
      - name: model_lj1_from_top1_E
        return_type: float
      - name: model_lj1_from_top1_jetIndex
        return_type: unsigned int
      - name: model_lj2_from_top1_pt
        return_type: float
      - name: model_lj2_from_top1_eta
        return_type: float
      - name: model_lj2_from_top1_phi
        return_type: float
      - name: model_lj2_from_top1_E
        return_type: float
      - name: model_lj2_from_top1_jetIndex
        return_type: unsigned int
      - name: model_lj1_from_top2_pt
        return_type: float
      - name: model_lj1_from_top2_eta
        return_type: float
      - name: model_lj1_from_top2_phi
        return_type: float
      - name: model_lj1_from_top2_E
        return_type: float
      - name: model_lj1_from_top2_jetIndex
        return_type: unsigned int
      - name: model_lj2_from_top2_pt
        return_type: float
      - name: model_lj2_from_top2_eta
        return_type: float
      - name: model_lj2_from_top2_phi
        return_type: float
      - name: model_lj2_from_top2_E
        return_type: float
      - name: model_lj2_from_top2_jetIndex
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.L1TopoRawData_v1
    cpp_name: xAOD::L1TopoRawData_v1
    include_file: xAODTrigL1Calo/versions/L1TopoRawData_v1.h
    methods:
      - name: errorWord
        return_type: unsigned int
      - name: sourceID
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.L1TopoSimResults_v1
    cpp_name: xAOD::L1TopoSimResults_v1
    include_file: xAODTrigger/versions/L1TopoSimResults_v1.h
    methods:
      - name: connectionId
        return_type: unsigned int
      - name: topoWord
        return_type: unsigned int
      - name: topoWordOverflow
        return_type: unsigned int
      - name: bitWidth
        return_type: unsigned int
      - name: clock
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.L2CombinedMuon_v1
    cpp_name: xAOD::L2CombinedMuon_v1
    include_file: xAODTrigMuon/versions/L2CombinedMuon_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: charge
        return_type: float
      - name: strategy
        return_type: int
      - name: errorFlag
        return_type: int
      - name: matchFlag
        return_type: int
      - name: sigmaPt
        return_type: float
      - name: idTrackLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: idTrack
        return_type: const xAOD::TrackParticle_v1*
      - name: muSATrackLink
        return_type: const ElementLink<DataVector<xAOD::L2StandAloneMuon_v2> >
      - name: muSATrack
        return_type: const xAOD::L2StandAloneMuon_v2*
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.L2IsoMuon_v1
    cpp_name: xAOD::L2IsoMuon_v1
    include_file: xAODTrigMuon/versions/L2IsoMuon_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: roiWord
        return_type: unsigned int
      - name: charge
        return_type: float
      - name: errorFlag
        return_type: int
      - name: sumPt01
        return_type: float
      - name: sumPt02
        return_type: float
      - name: sumPt03
        return_type: float
      - name: sumPt04
        return_type: float
      - name: sumEt01
        return_type: float
      - name: sumEt02
        return_type: float
      - name: sumEt03
        return_type: float
      - name: sumEt04
        return_type: float
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.L2StandAloneMuon_v2
    cpp_name: xAOD::L2StandAloneMuon_v2
    include_file: xAODTrigMuon/versions/L2StandAloneMuon_v2.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: roiWord
        return_type: unsigned int
      - name: sAddress
        return_type: int
      - name: etaMS
        return_type: float
      - name: phiMS
        return_type: float
      - name: dirPhiMS
        return_type: float
      - name: rMS
        return_type: float
      - name: zMS
        return_type: float
      - name: dirZMS
        return_type: float
      - name: beta
        return_type: float
      - name: barrelRadius
        return_type: float
      - name: barrelSagitta
        return_type: float
      - name: endcapAlpha
        return_type: float
      - name: endcapBeta
        return_type: float
      - name: endcapRadius
        return_type: float
      - name: etaMap
        return_type: float
      - name: phiMap
        return_type: float
      - name: etaBin
        return_type: int
      - name: phiBin
        return_type: int
      - name: isTgcFailure
        return_type: int
      - name: isRpcFailure
        return_type: int
      - name: deltaPt
        return_type: float
      - name: deltaPtParm1
        return_type: float
      - name: deltaPtParm2
        return_type: float
      - name: deltaPtParm3
        return_type: float
      - name: deltaEta
        return_type: float
      - name: deltaPhi
        return_type: float
      - name: superPointR
        return_type: float
        arguments:
          - name: chamber
            type: int
      - name: superPointZ
        return_type: float
        arguments:
          - name: chamber
            type: int
      - name: superPointSlope
        return_type: float
        arguments:
          - name: chamber
            type: int
      - name: superPointIntercept
        return_type: float
        arguments:
          - name: chamber
            type: int
      - name: superPointChi2
        return_type: float
        arguments:
          - name: chamber
            type: int
      - name: nTrackPositions
        return_type: unsigned int
      - name: trackPositionR
        return_type: float
        arguments:
          - name: n
            type: int
      - name: trackPositionZ
        return_type: float
        arguments:
          - name: n
            type: int
      - name: trackPositionEta
        return_type: float
        arguments:
          - name: n
            type: int
      - name: trackPositionPhi
        return_type: float
        arguments:
          - name: n
            type: int
      - name: algoId
        return_type: int
      - name: teId
        return_type: unsigned int
      - name: lvl1Id
        return_type: unsigned int
      - name: lumiBlock
        return_type: unsigned int
      - name: muonDetMask
        return_type: unsigned int
      - name: roiId
        return_type: unsigned int
      - name: roiSystem
        return_type: unsigned int
      - name: roiSubsystem
        return_type: unsigned int
      - name: roiSector
        return_type: unsigned int
      - name: roiNumber
        return_type: unsigned int
      - name: roiThreshold
        return_type: unsigned int
      - name: roiEta
        return_type: float
      - name: roiPhi
        return_type: float
      - name: tgcPt
        return_type: float
      - name: ptBarrelRadius
        return_type: float
      - name: ptBarrelSagitta
        return_type: float
      - name: ptEndcapAlpha
        return_type: float
      - name: ptEndcapBeta
        return_type: float
      - name: ptEndcapRadius
        return_type: float
      - name: ptCSC
        return_type: float
      - name: chamberType1
        return_type: int
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: chamberType2
        return_type: int
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: roadAw
        return_type: float
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: roadBw
        return_type: float
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: zMin
        return_type: float
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: zMax
        return_type: float
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: rMin
        return_type: float
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: rMax
        return_type: float
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: etaMin
        return_type: float
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: etaMax
        return_type: float
        arguments:
          - name: station
            type: int
          - name: sector
            type: int
      - name: tgcInnEta
        return_type: float
      - name: tgcInnPhi
        return_type: float
      - name: tgcInnR
        return_type: float
      - name: tgcInnZ
        return_type: float
      - name: tgcInnRhoStd
        return_type: float
      - name: tgcInnRhoN
        return_type: long
      - name: tgcInnPhiStd
        return_type: float
      - name: tgcInnPhiN
        return_type: long
      - name: tgcMid1Eta
        return_type: float
      - name: tgcMid1Phi
        return_type: float
      - name: tgcMid1R
        return_type: float
      - name: tgcMid1Z
        return_type: float
      - name: tgcMid2Eta
        return_type: float
      - name: tgcMid2Phi
        return_type: float
      - name: tgcMid2R
        return_type: float
      - name: tgcMid2Z
        return_type: float
      - name: tgcMidRhoChi2
        return_type: float
      - name: tgcMidRhoN
        return_type: long
      - name: tgcMidPhiChi2
        return_type: float
      - name: tgcMidPhiN
        return_type: long
      - name: rpcFitInnPhi
        return_type: float
      - name: rpcFitInnSlope
        return_type: float
      - name: rpcFitInnOffset
        return_type: float
      - name: rpcFitMidPhi
        return_type: float
      - name: rpcFitMidSlope
        return_type: float
      - name: rpcFitMidOffset
        return_type: float
      - name: rpcFitOutPhi
        return_type: float
      - name: rpcFitOutSlope
        return_type: float
      - name: rpcFitOutOffset
        return_type: float
      - name: rpcHitsCapacity
        return_type: int
      - name: tgcHitsCapacity
        return_type: int
      - name: mdtHitsCapacity
        return_type: int
      - name: cscHitsCapacity
        return_type: int
      - name: rpcHitX
        return_type: const vector<float>
      - name: rpcHitY
        return_type: const vector<float>
      - name: rpcHitZ
        return_type: const vector<float>
      - name: rpcHitTime
        return_type: const vector<float>
      - name: rpcHitDistToEtaReadout
        return_type: const vector<float>
      - name: rpcHitDistToPhiReadout
        return_type: const vector<float>
      - name: rpcHitStationName
        return_type: const vector<string>
      - name: tgcHitEta
        return_type: const vector<float>
      - name: tgcHitPhi
        return_type: const vector<float>
      - name: tgcHitR
        return_type: const vector<float>
      - name: tgcHitZ
        return_type: const vector<float>
      - name: tgcHitWidth
        return_type: const vector<float>
      - name: tgcHitStationNum
        return_type: const vector<int>
      - name: tgcHitIsStrip
        return_type: const vector<bool>
      - name: tgcHitBCTag
        return_type: const vector<int>
      - name: tgcHitInRoad
        return_type: const vector<bool>
      - name: nMdtHits
        return_type: unsigned int
      - name: mdtHitOnlineId
        return_type: unsigned int
        arguments:
          - name: tube
            type: int
      - name: mdtHitOfflineId
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: mdtHitIsOutlier
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: mdtHitChamber
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: mdtHitR
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: mdtHitZ
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: mdtHitPhi
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: mdtHitResidual
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: mdtHitTime
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: mdtHitSpace
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: mdtHitSigma
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: nCscHits
        return_type: unsigned int
      - name: cscHitIsOutlier
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: cscHitChamber
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: cscHitStationName
        return_type: unsigned int
        arguments:
          - name: tube
            type: int
      - name: cscHitStationEta
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: cscHitStationPhi
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: cscHitChamberLayer
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: cscHitWireLayer
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: cscHitMeasuresPhi
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: cscHitStrip
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: cscHitEta
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: cscHitPhi
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: cscHitR
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: cscHitZ
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: cscHitCharge
        return_type: int
        arguments:
          - name: tube
            type: int
      - name: cscHitTime
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: cscHitResidual
        return_type: float
        arguments:
          - name: tube
            type: int
      - name: stgcClusterIsOutlier
        return_type: const vector<int>
      - name: stgcClusterType
        return_type: const vector<int>
      - name: stgcClusterEta
        return_type: const vector<float>
      - name: stgcClusterPhi
        return_type: const vector<float>
      - name: stgcClusterR
        return_type: const vector<float>
      - name: stgcClusterZ
        return_type: const vector<float>
      - name: stgcClusterResidualR
        return_type: const vector<float>
      - name: stgcClusterResidualPhi
        return_type: const vector<float>
      - name: stgcClusterStationEta
        return_type: const vector<int>
      - name: stgcClusterStationPhi
        return_type: const vector<int>
      - name: stgcClusterStationName
        return_type: const vector<int>
      - name: mmClusterIsOutlier
        return_type: const vector<int>
      - name: mmClusterEta
        return_type: const vector<float>
      - name: mmClusterPhi
        return_type: const vector<float>
      - name: mmClusterR
        return_type: const vector<float>
      - name: mmClusterZ
        return_type: const vector<float>
      - name: mmClusterResidualR
        return_type: const vector<float>
      - name: mmClusterResidualPhi
        return_type: const vector<float>
      - name: mmClusterStationEta
        return_type: const vector<int>
      - name: mmClusterStationPhi
        return_type: const vector<int>
      - name: mmClusterStationName
        return_type: const vector<int>
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.LumiBlockRange_v1
    cpp_name: xAOD::LumiBlockRange_v1
    include_file: xAODLuminosity/versions/LumiBlockRange_v1.h
    methods:
      - name: startRunNumber
        return_type: unsigned int
      - name: startLumiBlockNumber
        return_type: unsigned int
      - name: stopRunNumber
        return_type: unsigned int
      - name: stopLumiBlockNumber
        return_type: unsigned int
      - name: eventsExpected
        return_type: unsigned int
      - name: eventsSeen
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.MBTSModule_v1
    cpp_name: xAOD::MBTSModule_v1
    include_file: xAODForward/versions/MBTSModule_v1.h
    methods:
      - name: e
        return_type: float
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: time
        return_type: float
      - name: mbtsQuality
        return_type: int
      - name: type
        return_type: int
      - name: mbtsModule
        return_type: int
      - name: channel
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.MissingET_v1
    cpp_name: xAOD::MissingET_v1
    include_file: xAODMissingET/versions/MissingET_v1.h
    methods:
      - name: mpx
        return_type: float
      - name: mpy
        return_type: float
      - name: met
        return_type: float
      - name: phi
        return_type: float
      - name: sumet
        return_type: float
      - name: name
        return_type: const string
      - name: nameHash
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.MuonRoI_v1
    cpp_name: xAOD::MuonRoI_v1
    include_file: xAODTrigger/versions/MuonRoI_v1.h
    methods:
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: roiWord
        return_type: unsigned int
      - name: thrValue
        return_type: float
      - name: thrName
        return_type: const string
      - name: getThrNumber
        return_type: int
      - name: getRoI
        return_type: int
      - name: getSectorAddress
        return_type: int
      - name: getSectorID
        return_type: int
      - name: isFirstCandidate
        return_type: bool
      - name: isMoreCandInRoI
        return_type: bool
      - name: isMoreCandInSector
        return_type: bool
      - name: getPhiOverlap
        return_type: bool
      - name: getEtaOverlap
        return_type: bool
      - name: getBW3Coincidence
        return_type: bool
      - name: getInnerCoincidence
        return_type: bool
      - name: getGoodMF
        return_type: bool
      - name: isVetoed
        return_type: bool
      - name: isRun3
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.MuonSegment_v1
    cpp_name: xAOD::MuonSegment_v1
    include_file: xAODMuon/versions/MuonSegment_v1.h
    methods:
      - name: x
        return_type: float
      - name: y
        return_type: float
      - name: z
        return_type: float
      - name: px
        return_type: float
      - name: py
        return_type: float
      - name: pz
        return_type: float
      - name: t0
        return_type: float
      - name: t0error
        return_type: float
      - name: chiSquared
        return_type: float
      - name: numberDoF
        return_type: float
      - name: sector
        return_type: int
      - name: etaIndex
        return_type: int
      - name: nPrecisionHits
        return_type: int
      - name: nPhiLayers
        return_type: int
      - name: nTrigEtaLayers
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.Muon_v1
    cpp_name: xAOD::Muon_v1
    include_file: xAODMuon/versions/Muon_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: charge
        return_type: float
      - name: passesIDCuts
        return_type: bool
      - name: passesHighPtCuts
        return_type: bool
      - name: primaryTrackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: primaryTrackParticle
        return_type: const xAOD::TrackParticle_v1*
      - name: inDetTrackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: muonSpectrometerTrackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: combinedTrackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: extrapolatedMuonSpectrometerTrackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: msOnlyExtrapolatedMuonSpectrometerTrackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: clusterLink
        return_type: const ElementLink<DataVector<xAOD::CaloCluster_v1> >
      - name: cluster
        return_type: const xAOD::CaloCluster_v1*
      - name: muonSegmentLinks
        return_type: const vector<ElementLink<DataVector<xAOD::MuonSegment_v1> > >
      - name: nMuonSegments
        return_type: int
      - name: muonSegment
        return_type: const xAOD::MuonSegment_v1*
        arguments:
          - name: i
            type: int
      - name: muonSegmentLink
        return_type: const ElementLink<DataVector<xAOD::MuonSegment_v1> >
        arguments:
          - name: i
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.NeutralParticle_v1
    cpp_name: xAOD::NeutralParticle_v1
    include_file: xAODTracking/versions/NeutralParticle_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: d0
        return_type: float
      - name: z0
        return_type: float
      - name: phi0
        return_type: float
      - name: theta
        return_type: float
      - name: oneOverP
        return_type: float
      - name: definingParametersCovMatrixVec
        return_type: const vector<float>
      - name: vx
        return_type: float
      - name: vy
        return_type: float
      - name: vz
        return_type: float
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.PFO_v1
    cpp_name: xAOD::PFO_v1
    include_file: xAODPFlow/versions/PFO_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: p4EM
        return_type: TLorentzVector
      - name: ptEM
        return_type: double
      - name: etaEM
        return_type: double
      - name: phiEM
        return_type: double
      - name: mEM
        return_type: double
      - name: eEM
        return_type: double
      - name: bdtPi0Score
        return_type: float
      - name: centerMag
        return_type: float
      - name: isCharged
        return_type: bool
      - name: charge
        return_type: float
      - name: nCaloCluster
        return_type: unsigned int
      - name: cluster
        return_type: const xAOD::CaloCluster_v1*
        arguments:
          - name: index
            type: int
      - name: track
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: index
            type: int
      - name: vertex
        return_type: const xAOD::Vertex_v1*
      - name: setVertexLink
        return_type: bool
        arguments:
          - name: theVertexLink
            type: ElementLink_DataVector_xAOD_Vertex_v1__
      - name: setTrackLink
        return_type: bool
        arguments:
          - name: theTrack
            type: ElementLink_DataVector_xAOD_TrackParticle_v1__
      - name: setClusterLink
        return_type: bool
        arguments:
          - name: theCluster
            type: ElementLink_DataVector_xAOD_CaloCluster_v1__
      - name: addClusterLink
        return_type: bool
        arguments:
          - name: theCluster
            type: ElementLink_DataVector_xAOD_CaloCluster_v1__
      - name: GetVertexCorrectedFourVec
        return_type: TLorentzVector
        arguments:
          - name: vertexToCorrectTo
            type: xAOD.Vertex_v1
      - name: GetVertexCorrectedEMFourVec
        return_type: TLorentzVector
        arguments:
          - name: vertexToCorrectTo
            type: xAOD.Vertex_v1
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.Particle_v1
    cpp_name: xAOD::Particle_v1
    include_file: xAODParticleEvent/versions/Particle_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: px
        return_type: double
      - name: py
        return_type: double
      - name: pz
        return_type: double
      - name: et
        return_type: double
      - name: hasCharge
        return_type: bool
      - name: charge
        return_type: float
      - name: hasPdgId
        return_type: bool
      - name: pdgId
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.Photon_v1
    cpp_name: xAOD::Photon_v1
    include_file: xAODEgamma/versions/Photon_v1.h
    methods:
      - name: vertex
        return_type: const xAOD::Vertex_v1*
        arguments:
          - name: index
            type: int
      - name: vertexLink
        return_type: const ElementLink<DataVector<xAOD::Vertex_v1> >
        arguments:
          - name: index
            type: int
      - name: vertexLinks
        return_type: const vector<ElementLink<DataVector<xAOD::Vertex_v1> > >
      - name: nVertices
        return_type: int
      - name: conversionRadius
        return_type: float
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: nCaloClusters
        return_type: int
      - name: caloCluster
        return_type: const xAOD::CaloCluster_v1*
        arguments:
          - name: index
            type: int
      - name: caloClusterLink
        return_type: const ElementLink<DataVector<xAOD::CaloCluster_v1> >
        arguments:
          - name: index
            type: int
      - name: caloClusterLinks
        return_type: const vector<ElementLink<DataVector<xAOD::CaloCluster_v1> > >
      - name: ambiguousObject
        return_type: const xAOD::Egamma_v1*
      - name: isGoodOQ
        return_type: bool
        arguments:
          - name: mask
            type: int
      - name: OQ
        return_type: unsigned int
      - name: passSelection
        return_type: bool
        arguments:
          - name: value
            type: bool
          - name: menu
            type: str
      - name: selectionisEM
        return_type: bool
        arguments:
          - name: value
            type: int
          - name: isEM
            type: str
      - name: likelihoodValue
        return_type: bool
        arguments:
          - name: value
            type: float
          - name: LHValue
            type: str
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.PseudoTopResult
    cpp_name: xAOD::PseudoTopResult
    include_file: TopEvent/PseudoTopResult.h
    methods:
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.RODHeader_v2
    cpp_name: xAOD::RODHeader_v2
    include_file: xAODTrigL1Calo/versions/RODHeader_v2.h
    methods:
      - name: version
        return_type: unsigned int
      - name: sourceId
        return_type: unsigned int
      - name: run
        return_type: unsigned int
      - name: lvl1Id
        return_type: unsigned int
      - name: bcid
        return_type: unsigned int
      - name: trigType
        return_type: unsigned int
      - name: lvl1DetType
        return_type: unsigned int
      - name: payloadSize
        return_type: unsigned int
      - name: majorVersion
        return_type: int
      - name: minorVersion
        return_type: int
      - name: sourceID
        return_type: int
      - name: subDetectorID
        return_type: int
      - name: moduleID
        return_type: int
      - name: crate
        return_type: int
      - name: sLink
        return_type: int
      - name: dataType
        return_type: int
      - name: runType
        return_type: int
      - name: runNumber
        return_type: int
      - name: extendedL1ID
        return_type: int
      - name: ecrID
        return_type: int
      - name: l1ID
        return_type: int
      - name: bunchCrossing
        return_type: int
      - name: l1TriggerType
        return_type: int
      - name: detEventType
        return_type: int
      - name: orbitCount
        return_type: int
      - name: stepNumber
        return_type: int
      - name: stepType
        return_type: int
      - name: bcnMismatch
        return_type: bool
      - name: gLinkTimeout
        return_type: bool
      - name: dataTransportError
        return_type: bool
      - name: rodFifoOverflow
        return_type: bool
      - name: lvdsLinkError
        return_type: bool
      - name: cmmParityError
        return_type: bool
      - name: gLinkError
        return_type: bool
      - name: limitedRoISet
        return_type: bool
      - name: triggerTypeTimeout
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.RingSetConf_v1
    cpp_name: xAOD::RingSetConf_v1
    include_file: xAODCaloRings/versions/RingSetConf_v1.h
    methods:
      - name: nRings
        return_type: unsigned int
      - name: nLayers
        return_type: unsigned int
      - name: etaWidth
        return_type: float
      - name: phiWidth
        return_type: float
      - name: cellMaxDEtaDist
        return_type: float
      - name: cellMaxDPhiDist
        return_type: float
      - name: doEtaAxesDivision
        return_type: bool
      - name: doPhiAxesDivision
        return_type: bool
      - name: layerStartIdx
        return_type: unsigned int
      - name: sectionStartIdx
        return_type: unsigned int
      - name: layerEndIdx
        return_type: unsigned int
      - name: sectionEndIdx
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.RingSet_v1
    cpp_name: xAOD::RingSet_v1
    is_container_of_cpp: __gnu_cxx::__normal_iterator<float*,vector<float> >
    is_container_of_python: __gnu_cxx.__normal_iterator_float_vector_float__
    include_file: xAODCaloRings/versions/RingSet_v1.h
    methods:
      - name: at
        return_type: float
        arguments:
          - name: i
            type: int
      - name: ringsE
        return_type: const vector<float>
      - name: size
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.SCTRawHitValidation_v1
    cpp_name: xAOD::SCTRawHitValidation_v1
    include_file: xAODTracking/versions/SCTRawHitValidation_v1.h
    methods:
      - name: getWord
        return_type: unsigned int
      - name: getGroupSize
        return_type: int
      - name: getStrip
        return_type: int
      - name: getTimeBin
        return_type: int
      - name: getErrors
        return_type: int
      - name: OnTime
        return_type: bool
      - name: FirstHitError
        return_type: bool
      - name: SecondHitError
        return_type: bool
      - name: bec
        return_type: int
      - name: layer
        return_type: int
      - name: eta_module
        return_type: int
      - name: phi_module
        return_type: int
      - name: side
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.SlowMuon_v1
    cpp_name: xAOD::SlowMuon_v1
    include_file: xAODMuon/versions/SlowMuon_v1.h
    methods:
      - name: beta
        return_type: float
      - name: betaT
        return_type: float
      - name: ann
        return_type: float
      - name: nRpcHits
        return_type: int
      - name: nTileCells
        return_type: int
      - name: rpcBetaAvg
        return_type: float
      - name: rpcBetaRms
        return_type: float
      - name: rpcBetaChi2
        return_type: float
      - name: rpcBetaDof
        return_type: int
      - name: mdtBetaAvg
        return_type: float
      - name: mdtBetaRms
        return_type: float
      - name: mdtBetaChi2
        return_type: float
      - name: mdtBetaDof
        return_type: int
      - name: caloBetaAvg
        return_type: float
      - name: caloBetaRms
        return_type: float
      - name: caloBetaChi2
        return_type: float
      - name: caloBetaDof
        return_type: int
      - name: dEdxPixel
        return_type: float
      - name: dEdxCalo
        return_type: float
      - name: dEdxNClusters
        return_type: int
      - name: muonLink
        return_type: const ElementLink<DataVector<xAOD::Muon_v1> >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.SystematicEvent
    cpp_name: xAOD::SystematicEvent
    include_file: TopEvent/SystematicEvent.h
    methods:
      - name: hashValue
        return_type: int
      - name: ttreeIndex
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TauJet_v3
    cpp_name: xAOD::TauJet_v3
    include_file: xAODTau/versions/TauJet_v3.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: e
        return_type: double
      - name: m
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: ptJetSeed
        return_type: double
      - name: etaJetSeed
        return_type: double
      - name: phiJetSeed
        return_type: double
      - name: mJetSeed
        return_type: double
      - name: ptDetectorAxis
        return_type: double
      - name: etaDetectorAxis
        return_type: double
      - name: phiDetectorAxis
        return_type: double
      - name: mDetectorAxis
        return_type: double
      - name: ptIntermediateAxis
        return_type: double
      - name: etaIntermediateAxis
        return_type: double
      - name: phiIntermediateAxis
        return_type: double
      - name: mIntermediateAxis
        return_type: double
      - name: ptTauEnergyScale
        return_type: double
      - name: etaTauEnergyScale
        return_type: double
      - name: phiTauEnergyScale
        return_type: double
      - name: mTauEnergyScale
        return_type: double
      - name: ptTauEtaCalib
        return_type: double
      - name: etaTauEtaCalib
        return_type: double
      - name: phiTauEtaCalib
        return_type: double
      - name: mTauEtaCalib
        return_type: double
      - name: ptPanTauCellBasedProto
        return_type: double
      - name: etaPanTauCellBasedProto
        return_type: double
      - name: phiPanTauCellBasedProto
        return_type: double
      - name: mPanTauCellBasedProto
        return_type: double
      - name: ptPanTauCellBased
        return_type: double
      - name: etaPanTauCellBased
        return_type: double
      - name: phiPanTauCellBased
        return_type: double
      - name: mPanTauCellBased
        return_type: double
      - name: ptTrigCaloOnly
        return_type: double
      - name: etaTrigCaloOnly
        return_type: double
      - name: phiTrigCaloOnly
        return_type: double
      - name: mTrigCaloOnly
        return_type: double
      - name: ptFinalCalib
        return_type: double
      - name: etaFinalCalib
        return_type: double
      - name: phiFinalCalib
        return_type: double
      - name: mFinalCalib
        return_type: double
      - name: charge
        return_type: float
      - name: ROIWord
        return_type: unsigned int
      - name: jetLink
        return_type: const ElementLink<DataVector<xAOD::Jet_v1> >
      - name: jet
        return_type: const xAOD::Jet_v1*
      - name: vertexLink
        return_type: const ElementLink<DataVector<xAOD::Vertex_v1> >
      - name: vertex
        return_type: const xAOD::Vertex_v1*
      - name: secondaryVertexLink
        return_type: const ElementLink<DataVector<xAOD::Vertex_v1> >
      - name: secondaryVertex
        return_type: const xAOD::Vertex_v1*
      - name: tauTrackLinksWithMask
        return_type: const vector<ElementLink<DataVector<xAOD::TauTrack_v1> > >
        arguments:
          - name: noname_arg
            type: int
      - name: allTauTrackLinksNonConst
        return_type: vector<ElementLink<DataVector<xAOD::TauTrack_v1> > >
      - name: allTauTrackLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TauTrack_v1> > >
      - name: trackWithMask
        return_type: const xAOD::TauTrack_v1*
        arguments:
          - name: i
            type: int
          - name: mask
            type: int
          - name: container_index
            type: int
      - name: nTracksCharged
        return_type: int
      - name: nTracksIsolation
        return_type: int
      - name: nTracksWithMask
        return_type: int
        arguments:
          - name: classification
            type: int
      - name: nAllTracks
        return_type: int
      - name: clusterLinks
        return_type: const vector<ElementLink<DataVector<xAOD::IParticle> > >
      - name: cluster
        return_type: const xAOD::IParticle*
        arguments:
          - name: i
            type: int
      - name: nClusters
        return_type: int
      - name: vertexedClusters
        return_type: vector<xAOD::CaloVertexedTopoCluster>
      - name: pi0Links
        return_type: const vector<ElementLink<DataVector<xAOD::IParticle> > >
      - name: pi0
        return_type: const xAOD::IParticle*
        arguments:
          - name: i
            type: int
      - name: nPi0s
        return_type: int
      - name: trackFilterProngs
        return_type: int
      - name: trackFilterQuality
        return_type: int
      - name: pi0ConeDR
        return_type: float
      - name: hadronicPFOLinks
        return_type: const vector<ElementLink<DataVector<xAOD::PFO_v1> > >
      - name: hadronicPFO
        return_type: const xAOD::PFO_v1*
        arguments:
          - name: i
            type: int
      - name: nHadronicPFOs
        return_type: int
      - name: shotPFOLinks
        return_type: const vector<ElementLink<DataVector<xAOD::PFO_v1> > >
      - name: shotPFO
        return_type: const xAOD::PFO_v1*
        arguments:
          - name: i
            type: int
      - name: nShotPFOs
        return_type: int
      - name: chargedPFOLinks
        return_type: const vector<ElementLink<DataVector<xAOD::PFO_v1> > >
      - name: chargedPFO
        return_type: const xAOD::PFO_v1*
        arguments:
          - name: i
            type: int
      - name: nChargedPFOs
        return_type: int
      - name: neutralPFOLinks
        return_type: const vector<ElementLink<DataVector<xAOD::PFO_v1> > >
      - name: neutralPFO
        return_type: const xAOD::PFO_v1*
        arguments:
          - name: i
            type: int
      - name: nNeutralPFOs
        return_type: int
      - name: pi0PFOLinks
        return_type: const vector<ElementLink<DataVector<xAOD::PFO_v1> > >
      - name: pi0PFO
        return_type: const xAOD::PFO_v1*
        arguments:
          - name: i
            type: int
      - name: nPi0PFOs
        return_type: int
      - name: protoChargedPFOLinks
        return_type: const vector<ElementLink<DataVector<xAOD::PFO_v1> > >
      - name: protoChargedPFO
        return_type: const xAOD::PFO_v1*
        arguments:
          - name: i
            type: int
      - name: nProtoChargedPFOs
        return_type: int
      - name: protoNeutralPFOLinks
        return_type: const vector<ElementLink<DataVector<xAOD::PFO_v1> > >
      - name: protoNeutralPFO
        return_type: const xAOD::PFO_v1*
        arguments:
          - name: i
            type: int
      - name: nProtoNeutralPFOs
        return_type: int
      - name: protoPi0PFOLinks
        return_type: const vector<ElementLink<DataVector<xAOD::PFO_v1> > >
      - name: protoPi0PFO
        return_type: const xAOD::PFO_v1*
        arguments:
          - name: i
            type: int
      - name: nProtoPi0PFOs
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TauTrack_v1
    cpp_name: xAOD::TauTrack_v1
    include_file: xAODTau/versions/TauTrack_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: e
        return_type: double
      - name: m
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: flagWithMask
        return_type: bool
        arguments:
          - name: noname_arg
            type: int
      - name: z0sinThetaTJVA
        return_type: float
        arguments:
          - name: noname_arg
            type: xAOD.IParticle
      - name: d0TJVA
        return_type: float
      - name: d0SigTJVA
        return_type: float
      - name: z0sinthetaTJVA
        return_type: float
      - name: z0sinthetaSigTJVA
        return_type: float
      - name: rConv
        return_type: float
      - name: rConvII
        return_type: float
      - name: dRJetSeedAxis
        return_type: float
        arguments:
          - name: noname_arg
            type: xAOD.IParticle
      - name: bdtScores
        return_type: const vector<float>
      - name: bdtScore
        return_type: float
        arguments:
          - name: i
            type: int
      - name: nBdtScores
        return_type: int
      - name: trackLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: track
        return_type: const xAOD::TrackParticle_v1*
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrackCaloCluster_v1
    cpp_name: xAOD::TrackCaloCluster_v1
    include_file: xAODPFlow/versions/TrackCaloCluster_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: taste
        return_type: int
      - name: p4
        return_type: TLorentzVector
      - name: trackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: trackParticle
        return_type: const xAOD::TrackParticle_v1*
      - name: caloClusterLinks
        return_type: const vector<ElementLink<DataVector<xAOD::CaloCluster_v1> > >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrackJacobian_v1
    cpp_name: xAOD::TrackJacobian_v1
    include_file: xAODTracking/versions/TrackJacobian_v1.h
    methods:
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrackMeasurementValidation_v1
    cpp_name: xAOD::TrackMeasurementValidation_v1
    include_file: xAODTracking/versions/TrackMeasurementValidation_v1.h
    methods:
      - name: localX
        return_type: float
      - name: localY
        return_type: float
      - name: localXError
        return_type: float
      - name: localYError
        return_type: float
      - name: localXYCorrelation
        return_type: float
      - name: globalX
        return_type: float
      - name: globalY
        return_type: float
      - name: globalZ
        return_type: float
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrackMeasurement_v1
    cpp_name: xAOD::TrackMeasurement_v1
    include_file: xAODTracking/versions/TrackMeasurement_v1.h
    methods:
      - name: meas
        return_type: const vector<double>
      - name: covMatrix
        return_type: const vector<double>
      - name: uncalibratedMeasurementLink
        return_type: const ElementLink<DataVector<xAOD::UncalibratedMeasurement_v1> >
      - name: uncalibratedMeasurement
        return_type: const xAOD::UncalibratedMeasurement_v1*
      - name: size
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrackParameters_v1
    cpp_name: xAOD::TrackParameters_v1
    include_file: xAODTracking/versions/TrackParameters_v1.h
    methods:
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrackParticleClusterAssociation_v1
    cpp_name: xAOD::TrackParticleClusterAssociation_v1
    include_file: xAODAssociations/versions/TrackParticleClusterAssociation_v1.h
    methods:
      - name: trackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: caloClusterLinks
        return_type: const vector<ElementLink<DataVector<xAOD::CaloCluster_v1> > >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrackParticle_v1
    cpp_name: xAOD::TrackParticle_v1
    include_file: xAODTracking/versions/TrackParticle_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: charge
        return_type: float
      - name: d0
        return_type: float
      - name: z0
        return_type: float
      - name: phi0
        return_type: float
      - name: theta
        return_type: float
      - name: qOverP
        return_type: float
      - name: time
        return_type: float
      - name: definingParametersCovMatrixDiagVec
        return_type: const vector<float>
      - name: definingParametersCovMatrixOffDiagVec
        return_type: const vector<float>
      - name: definingParametersCovMatrixVec
        return_type: vector<float>
      - name: definingParametersCovMatrixOffDiagCompr
        return_type: bool
      - name: vx
        return_type: float
      - name: vy
        return_type: float
      - name: vz
        return_type: float
      - name: numberOfParameters
        return_type: int
      - name: parameterX
        return_type: float
        arguments:
          - name: index
            type: int
      - name: parameterY
        return_type: float
        arguments:
          - name: index
            type: int
      - name: parameterZ
        return_type: float
        arguments:
          - name: index
            type: int
      - name: parameterPX
        return_type: float
        arguments:
          - name: index
            type: int
      - name: parameterPY
        return_type: float
        arguments:
          - name: index
            type: int
      - name: parameterPZ
        return_type: float
        arguments:
          - name: index
            type: int
      - name: radiusOfFirstHit
        return_type: float
      - name: beamlineTiltX
        return_type: float
      - name: beamlineTiltY
        return_type: float
      - name: hitPattern
        return_type: unsigned int
      - name: chiSquared
        return_type: float
      - name: numberDoF
        return_type: float
      - name: hasValidTime
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrackStateValidation_v1
    cpp_name: xAOD::TrackStateValidation_v1
    include_file: xAODTracking/versions/TrackStateValidation_v1.h
    methods:
      - name: type
        return_type: int
      - name: localX
        return_type: float
      - name: localY
        return_type: float
      - name: localTheta
        return_type: float
      - name: localPhi
        return_type: float
      - name: unbiasedResidualX
        return_type: float
      - name: unbiasedResidualY
        return_type: float
      - name: unbiasedPullX
        return_type: float
      - name: unbiasedPullY
        return_type: float
      - name: biasedResidualX
        return_type: float
      - name: biasedResidualY
        return_type: float
      - name: biasedPullX
        return_type: float
      - name: biasedPullY
        return_type: float
      - name: trackMeasurementValidationLink
        return_type: ElementLink<DataVector<xAOD::TrackMeasurementValidation_v1> >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrackState_v1
    cpp_name: xAOD::TrackState_v1
    include_file: xAODTracking/versions/TrackState_v1.h
    methods:
      - name: chi2
        return_type: double
      - name: chi2Ptr
        return_type: const double*
      - name: pathLength
        return_type: double
      - name: pathLengthPtr
        return_type: const double*
      - name: uncalibratedMeasurementLink
        return_type: ElementLink<DataVector<xAOD::UncalibratedMeasurement_v1> >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigBphys_v1
    cpp_name: xAOD::TrigBphys_v1
    include_file: xAODTrigBphys/versions/TrigBphys_v1.h
    methods:
      - name: roiId
        return_type: unsigned int
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: pt
        return_type: float
      - name: mass
        return_type: float
      - name: fitmass
        return_type: float
      - name: fitchi2
        return_type: float
      - name: fitndof
        return_type: int
      - name: fitx
        return_type: float
      - name: fity
        return_type: float
      - name: fitz
        return_type: float
      - name: lxy
        return_type: float
      - name: lxyError
        return_type: float
      - name: tau
        return_type: float
      - name: tauError
        return_type: float
      - name: fitmassError
        return_type: float
      - name: secondaryDecay
        return_type: const xAOD::TrigBphys_v1*
      - name: secondaryDecayLink
        return_type: const ElementLink<DataVector<xAOD::TrigBphys_v1> >
      - name: trackParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: nTrackParticles
        return_type: int
      - name: trackParticle
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: i
            type: int
      - name: nVecRoiIds
        return_type: int
      - name: vecRoiId
        return_type: unsigned int
        arguments:
          - name: i
            type: int
      - name: lowerChain
        return_type: const xAOD::TrigBphys_v1*
      - name: lowerChainLink
        return_type: const ElementLink<DataVector<xAOD::TrigBphys_v1> >
      - name: particleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::IParticle> > >
      - name: nParticles
        return_type: int
      - name: particle
        return_type: const xAOD::IParticle*
        arguments:
          - name: i
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigCaloCluster_v1
    cpp_name: xAOD::TrigCaloCluster_v1
    include_file: xAODTrigCalo/versions/TrigCaloCluster_v1.h
    methods:
      - name: rawEnergy
        return_type: float
      - name: rawEnergySample
        return_type: const vector<float>
      - name: rawEt
        return_type: float
      - name: rawEta
        return_type: float
      - name: rawPhi
        return_type: float
      - name: RoIword
        return_type: long
      - name: nCells
        return_type: int
      - name: clusterQuality
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigComposite_v1
    cpp_name: xAOD::TrigComposite_v1
    include_file: xAODTrigger/versions/TrigComposite_v1.h
    methods:
      - name: name
        return_type: const string
      - name: removeObjectLink
        return_type: bool
        arguments:
          - name: name
            type: str
      - name: removeObjectCollectionLinks
        return_type: bool
        arguments:
          - name: name
            type: str
      - name: copyLinkFrom
        return_type: bool
        arguments:
          - name: other
            type: xAOD.TrigComposite_v1
          - name: name
            type: str
          - name: newName
            type: str
      - name: copyLinkCollectionFrom
        return_type: bool
        arguments:
          - name: other
            type: xAOD.TrigComposite_v1
          - name: name
            type: str
          - name: newName
            type: str
      - name: copyAllLinksFrom
        return_type: bool
        arguments:
          - name: other
            type: xAOD.TrigComposite_v1
      - name: linkColNames
        return_type: const vector<string>
      - name: isRemapped
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigEMCluster_v1
    cpp_name: xAOD::TrigEMCluster_v1
    include_file: xAODTrigCalo/versions/TrigEMCluster_v1.h
    methods:
      - name: energy
        return_type: float
      - name: energySample
        return_type: const vector<float>
      - name: et
        return_type: float
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: e237
        return_type: float
      - name: e277
        return_type: float
      - name: fracs1
        return_type: float
      - name: weta2
        return_type: float
      - name: ehad1
        return_type: float
      - name: eta1
        return_type: float
      - name: emaxs1
        return_type: float
      - name: e2tsts1
        return_type: float
      - name: e233
        return_type: float
      - name: wstot
        return_type: float
      - name: rawEnergy
        return_type: float
      - name: rawEnergySample
        return_type: const vector<float>
      - name: rawEt
        return_type: float
      - name: rawEta
        return_type: float
      - name: rawPhi
        return_type: float
      - name: RoIword
        return_type: long
      - name: nCells
        return_type: int
      - name: clusterQuality
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigElectron_v1
    cpp_name: xAOD::TrigElectron_v1
    include_file: xAODTrigEgamma/versions/TrigElectron_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: roiWord
        return_type: unsigned int
      - name: zvtx
        return_type: float
      - name: charge
        return_type: float
      - name: nTRTHits
        return_type: int
      - name: nTRTHiThresholdHits
        return_type: int
      - name: rcore
        return_type: float
      - name: eratio
        return_type: float
      - name: etHad
        return_type: float
      - name: etHad1
        return_type: float
      - name: f0
        return_type: float
      - name: f1
        return_type: float
      - name: f2
        return_type: float
      - name: f3
        return_type: float
      - name: trkEtaAtCalo
        return_type: float
      - name: trkPhiAtCalo
        return_type: float
      - name: etOverPt
        return_type: float
      - name: trkClusDeta
        return_type: float
      - name: trkClusDphi
        return_type: float
      - name: caloEta
        return_type: float
      - name: caloPhi
        return_type: float
      - name: emCluster
        return_type: const xAOD::TrigEMCluster_v1*
      - name: emClusterLink
        return_type: const ElementLink<DataVector<xAOD::TrigEMCluster_v1> >
      - name: trackParticle
        return_type: const xAOD::TrackParticle_v1*
      - name: trackParticleLink
        return_type: const ElementLink<DataVector<xAOD::TrackParticle_v1> >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigHisto2D_v1
    cpp_name: xAOD::TrigHisto2D_v1
    include_file: xAODTrigMinBias/versions/TrigHisto2D_v1.h
    methods:
      - name: contents
        return_type: const vector<float>
      - name: nbinsX
        return_type: unsigned int
      - name: minX
        return_type: float
      - name: maxX
        return_type: float
      - name: nbinsY
        return_type: unsigned int
      - name: minY
        return_type: float
      - name: maxY
        return_type: float
      - name: profileX
        return_type: vector<float>
      - name: profileY
        return_type: vector<float>
      - name: sumEntries
        return_type: double
        arguments:
          - name: value_x
            type: float
          - name: value_y
            type: float
          - name: cutType
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigMissingET_v1
    cpp_name: xAOD::TrigMissingET_v1
    include_file: xAODTrigMissingET/versions/TrigMissingET_v1.h
    methods:
      - name: ex
        return_type: float
      - name: ey
        return_type: float
      - name: ez
        return_type: float
      - name: sumEt
        return_type: float
      - name: sumE
        return_type: float
      - name: flag
        return_type: int
      - name: roiWord
        return_type: unsigned int
      - name: nameOfComponent
        return_type: const string
        arguments:
          - name: index
            type: int
      - name: getNumberOfComponents
        return_type: unsigned int
      - name: exComponent
        return_type: float
        arguments:
          - name: index
            type: int
      - name: eyComponent
        return_type: float
        arguments:
          - name: index
            type: int
      - name: ezComponent
        return_type: float
        arguments:
          - name: index
            type: int
      - name: sumEtComponent
        return_type: float
        arguments:
          - name: index
            type: int
      - name: sumEComponent
        return_type: float
        arguments:
          - name: index
            type: int
      - name: calib0Component
        return_type: float
        arguments:
          - name: index
            type: int
      - name: calib1Component
        return_type: float
        arguments:
          - name: index
            type: int
      - name: sumOfSignsComponent
        return_type: float
        arguments:
          - name: index
            type: int
      - name: statusComponent
        return_type: short
        arguments:
          - name: index
            type: int
      - name: usedChannelsComponent
        return_type: unsigned short
        arguments:
          - name: index
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigPassBits_v1
    cpp_name: xAOD::TrigPassBits_v1
    include_file: xAODTrigger/versions/TrigPassBits_v1.h
    methods:
      - name: isPassing
        return_type: bool
        arguments:
          - name: index
            type: int
      - name: hash
        return_type: unsigned int
        arguments:
          - name: key
            type: str
      - name: size
        return_type: unsigned int
      - name: containerKey
        return_type: unsigned int
      - name: containerClid
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigPhoton_v1
    cpp_name: xAOD::TrigPhoton_v1
    include_file: xAODTrigEgamma/versions/TrigPhoton_v1.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: roiWord
        return_type: unsigned int
      - name: rcore
        return_type: float
      - name: eratio
        return_type: float
      - name: etHad
        return_type: float
      - name: etHad1
        return_type: float
      - name: f0
        return_type: float
      - name: f1
        return_type: float
      - name: f2
        return_type: float
      - name: f3
        return_type: float
      - name: fside
        return_type: float
      - name: weta2
        return_type: float
      - name: caloEta
        return_type: float
      - name: caloPhi
        return_type: float
      - name: dEta
        return_type: float
      - name: dPhi
        return_type: float
      - name: emCluster
        return_type: const xAOD::TrigEMCluster_v1*
      - name: emClusterLink
        return_type: const ElementLink<DataVector<xAOD::TrigEMCluster_v1> >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigRNNOutput_v2
    cpp_name: xAOD::TrigRNNOutput_v2
    include_file: xAODTrigRinger/versions/TrigRNNOutput_v2.h
    methods:
      - name: rnnDecision
        return_type: const vector<float>
      - name: ringer
        return_type: const xAOD::TrigRingerRings_v2*
      - name: ringerLink
        return_type: const ElementLink<DataVector<xAOD::TrigRingerRings_v2> >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigRingerRings_v2
    cpp_name: xAOD::TrigRingerRings_v2
    include_file: xAODTrigRinger/versions/TrigRingerRings_v2.h
    methods:
      - name: rings
        return_type: const vector<float>
      - name: size
        return_type: unsigned int
      - name: emCluster
        return_type: const xAOD::TrigEMCluster_v1*
      - name: emClusterLink
        return_type: const ElementLink<DataVector<xAOD::TrigEMCluster_v1> >
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigSpacePointCounts_v1
    cpp_name: xAOD::TrigSpacePointCounts_v1
    include_file: xAODTrigMinBias/versions/TrigSpacePointCounts_v1.h
    methods:
      - name: contentsPixelClusEndcapC
        return_type: const vector<float>
      - name: contentsPixelClusBarrel
        return_type: const vector<float>
      - name: contentsPixelClusEndcapA
        return_type: const vector<float>
      - name: pixelClusTotBins
        return_type: unsigned int
      - name: pixelClusTotMin
        return_type: float
      - name: pixelClusTotMax
        return_type: float
      - name: pixelClusSizeBins
        return_type: unsigned int
      - name: pixelClusSizeMin
        return_type: float
      - name: pixelClusSizeMax
        return_type: float
      - name: sctSpEndcapC
        return_type: unsigned int
      - name: sctSpBarrel
        return_type: unsigned int
      - name: sctSpEndcapA
        return_type: unsigned int
      - name: pixelClusBarrelSumEntries
        return_type: double
        arguments:
          - name: value_x
            type: float
          - name: value_y
            type: float
          - name: cutType
            type: int
      - name: pixelClusEndcapASumEntries
        return_type: double
        arguments:
          - name: value_x
            type: float
          - name: value_y
            type: float
          - name: cutType
            type: int
      - name: pixelClusEndcapCSumEntries
        return_type: double
        arguments:
          - name: value_x
            type: float
          - name: value_y
            type: float
          - name: cutType
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigT2MbtsBits_v1
    cpp_name: xAOD::TrigT2MbtsBits_v1
    include_file: xAODTrigMinBias/versions/TrigT2MbtsBits_v1.h
    methods:
      - name: triggerEnergies
        return_type: const vector<float>
      - name: triggerTimes
        return_type: const vector<float>
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigT2ZdcSignals_v1
    cpp_name: xAOD::TrigT2ZdcSignals_v1
    include_file: xAODTrigMinBias/versions/TrigT2ZdcSignals_v1.h
    methods:
      - name: triggerEnergies
        return_type: const vector<float>
      - name: triggerTimes
        return_type: const vector<float>
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigTrackCounts_v1
    cpp_name: xAOD::TrigTrackCounts_v1
    include_file: xAODTrigMinBias/versions/TrigTrackCounts_v1.h
    methods:
      - name: z0_pt
        return_type: const vector<float>
      - name: eta_phi
        return_type: const vector<float>
      - name: z0Bins
        return_type: unsigned int
      - name: z0Min
        return_type: float
      - name: z0Max
        return_type: float
      - name: ptBins
        return_type: unsigned int
      - name: ptMin
        return_type: float
      - name: ptMax
        return_type: float
      - name: etaBins
        return_type: unsigned int
      - name: etaMin
        return_type: float
      - name: etaMax
        return_type: float
      - name: phiBins
        return_type: unsigned int
      - name: phiMin
        return_type: float
      - name: phiMax
        return_type: float
      - name: z0_ptSumEntries
        return_type: double
        arguments:
          - name: value_x
            type: float
          - name: value_y
            type: float
          - name: cutType
            type: int
      - name: eta_phiSumEntries
        return_type: double
        arguments:
          - name: value_x
            type: float
          - name: value_y
            type: float
          - name: cutType
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TrigVertexCounts_v1
    cpp_name: xAOD::TrigVertexCounts_v1
    include_file: xAODTrigMinBias/versions/TrigVertexCounts_v1.h
    methods:
      - name: vtxTrkPtSqSum
        return_type: const vector<float>
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TriggerMenuJson_v1
    cpp_name: xAOD::TriggerMenuJson_v1
    include_file: xAODTrigger/versions/TriggerMenuJson_v1.h
    methods:
      - name: key
        return_type: unsigned int
      - name: name
        return_type: const string
      - name: payload
        return_type: const string
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TriggerMenu_v1
    cpp_name: xAOD::TriggerMenu_v1
    include_file: xAODTrigger/versions/TriggerMenu_v1.h
    methods:
      - name: smk
        return_type: unsigned int
      - name: l1psk
        return_type: unsigned int
      - name: hltpsk
        return_type: unsigned int
      - name: itemCtpIdsAvailable
        return_type: bool
      - name: itemNames
        return_type: const vector<string>
      - name: itemNamesAvailable
        return_type: bool
      - name: itemPrescales
        return_type: const vector<float>
      - name: itemPrescalesAvailable
        return_type: bool
      - name: chainIdsAvailable
        return_type: bool
      - name: chainNames
        return_type: const vector<string>
      - name: chainNamesAvailable
        return_type: bool
      - name: chainParentNames
        return_type: const vector<string>
      - name: chainParentNamesAvailable
        return_type: bool
      - name: chainPrescales
        return_type: const vector<float>
      - name: chainPrescalesAvailable
        return_type: bool
      - name: chainRerunPrescales
        return_type: const vector<float>
      - name: chainRerunPrescalesAvailable
        return_type: bool
      - name: chainPassthroughPrescales
        return_type: const vector<float>
      - name: chainPassthroughPrescalesAvailable
        return_type: bool
      - name: chainSignatureCountersAvailable
        return_type: bool
      - name: chainSignatureLogics
        return_type: const vector<vector<int> >
      - name: chainSignatureLogicsAvailable
        return_type: bool
      - name: chainSignatureOutputTEs
        return_type: const vector<vector<vector<string> > >
      - name: chainSignatureOutputTEsAvailable
        return_type: bool
      - name: chainSignatureLabels
        return_type: const vector<vector<string> >
      - name: chainSignatureLabelsAvailable
        return_type: bool
      - name: sequenceInputTEs
        return_type: const vector<vector<string> >
      - name: sequenceInputTEsAvailable
        return_type: bool
      - name: sequenceOutputTEs
        return_type: const vector<string>
      - name: sequenceOutputTEsAvailable
        return_type: bool
      - name: sequenceAlgorithms
        return_type: const vector<vector<string> >
      - name: sequenceAlgorithmsAvailable
        return_type: bool
      - name: bunchGroupBunchesAvailable
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TriggerTower_v2
    cpp_name: xAOD::TriggerTower_v2
    include_file: xAODTrigL1Calo/versions/TriggerTower_v2.h
    methods:
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: coolId
        return_type: unsigned int
      - name: layer
        return_type: int
      - name: sampling
        return_type: int
      - name: correction
        return_type: const vector<short>
      - name: errorWord
        return_type: unsigned int
      - name: isCpSaturated
        return_type: bool
      - name: isJepSaturated
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TruthEventBase_v1
    cpp_name: xAOD::TruthEventBase_v1
    include_file: xAODTruth/versions/TruthEventBase_v1.h
    methods:
      - name: truthParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TruthParticle_v1> > >
      - name: nTruthParticles
        return_type: int
      - name: truthParticleLink
        return_type: const ElementLink<DataVector<xAOD::TruthParticle_v1> >
        arguments:
          - name: index
            type: int
      - name: truthParticle
        return_type: const xAOD::TruthParticle_v1*
        arguments:
          - name: index
            type: int
      - name: truthVertexLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TruthVertex_v1> > >
      - name: nTruthVertices
        return_type: int
      - name: truthVertexLink
        return_type: const ElementLink<DataVector<xAOD::TruthVertex_v1> >
        arguments:
          - name: index
            type: int
      - name: truthVertex
        return_type: const xAOD::TruthVertex_v1*
        arguments:
          - name: index
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TruthEvent_v1
    cpp_name: xAOD::TruthEvent_v1
    include_file: xAODTruth/versions/TruthEvent_v1.h
    methods:
      - name: weights
        return_type: const vector<float>
      - name: crossSection
        return_type: float
      - name: crossSectionError
        return_type: float
      - name: pdfInfo
        return_type: xAOD::TruthEvent_v1::PdfInfo
      - name: signalProcessVertex
        return_type: const xAOD::TruthVertex_v1*
      - name: signalProcessVertexLink
        return_type: const ElementLink<DataVector<xAOD::TruthVertex_v1> >
      - name: beamParticle1Link
        return_type: const ElementLink<DataVector<xAOD::TruthParticle_v1> >
      - name: beamParticle2Link
        return_type: const ElementLink<DataVector<xAOD::TruthParticle_v1> >
      - name: truthParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TruthParticle_v1> > >
      - name: nTruthParticles
        return_type: int
      - name: truthParticleLink
        return_type: const ElementLink<DataVector<xAOD::TruthParticle_v1> >
        arguments:
          - name: index
            type: int
      - name: truthParticle
        return_type: const xAOD::TruthParticle_v1*
        arguments:
          - name: index
            type: int
      - name: truthVertexLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TruthVertex_v1> > >
      - name: nTruthVertices
        return_type: int
      - name: truthVertexLink
        return_type: const ElementLink<DataVector<xAOD::TruthVertex_v1> >
        arguments:
          - name: index
            type: int
      - name: truthVertex
        return_type: const xAOD::TruthVertex_v1*
        arguments:
          - name: index
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TruthEvent_v1.PdfInfo
    cpp_name: xAOD::TruthEvent_v1::PdfInfo
    include_file: xAODTruth/versions/TruthEvent_v1.h
    methods:
      - name: valid
        return_type: bool
  - python_name: xAOD.TruthMetaData_v1
    cpp_name: xAOD::TruthMetaData_v1
    include_file: xAODTruth/versions/TruthMetaData_v1.h
    methods:
      - name: mcChannelNumber
        return_type: unsigned int
      - name: weightNames
        return_type: const vector<string>
      - name: lhefGenerator
        return_type: const string
      - name: generators
        return_type: const string
      - name: evgenProcess
        return_type: const string
      - name: evgenTune
        return_type: const string
      - name: hardPDF
        return_type: const string
      - name: softPDF
        return_type: const string
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TruthParticle_v1
    cpp_name: xAOD::TruthParticle_v1
    include_file: xAODTruth/versions/TruthParticle_v1.h
    methods:
      - name: pdgId
        return_type: int
      - name: absPdgId
        return_type: int
      - name: barcode
        return_type: int
      - name: status
        return_type: int
      - name: hasProdVtx
        return_type: bool
      - name: prodVtx
        return_type: const xAOD::TruthVertex_v1*
      - name: prodVtxLink
        return_type: const ElementLink<DataVector<xAOD::TruthVertex_v1> >
      - name: hasDecayVtx
        return_type: bool
      - name: decayVtx
        return_type: const xAOD::TruthVertex_v1*
      - name: decayVtxLink
        return_type: const ElementLink<DataVector<xAOD::TruthVertex_v1> >
      - name: nParents
        return_type: int
      - name: parent
        return_type: const xAOD::TruthParticle_v1*
        arguments:
          - name: i
            type: int
      - name: nChildren
        return_type: int
      - name: child
        return_type: const xAOD::TruthParticle_v1*
        arguments:
          - name: i
            type: int
      - name: pt
        return_type: double
      - name: eta
        return_type: double
      - name: phi
        return_type: double
      - name: m
        return_type: double
      - name: e
        return_type: double
      - name: rapidity
        return_type: double
      - name: p4
        return_type: TLorentzVector
      - name: abseta
        return_type: double
      - name: absrapidity
        return_type: double
      - name: px
        return_type: float
      - name: py
        return_type: float
      - name: pz
        return_type: float
      - name: charge
        return_type: double
      - name: threeCharge
        return_type: int
      - name: isCharged
        return_type: bool
      - name: isNeutral
        return_type: bool
      - name: isPhoton
        return_type: bool
      - name: isLepton
        return_type: bool
      - name: isChLepton
        return_type: bool
      - name: isElectron
        return_type: bool
      - name: isMuon
        return_type: bool
      - name: isTau
        return_type: bool
      - name: isNeutrino
        return_type: bool
      - name: isHadron
        return_type: bool
      - name: isMeson
        return_type: bool
      - name: isBaryon
        return_type: bool
      - name: hasStrange
        return_type: bool
      - name: hasCharm
        return_type: bool
      - name: hasBottom
        return_type: bool
      - name: isLightMeson
        return_type: bool
      - name: isLightBaryon
        return_type: bool
      - name: isLightHadron
        return_type: bool
      - name: isHeavyMeson
        return_type: bool
      - name: isHeavyBaryon
        return_type: bool
      - name: isHeavyHadron
        return_type: bool
      - name: isBottomMeson
        return_type: bool
      - name: isBottomBaryon
        return_type: bool
      - name: isBottomHadron
        return_type: bool
      - name: isCharmMeson
        return_type: bool
      - name: isCharmBaryon
        return_type: bool
      - name: isCharmHadron
        return_type: bool
      - name: isStrangeMeson
        return_type: bool
      - name: isStrangeBaryon
        return_type: bool
      - name: isStrangeHadron
        return_type: bool
      - name: isQuark
        return_type: bool
      - name: isParton
        return_type: bool
      - name: isTop
        return_type: bool
      - name: isW
        return_type: bool
      - name: isZ
        return_type: bool
      - name: isHiggs
        return_type: bool
      - name: isResonance
        return_type: bool
      - name: isGenSpecific
        return_type: bool
      - name: isBSM
        return_type: bool
      - name: isGenStable
        return_type: bool
      - name: polarization
        return_type: xAOD::TruthParticle_v1::Polarization
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TruthParticle_v1.Polarization
    cpp_name: xAOD::TruthParticle_v1::Polarization
    include_file: xAODTruth/versions/TruthParticle_v1.h
    methods:
      - name: valid
        return_type: bool
  - python_name: xAOD.TruthPileupEvent_v1
    cpp_name: xAOD::TruthPileupEvent_v1
    include_file: xAODTruth/versions/TruthPileupEvent_v1.h
    methods:
      - name: truthParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TruthParticle_v1> > >
      - name: nTruthParticles
        return_type: int
      - name: truthParticleLink
        return_type: const ElementLink<DataVector<xAOD::TruthParticle_v1> >
        arguments:
          - name: index
            type: int
      - name: truthParticle
        return_type: const xAOD::TruthParticle_v1*
        arguments:
          - name: index
            type: int
      - name: truthVertexLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TruthVertex_v1> > >
      - name: nTruthVertices
        return_type: int
      - name: truthVertexLink
        return_type: const ElementLink<DataVector<xAOD::TruthVertex_v1> >
        arguments:
          - name: index
            type: int
      - name: truthVertex
        return_type: const xAOD::TruthVertex_v1*
        arguments:
          - name: index
            type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.TruthVertex_v1
    cpp_name: xAOD::TruthVertex_v1
    include_file: xAODTruth/versions/TruthVertex_v1.h
    methods:
      - name: id
        return_type: int
      - name: barcode
        return_type: int
      - name: incomingParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TruthParticle_v1> > >
      - name: nIncomingParticles
        return_type: int
      - name: incomingParticle
        return_type: const xAOD::TruthParticle_v1*
        arguments:
          - name: index
            type: int
      - name: outgoingParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TruthParticle_v1> > >
      - name: nOutgoingParticles
        return_type: int
      - name: outgoingParticle
        return_type: const xAOD::TruthParticle_v1*
        arguments:
          - name: index
            type: int
      - name: x
        return_type: float
      - name: y
        return_type: float
      - name: z
        return_type: float
      - name: perp
        return_type: float
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: t
        return_type: float
      - name: v4
        return_type: TLorentzVector
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.UncalibratedMeasurement_v1
    cpp_name: xAOD::UncalibratedMeasurement_v1
    include_file: xAODMeasurementBase/versions/UncalibratedMeasurement_v1.h
    methods:
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.Vertex_v1
    cpp_name: xAOD::Vertex_v1
    include_file: xAODTracking/versions/Vertex_v1.h
    methods:
      - name: x
        return_type: float
      - name: y
        return_type: float
      - name: z
        return_type: float
      - name: covariance
        return_type: const vector<float>
      - name: chiSquared
        return_type: float
      - name: numberDoF
        return_type: float
      - name: trackParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::TrackParticle_v1> > >
      - name: trackWeights
        return_type: const vector<float>
      - name: neutralParticleLinks
        return_type: const vector<ElementLink<DataVector<xAOD::NeutralParticle_v1> > >
      - name: neutralWeights
        return_type: const vector<float>
      - name: trackParticle
        return_type: const xAOD::TrackParticle_v1*
        arguments:
          - name: i
            type: int
      - name: trackWeight
        return_type: float
        arguments:
          - name: i
            type: int
      - name: nTrackParticles
        return_type: int
      - name: neutralParticle
        return_type: const xAOD::NeutralParticle_v1*
        arguments:
          - name: i
            type: int
      - name: neutralWeight
        return_type: float
        arguments:
          - name: i
            type: int
      - name: nNeutralParticles
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.ZdcModule_v1
    cpp_name: xAOD::ZdcModule_v1
    include_file: xAODForward/versions/ZdcModule_v1.h
    methods:
      - name: zdcId
        return_type: unsigned int
      - name: zdcSide
        return_type: int
      - name: zdcModule
        return_type: int
      - name: zdcType
        return_type: int
      - name: zdcChannel
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.eFexEMRoI_v1
    cpp_name: xAOD::eFexEMRoI_v1
    include_file: xAODTrigger/versions/eFexEMRoI_v1.h
    methods:
      - name: word0
        return_type: unsigned int
      - name: word1
        return_type: unsigned int
      - name: et
        return_type: float
      - name: eta
        return_type: float
      - name: iEta
        return_type: int
      - name: seed
        return_type: unsigned int
      - name: phi
        return_type: float
      - name: iPhi
        return_type: int
      - name: iEtaTopo
        return_type: int
      - name: iPhiTopo
        return_type: int
      - name: Reta
        return_type: float
      - name: Rhad
        return_type: float
      - name: Wstot
        return_type: float
      - name: tobWord
        return_type: unsigned int
      - name: shelfNumber
        return_type: unsigned int
      - name: eFexNumber
        return_type: unsigned int
      - name: fpga
        return_type: unsigned int
      - name: fpgaEta
        return_type: unsigned int
      - name: fpgaPhi
        return_type: unsigned int
      - name: UpNotDown
        return_type: unsigned int
      - name: etTOB
        return_type: unsigned int
      - name: etXTOB
        return_type: unsigned int
      - name: RetaThresholds
        return_type: unsigned int
      - name: RhadThresholds
        return_type: unsigned int
      - name: WstotThresholds
        return_type: unsigned int
      - name: seedMax
        return_type: unsigned int
      - name: bcn4
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.eFexTauRoI_v1
    cpp_name: xAOD::eFexTauRoI_v1
    include_file: xAODTrigger/versions/eFexTauRoI_v1.h
    methods:
      - name: word0
        return_type: unsigned int
      - name: word1
        return_type: unsigned int
      - name: shelfNumber
        return_type: unsigned int
      - name: eFexNumber
        return_type: unsigned int
      - name: et
        return_type: float
      - name: eta
        return_type: float
      - name: iEta
        return_type: int
      - name: seed
        return_type: unsigned int
      - name: phi
        return_type: float
      - name: iPhi
        return_type: int
      - name: iEtaTopo
        return_type: int
      - name: iPhiTopo
        return_type: int
      - name: rCore
        return_type: float
      - name: rHad
        return_type: float
      - name: tobWord
        return_type: unsigned int
      - name: fpga
        return_type: unsigned int
      - name: fpgaEta
        return_type: unsigned int
      - name: fpgaPhi
        return_type: unsigned int
      - name: upNotDown
        return_type: bool
      - name: etTOB
        return_type: unsigned int
      - name: etXTOB
        return_type: unsigned int
      - name: rCoreThresholds
        return_type: unsigned int
      - name: rHadThresholds
        return_type: unsigned int
      - name: tauThreeThresholds
        return_type: unsigned int
      - name: seedMax
        return_type: bool
      - name: bcn4
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.eFexTower_v1
    cpp_name: xAOD::eFexTower_v1
    include_file: xAODTrigL1Calo/versions/eFexTower_v1.h
    methods:
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: disconnectedCount
        return_type: bool
        arguments:
          - name: idx
            type: int
      - name: em_status
        return_type: unsigned int
      - name: had_status
        return_type: unsigned int
      - name: eFEXtowerID
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.gFexGlobalRoI_v1
    cpp_name: xAOD::gFexGlobalRoI_v1
    include_file: xAODTrigger/versions/gFexGlobalRoI_v1.h
    methods:
      - name: word
        return_type: unsigned int
      - name: tobEtScaleOne
        return_type: int
      - name: tobEtScaleTwo
        return_type: int
      - name: METquantityOne
        return_type: float
      - name: METquantityTwo
        return_type: float
      - name: SumEt
        return_type: float
      - name: unpackStatusOne
        return_type: unsigned int
      - name: unpackStatusTwo
        return_type: unsigned int
      - name: unpackSaturated
        return_type: unsigned int
      - name: globalType
        return_type: int
      - name: unpackType
        return_type: int
      - name: isgScalar
        return_type: bool
      - name: isgMET
        return_type: bool
      - name: isgMHT
        return_type: bool
      - name: isgMST
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.gFexJetRoI_v1
    cpp_name: xAOD::gFexJetRoI_v1
    include_file: xAODTrigger/versions/gFexJetRoI_v1.h
    methods:
      - name: word
        return_type: unsigned int
      - name: tobEtScale
        return_type: int
      - name: et
        return_type: float
      - name: unpackEtaIndex
        return_type: unsigned int
      - name: eta
        return_type: float
      - name: etaMin
        return_type: float
      - name: etaMax
        return_type: float
      - name: unpackPhiIndex
        return_type: unsigned int
      - name: phi_gFex
        return_type: float
      - name: phiMin_gFex
        return_type: float
      - name: phiMax_gFex
        return_type: float
      - name: phi
        return_type: float
      - name: phiMin
        return_type: float
      - name: phiMax
        return_type: float
      - name: iPhiTopo
        return_type: int
      - name: unpackStatus
        return_type: unsigned int
      - name: unpackSaturated
        return_type: unsigned int
      - name: gFexType
        return_type: int
      - name: unpackType
        return_type: int
      - name: isgBlockLead
        return_type: bool
      - name: isgBlockSub
        return_type: bool
      - name: isgJet
        return_type: bool
      - name: isgRho
        return_type: bool
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.gFexTower_v1
    cpp_name: xAOD::gFexTower_v1
    include_file: xAODTrigL1Calo/versions/gFexTower_v1.h
    methods:
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: towerEt
        return_type: int
      - name: gFEXtowerID
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.jFexFwdElRoI_v1
    cpp_name: xAOD::jFexFwdElRoI_v1
    include_file: xAODTrigger/versions/jFexFwdElRoI_v1.h
    methods:
      - name: tobWord
        return_type: unsigned int
      - name: globalEta
        return_type: int
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: tobEtScale
        return_type: int
      - name: unpackEtTOB
        return_type: unsigned int
      - name: et
        return_type: unsigned int
      - name: unpackEMIsoTOB
        return_type: unsigned int
      - name: unpackEMf1TOB
        return_type: unsigned int
      - name: unpackEMf2TOB
        return_type: unsigned int
      - name: unpackEtaIndex
        return_type: unsigned int
      - name: unpackPhiIndex
        return_type: unsigned int
      - name: unpackSaturationIndex
        return_type: unsigned int
      - name: getGlobalEta
        return_type: int
      - name: getEtEMiso
        return_type: unsigned int
      - name: getEtEM
        return_type: unsigned int
      - name: getEtHad1
        return_type: unsigned int
      - name: getEtHad2
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.jFexLRJetRoI_v1
    cpp_name: xAOD::jFexLRJetRoI_v1
    include_file: xAODTrigger/versions/jFexLRJetRoI_v1.h
    methods:
      - name: tobWord
        return_type: unsigned int
      - name: globalEta
        return_type: int
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: tobEtScale
        return_type: int
      - name: unpackEtTOB
        return_type: unsigned int
      - name: et
        return_type: unsigned int
      - name: unpackEtaIndex
        return_type: unsigned int
      - name: unpackPhiIndex
        return_type: unsigned int
      - name: unpackSaturationIndex
        return_type: unsigned int
      - name: unpackGlobalEta
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.jFexMETRoI_v1
    cpp_name: xAOD::jFexMETRoI_v1
    include_file: xAODTrigger/versions/jFexMETRoI_v1.h
    methods:
      - name: tobWord
        return_type: unsigned int
      - name: tobEx
        return_type: int
      - name: tobEy
        return_type: int
      - name: tobEtScale
        return_type: int
      - name: unpackEx
        return_type: int
      - name: Ex
        return_type: int
      - name: unpackEy
        return_type: int
      - name: Ey
        return_type: int
      - name: unpackRes
        return_type: unsigned int
      - name: unpackSat
        return_type: unsigned int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.jFexSRJetRoI_v1
    cpp_name: xAOD::jFexSRJetRoI_v1
    include_file: xAODTrigger/versions/jFexSRJetRoI_v1.h
    methods:
      - name: tobWord
        return_type: unsigned int
      - name: globalEta
        return_type: int
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: tobEtScale
        return_type: int
      - name: unpackEtTOB
        return_type: unsigned int
      - name: et
        return_type: unsigned int
      - name: unpackEtaIndex
        return_type: unsigned int
      - name: unpackPhiIndex
        return_type: unsigned int
      - name: unpackSaturationIndex
        return_type: unsigned int
      - name: unpackGlobalEta
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.jFexSumETRoI_v1
    cpp_name: xAOD::jFexSumETRoI_v1
    include_file: xAODTrigger/versions/jFexSumETRoI_v1.h
    methods:
      - name: tobWord
        return_type: unsigned int
      - name: tobEtScale
        return_type: int
      - name: Et_lower
        return_type: int
      - name: Et_upper
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.jFexTauRoI_v1
    cpp_name: xAOD::jFexTauRoI_v1
    include_file: xAODTrigger/versions/jFexTauRoI_v1.h
    methods:
      - name: tobWord
        return_type: unsigned int
      - name: globalEta
        return_type: int
      - name: eta
        return_type: float
      - name: phi
        return_type: float
      - name: tobEtScale
        return_type: int
      - name: unpackEtTOB
        return_type: unsigned int
      - name: et
        return_type: unsigned int
      - name: unpackIsoTOB
        return_type: unsigned int
      - name: iso
        return_type: unsigned int
      - name: unpackEtaIndex
        return_type: unsigned int
      - name: unpackPhiIndex
        return_type: unsigned int
      - name: unpackSaturationIndex
        return_type: unsigned int
      - name: unpackGlobalEta
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
  - python_name: xAOD.jFexTower_v1
    cpp_name: xAOD::jFexTower_v1
    include_file: xAODTrigL1Calo/versions/jFexTower_v1.h
    methods:
      - name: eta
        return_type: float
      - name: globalEta
        return_type: int
      - name: phi
        return_type: float
      - name: globalPhi
        return_type: unsigned int
      - name: jFEXtowerID
        return_type: unsigned int
      - name: SCellEt
        return_type: const vector<float>
      - name: SCellID
        return_type: const vector<int>
      - name: TileEt
        return_type: int
      - name: index
        return_type: int
      - name: usingPrivateStore
        return_type: bool
      - name: usingStandaloneStore
        return_type: bool
      - name: hasStore
        return_type: bool
      - name: hasNonConstStore
        return_type: bool
      - name: clearDecorations
        return_type: bool
      - name: trackIndices
        return_type: bool
      - name: auxdataConst
        return_type: U
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('auxdataConst', s, a, param_1)"
      - name: isAvailable
        return_type: bool
        arguments:
          - name: name
            type: str
        parameter_arguments:
          - name: auxdata_type
            type: cpp_type[U]
        param_helper: type_support.index_type_forwarder
        param_type_callback: "lambda s, a, param_1: {{package_name}}.type_support.cpp_generic_1arg_callback('isAvailable', s, a, param_1)"
files:
  - name: trigger.py
    init_lines:
      - from .trigger import tdt_chain_fired
      - from .trigger import tmt_match_object
    contents:
      - "# Temp file to develop the code we need to run as the TDT"
      - "from typing import Tuple, TypeVar"
      - "from func_adl import func_adl_callable, ObjectStream"
      - "import ast"
      - ""
      - "T = TypeVar(\"T\")"
      - ""
      - ""
      - "def _add_decision_tool(s: ObjectStream[T]) -> ObjectStream[T]:"
      - "    'Add code block for a decision tool initialization'"
      - "    return s.MetaData("
      - "        {"
      - "            \"metadata_type\": \"inject_code\","
      - "            \"name\": \"trigger_decision_tool\","
      - "            \"header_includes\": ["
      - "                \"TrigConfInterfaces/ITrigConfigTool.h\","
      - "                \"TrigDecisionTool/TrigDecisionTool.h\","
      - "                \"AsgTools/AnaToolHandle.h\","
      - "            ],"
      - "            \"private_members\": ["
      - "                \"asg::AnaToolHandle<TrigConf::ITrigConfigTool> m_trigConf;\","
      - "                \"asg::AnaToolHandle<Trig::TrigDecisionTool> m_trigDec;\","
      - "            ],"
      - "            \"instance_initialization\": ["
      - "                'm_trigConf(\"TrigConf::xAODConfigTool/xAODConfigTool\")',"
      - "                'm_trigDec(\"Trig::TrigDecisionTool/TrigDecisionTool\")',"
      - "            ],"
      - "            \"initialize_lines\": ["
      - "                \"ANA_CHECK (m_trigConf.initialize());\","
      - "                'ANA_CHECK (m_trigDec.setProperty(\"ConfigTool\", m_trigConf.getHandle()));',"
      - "                'ANA_CHECK (m_trigDec.setProperty(\"TrigDecisionKey\", \"xTrigDecision\"));',"
      - "                \"ANA_CHECK (m_trigDec.initialize());\","
      - "            ],"
      - "            \"link_libraries\": [\"TrigDecisionToolLib\", \"TrigConfInterfaces\"],"
      - "        }"
      - "    )"
      - ""
      - ""
      - "def _add_match_tool(s: ObjectStream[T]) -> ObjectStream[T]:"
      - "    new_s = s.MetaData("
      - "            {"
      - "                \"metadata_type\": \"inject_code\","
      - "                \"name\": \"trigger_match_tool\","
      - "                \"private_members\": ["
      - "                    \"asg::AnaToolHandle<Trig::IMatchingTool> m_tmt;\","
      - "                ],"
      - "                \"header_includes\": ["
      - "                    \"TriggerMatchingTool/MatchFromCompositeTool.h\","
      - "                ],"
      - "                \"instance_initialization\": ["
      - "                    'm_tmt(\"Trig::MatchFromCompositeTool\")',"
      - "                ],"
      - "                \"initialize_lines\": ["
      - "                    'ANA_CHECK(m_tmt.initialize());',"
      - "                ],"
      - "                \"link_libraries\": [\"TriggerMatchingToolLib\"],"
      - "            }"
      - "    )"
      - "    return _add_decision_tool(new_s)"
      - ""
      - ""
      - "def _tdt_chain_fired_processor("
      - "    s: ObjectStream[T], a: ast.Call"
      - ") -> Tuple[ObjectStream[T], ast.Call]:"
      - "    \"\"\"Configure the backend to run the Trigger Decision Tool!"
      - ""
      - "    Args:"
      - "        s (ObjectStream[T]): The stream func_adl is working on - and we can add meta data to.Tuple"
      - "        a (ast.Call): The callsite in case we need to modify it"
      - ""
      - "    Returns:"
      - "        Tuple[ObjectStream[T], ast.Call]: Update stream and call site."
      - "    \"\"\""
      - "    # Make sure the TDT is declared and send the code"
      - "    # for this particular function"
      - "    new_s = s.MetaData("
      - "        {"
      - "            \"metadata_type\": \"add_cpp_function\","
      - "            \"name\": \"tdt_chain_fired\","
      - "            \"include_files\": [],"
      - "            \"arguments\": [\"triggers\"],"
      - "            \"code\": [\"auto result = m_trigDec->isPassed(triggers,TrigDefs::Physics);\"],"
      - "            \"result_name\": \"result\","
      - "            \"return_type\": \"bool\","
      - "        }"
      - "    )"
      - ""
      - "    return _add_decision_tool(new_s), a"
      - ""
      - ""
      - "def _tmt_match_object_processor(s: ObjectStream[T], a: ast.Call) -> Tuple[ObjectStream[T], ast.Call]:"
      - "    new_s = s.MetaData("
      - "        {"
      - "            \"metadata_type\": \"add_cpp_function\","
      - "            \"name\": \"tmt_match_object\","
      - "            \"include_files\": [],"
      - "            \"arguments\": [\"trigger\", \"offline_object\", \"dr\"],"
      - "            \"code\": ["
      - "                \"std::vector<const xAOD::IParticle*> myParticles\","
      - "                \"myParticles.push_back(offline_object);\","
      - "                \"auto result = m_tmt->match(myParticles, trigger , dr);\","
      - "                ],"
      - "            \"result_name\": \"result\","
      - "            \"return_type\": \"bool\","
      - "        })"
      - ""
      - "    return (_add_match_tool(new_s), a)"
      - ""
      - ""
      - "@func_adl_callable(_tdt_chain_fired_processor)"
      - "def tdt_chain_fired(triggers: str) -> bool:"
      - "    \"\"\"Returns true if the event has any of the trigger chain names that have"
      - "    fired. Uses the ATLAS Trigger Decision Tool to query the event."
      - ""
      - "    Args:"
      - "        triggers (str): String specifying the triggers to check for. This is passed directly to the"
      - "        ATLAS TriggerDecisionTool, so can include any valid wildcards."
      - ""
      - "    Returns:"
      - "        bool: True if the TDT says this chain has fired on this event, false other wise."
      - "    \"\"\""
      - "    ..."
      - ""
      - "@func_adl_callable(_tmt_match_object_processor)"
      - "def tmt_match_object(trigger: str, offline_object, dr: float = 0.7) -> bool:"
      - "    '''Returns true if the `offline_object` is a close match to the trigger"
      - "    object. Close match is done as a function of $\\Delta R < `dr`$."
      - ""
      - "    Args:"
      - "        trigger (str): Trigger name"
      - "        offline_object ([type]): The offline object (like an electron)"
      - ""
      - "    Returns:"
      - "        bool: True if the match is good."
      - "    '''"
      - "    ..."
  - "name": "type_support.py"
    "init_lines":
      - "from .type_support import cpp_float, cpp_double, cpp_vfloat, cpp_string, cpp_int"
      - "from . import type_support"
    "contents":
      - "from typing import Callable, Generic, Iterable, Optional, Tuple, Type, TypeVar"
      - "from func_adl import ObjectStream"
      - "import ast"
      - ""
      - "T = TypeVar('T')"
      - ""
      - "class cpp_type(Generic[T]):"
      - "    'Used to indicate C++ types in template arguments'"
      - "    def __init__ (self, cpp_base_type: str, python_base_type: Type, cpp_collection_type: Optional[str] = None):"
      - "        '''For a particular type"
      - "        '''"
      - "        self._cpp_type = cpp_base_type"
      - "        self._python_type = python_base_type"
      - "        self._cpp_collection_type = cpp_collection_type"
      - ""
      - "    @property"
      - "    def cpp_type(self) -> str:"
      - "        return self._cpp_type"
      - ""
      - "    @property"
      - "    def python_type(self) -> Type:"
      - "        return self._python_type"
      - ""
      - "    @property"
      - "    def is_collection(self) -> bool:"
      - "        return self._cpp_collection_type is not None"
      - ""
      - "    @property"
      - "    def actual_cpp_type(self) -> str:"
      - "        if self._cpp_collection_type is None:"
      - "            return self.cpp_type"
      - "        else:"
      - "            return self._cpp_collection_type"
      - ""
      - "    @property"
      - "    def actual_cpp_type_norm(self) -> str:"
      - "        return self.actual_cpp_type.replace('::', '_').replace('<', '_').replace('>', '_')"
      - ""
      - ""
      - "cpp_float = cpp_type[float](\"float\", float)"
      - "cpp_int = cpp_type[float](\"int\", int)"
      - "cpp_double = cpp_type[float](\"double\", float)"
      - "cpp_string = cpp_type[float](\"std::string\", float)"
      - "cpp_vfloat = cpp_type[Iterable[float]](\"float\", float, \"std::vector<float>\")"
      - ""
      - ""
      - "# TODO: 3.10 and this should be a ParamSpec, not a TypeVar."
      - "ParamValue = TypeVar('ParamValue')"
      - ""
      - ""
      - "class index_type_forwarder(Generic[ParamValue]):"
      - "    def __getitem__(self, typ: cpp_type[T]) -> Callable[[ParamValue], T]:"
      - "        ..."
      - ""
      - "    def __call__(self, typ: cpp_type[T]) -> Callable[[ParamValue], T]:"
      - "        ..."
      - ""
      - ""
      - "def cpp_generic_1arg_callback(method_name: str, s: ObjectStream[T], a: ast.Call, param_1: cpp_type) -> Tuple[ObjectStream[T], ast.Call, Type]:"
      - "    'We deal with generic function return types'"
      - ""
      - "    new_s = s.MetaData({"
      - "        'metadata_type': \"add_cpp_function\","
      - "        'name': f'{method_name}_{param_1.actual_cpp_type_norm}',"
      - "        'arguments': ['moment_name'],"
      - "        'code': [f'auto result = obj_j->{method_name}<{param_1.actual_cpp_type}>(moment_name);'],"
      - "        'instance_object': 'xAOD::Jet_v1',"
      - "        'method_object': 'obj_j',"
      - "        'return_type': param_1.cpp_type,"
      - "        'return_is_collection': param_1.is_collection,"
      - "        'include_files': [],"
      - "    })"
      - ""
      - "    import copy"
      - "    new_a = copy.copy(a)"
      - "    new_a.func = ast.Attribute(a.func.value, f'{method_name}_{param_1.actual_cpp_type_norm}', a.func.ctx)"
      - ""
      - "    return new_s, new_a, param_1.python_type"
  - "name": "calibration_support.py"
    "init_lines":
      - "from .calibration_support import CalibrationEventConfig, calib_tools"
    "contents":
      - "import ast"
      - "import copy"
      - "import re"
      - "from dataclasses import dataclass"
      - "from pathlib import Path"
      - "from typing import Optional, Tuple, TypeVar"
      - ""
      - "import jinja2"
      - "from func_adl import ObjectStream"
      - "from func_adl.ast.meta_data import lookup_query_metadata"
      - ""
      - ""
      - "@dataclass"
      - "class CalibrationEventConfig:"
      - "    # Name of the jet collection to calibrate and use by default"
      - "    jet_collection: str"
      - ""
      - "    # Name of the truth jets to be used for the jet calibration"
      - "    jet_calib_truth_collection: str"
      - ""
      - "    ########### Electrons"
      - "    # Name of the electron collection to calibrate and use by default"
      - "    electron_collection: str"
      - ""
      - "    # The working point (e.g. xxx)"
      - "    electron_working_point: str"
      - ""
      - "    # The isolation (e.g. xxxx)"
      - "    electron_isolation: str"
      - ""
      - "    ########### Photons"
      - "    # Name of the photon collection to calibrate and use by default."
      - "    photon_collection: str"
      - ""
      - "    # The working point (e.g. xxx)"
      - "    photon_working_point: str"
      - ""
      - "    # The isolation (e.g. xxxx)"
      - "    photon_isolation: str"
      - ""
      - "    ########### Muons"
      - "    # Name of the muon collection to calibration and use by default."
      - "    muon_collection: str"
      - ""
      - "    # The working point (e.g. xxx)"
      - "    muon_working_point: str"
      - ""
      - "    # The isolation (e.g. xxxx)"
      - "    muon_isolation: str"
      - ""
      - "    ########### Taus"
      - "    # Name of the tau collection to calibrate and use by default."
      - "    tau_collection: str"
      - ""
      - "    # The working point (e.g. xxxx)"
      - "    tau_working_point: str"
      - ""
      - "    ###### Other Config Options"
      - "    perform_overlap_removal: bool"
      - ""
      - ""
      - "T = TypeVar('T')"
      - ""
      - ""
      - "class calib_tools:"
      - "    '''Helper functions to work with a query's calibration configuration.'''"
      - ""
      - "    _default_calibration: Optional[CalibrationEventConfig] = None"
      - ""
      - "    _default_sys_error: Optional[str] = 'NOSYS'"
      - ""
      - "    @classmethod"
      - "    def reset_config(cls):"
      - "        '''Reset calibration config to the default."
      - ""
      - "        * This is configured for working with R21 DAOD_PHYS samples."
      - ""
      - "        '''"
      - "        cls._default_calibration = CalibrationEventConfig("
      - "        jet_collection=\"AntiKt4EMPFlowJets\","
      - "        jet_calib_truth_collection=\"AntiKt4TruthDressedWZJets\","
      - "        electron_collection=\"Electrons\","
      - "        electron_working_point=\"MediumLHElectron\","
      - "        electron_isolation=\"NonIso\","
      - "        photon_collection=\"Photons\","
      - "        photon_working_point=\"Tight\","
      - "        photon_isolation=\"FixedCutTight\","
      - "        muon_collection=\"Muons\","
      - "        muon_working_point=\"Medium\","
      - "        muon_isolation=\"NonIso\","
      - "        tau_collection=\"TauJets\","
      - "        tau_working_point=\"Tight\","
      - "        perform_overlap_removal=True,"
      - "    )"
      - ""
      - "    @classmethod"
      - "    def _setup(cls):"
      - "        if cls._default_calibration is None:"
      - "            cls.reset_config()"
      - ""
      - "    @classmethod"
      - "    def set_default_config(cls, config: CalibrationEventConfig):"
      - "        'Store a copy of a new default config for use in all future queries.'"
      - "        cls._default_calibration = copy.copy(config)"
      - ""
      - "    @classmethod"
      - "    @property"
      - "    def default_config(cls) -> CalibrationEventConfig:"
      - "        'Return a copy of the current default calibration configuration.'"
      - "        cls._setup()"
      - "        assert cls._default_calibration is not None"
      - "        return copy.copy(cls._default_calibration)"
      - ""
      - "    @classmethod"
      - "    def query_update(cls, query: ObjectStream[T], calib_config: Optional[CalibrationEventConfig] = None, **kwargs) -> ObjectStream[T]:"
      - "        '''Add metadata to a query to indicate a change in the calibration configuration for the query."
      - ""
      - "        Args:"
      - "            query (ObjectStream[T]): The query to update."
      - ""
      - "            calib_config (Optional[CalibrationEventConfig]): The new calibration configuration to use. If specified"
      - "                will override all calibration configuration options in the query."
      - ""
      - "            jet_collection, ...: Use any property name from the `CalibrationEventConfig` class to override that particular"
      - "                options for this query. You may specify as many of them as you like."
      - ""
      - "        Returns:"
      - "            ObjectStream[T]: The updated query."
      - ""
      - "        Notes:"
      - ""
      - "            * This function can be chained - resolution works by looking at the most recent `query_update` in the query."
      - "            * This function works by storing a complete `CalibrationEventConfig` object, updated as requested, in the query. So"
      - "                even if you just update `jet_collection`, changing the `default_config` after calling this will have no effect."
      - "        '''"
      - ""
      - "        # Get a base calibration config we can modify (e.g. a copy)"
      - "        config = calib_config"
      - "        if config is None:"
      - "            config = calib_tools.query_get(query)"
      - ""
      - "        # Now, modify by any arguments we were given"
      - "        for k, v in kwargs.items():"
      - "            if hasattr(config, k):"
      - "                setattr(config, k, v)"
      - "            else:"
      - "                raise ValueError(f'Unknown calibration config option: {k} in `query_update`')"
      - ""
      - "        # Place it in the query stream for later use"
      - "        return query.QMetaData({"
      - "            'calibration': config"
      - "        })"
      - ""
      - ""
      - "    @classmethod"
      - "    def query_get(cls, query:ObjectStream[T]) -> CalibrationEventConfig:"
      - "        '''Return a copy of the calibration if the query were issued at this point."
      - ""
      - "        Args:"
      - "            query (ObjectStream[T]): The query to inspect."
      - ""
      - "        Returns:"
      - "            CalibrationEventConfig: The calibration configuration for the query."
      - "        '''"
      - "        r = lookup_query_metadata(query, 'calibration')"
      - "        if r is None:"
      - "            return calib_tools.default_config"
      - "        else:"
      - "            return copy.copy(r)"
      - ""
      - "    @classmethod"
      - "    @property"
      - "    def default_sys_error(cls) -> str:"
      - "        '''Return the default systematic error'''"
      - "        if cls._default_sys_error is None:"
      - "            return 'NOSYS'"
      - "        return cls._default_sys_error"
      - ""
      - "    @classmethod"
      - "    def set_default_sys_error(cls, value: str):"
      - "        '''Set the default systematic error'''"
      - "        cls._default_sys_error = value"
      - ""
      - "    @classmethod"
      - "    def reset_sys_error(cls):"
      - "        '''Reset to 'NOSYS' the default systematic error'''"
      - "        cls._default_sys_error = 'NOSYS'"
      - ""
      - "    @classmethod"
      - "    def query_sys_error(cls, query: ObjectStream[T], sys_error: str) -> ObjectStream[T]:"
      - "        '''Add metadata to a query to indicate a change in the systematic error for the events."
      - ""
      - "        Args:"
      - "            query (ObjectStream[T]): The query to update."
      - ""
      - "            sys_error (str): The systematic error to fetch. Only a single one is possible at any time. The sys error names"
      - "                are the same as used by the common CP algorithms."
      - ""
      - "        Returns:"
      - "            ObjectStream[T]: The updated query."
      - ""
      - "        Notes:"
      - ""
      - "            * This function can be chained - resolution works by looking at the most recent `query_sys_error` in the query."
      - "        '''"
      - "        return query.QMetaData({"
      - "            'calibration_sys_error': sys_error"
      - "        })"
      - ""
      - ""
      - "_g_jinja2_env: Optional[jinja2.Environment] = None"
      - ""
      - ""
      - "def template_configure() -> jinja2.Environment:"
      - "    '''Configure the jinja2 template"
      - "    '''"
      - "    global _g_jinja2_env"
      - "    if _g_jinja2_env is None:"
      - "        template_path = Path(__file__).parent / \"templates\""
      - "        loader = jinja2.FileSystemLoader(str(template_path))"
      - "        _g_jinja2_env = jinja2.Environment(loader=loader)"
      - "    return _g_jinja2_env"
      - ""
      - ""
      - "_g_metadata_names_no_overlap = {"
      - "    'jet_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_jet\", \"add_calibration_to_job\"],"
      - "    'electron_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_electron\", \"add_calibration_to_job\"],"
      - "    'muon_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_muon\", \"add_calibration_to_job\"],"
      - "    'photon_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_photon\", \"add_calibration_to_job\"],"
      - "    'tau_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_tau\", \"add_calibration_to_job\"],"
      - "    'met_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_jet\", \"corrections_muon\", \"corrections_electron\", \"corrections_met\", \"add_calibration_to_job\"],"
      - "}"
      - ""
      - "_g_metadata_names_overlap = {"
      - "    'jet_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_jet\", \"corrections_muon\", \"corrections_electron\", \"corrections_photon\", \"corrections_tau\", \"corrections_overlap\", \"add_calibration_to_job\"],"
      - "    'electron_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_jet\", \"corrections_muon\", \"corrections_electron\", \"corrections_photon\", \"corrections_tau\", \"corrections_overlap\", \"add_calibration_to_job\"],"
      - "    'muon_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_jet\", \"corrections_muon\", \"corrections_electron\", \"corrections_photon\", \"corrections_tau\", \"corrections_overlap\", \"add_calibration_to_job\"],"
      - "    'photon_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_jet\", \"corrections_muon\", \"corrections_electron\", \"corrections_photon\", \"corrections_tau\", \"corrections_overlap\", \"add_calibration_to_job\"],"
      - "    'tau_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_jet\", \"corrections_muon\", \"corrections_electron\", \"corrections_photon\", \"corrections_tau\", \"corrections_overlap\", \"add_calibration_to_job\"],"
      - "    'met_collection': [\"sys_error_tool\", \"pileup_tool\", \"corrections_jet\", \"corrections_muon\", \"corrections_electron\", \"corrections_met\", \"add_calibration_to_job\"],"
      - "}"
      - ""
      - "def fixup_collection_call(s: ObjectStream[T], a: ast.Call, collection_attr_name: str) -> Tuple[ObjectStream[T], ast.Call]:"
      - "    'Apply all the fixes to the collection call'"
      - ""
      - "    # Find the two arguments"
      - "    uncalibrated_bank_name = None"
      - "    calibrated_bank_name = None"
      - ""
      - "    if len(a.args) >= 1:"
      - "        calibrated_bank_name = ast.literal_eval(a.args[0])"
      - ""
      - "    if len(a.args) >= 2:"
      - "        uncalibrated_bank_name = ast.literal_eval(a.args[1])"
      - ""
      - "    for arg in a.keywords:"
      - "        if arg.arg == 'calibrated_collection':"
      - "            calibrated_bank_name = ast.literal_eval(arg.value)"
      - "        if arg.arg == 'uncalibrated_collection':"
      - "            uncalibrated_bank_name = ast.literal_eval(arg.value)"
      - ""
      - "    if uncalibrated_bank_name is not None and calibrated_bank_name is not None:"
      - "        raise ValueError(f\"Illegal to specify both `calibrated_collection` and `uncalibrated_collection` when accessing `collection_attr_name`.\")"
      - ""
      - "    new_s = s"
      - "    if calibrated_bank_name is not None:"
      - "        new_s = calib_tools.query_update(new_s, **{collection_attr_name: calibrated_bank_name})"
      - ""
      - "    # See if there is a systematic error we need to fetch"
      - "    sys_error = lookup_query_metadata(new_s, 'calibration_sys_error')"
      - "    if sys_error is None:"
      - "        sys_error = calib_tools.default_sys_error"
      - ""
      - "    # Uncalibrated collection is pretty easy - nothing to do here!"
      - "    if uncalibrated_bank_name is not None:"
      - "        output_collection_name = uncalibrated_bank_name"
      - "    else:"
      - ""
      - "        # Get the most up to date configuration for this run."
      - "        calibration_info = calib_tools.query_get(new_s)"
      - ""
      - "        # Next, load up all the meta-data for this collection."
      - "        j_env = template_configure()"
      - "        dependent_md_name = None"
      - "        output_collection_name = None"
      - "        md_to_transmit = _g_metadata_names_overlap[collection_attr_name] if calibration_info.perform_overlap_removal else _g_metadata_names_no_overlap[collection_attr_name]"
      - "        for md_name in md_to_transmit:"
      - "            md_template = j_env.get_template(f\"{md_name}.py\")"
      - "            text = md_template.render(calib=calibration_info, sys_error=sys_error)"
      - "            md_text = {"
      - "                \"metadata_type\": \"add_job_script\","
      - "                \"name\": md_name,"
      - "                \"script\": text.splitlines()"
      - "            }"
      - "            if dependent_md_name is not None:"
      - "                md_text[\"depends_on\"] = [dependent_md_name]"
      - ""
      - "            new_s = new_s.MetaData(md_text)"
      - ""
      - "            dependent_md_name = md_name"
      - ""
      - "            # Have we found the output collection name?"
      - "            found = re.search(f\"# Output {collection_attr_name} = (.+)(\\\\s|$)\", text)"
      - "            if found is not None:"
      - "                output_collection_name = found.group(1)"
      - ""
      - "    if output_collection_name is None:"
      - "        raise RuntimeError(f\"Could not find output collection name in templates for collection '{collection_attr_name} - xAOD job options templates are malformed.\")"
      - ""
      - "    # Finally, rewrite the call to fetch the collection with the actual collection name we want"
      - "    # to fetch."
      - "    new_call = copy.copy(a)"
      - "    new_call.args = [ast.parse(f\"'{output_collection_name}'\").body[0].value]  # type: ignore"
      - ""
      - "    return new_s, new_call"
  - "name": "templates/sys_error_tool.py"
    "init_lines":
      []
    "contents":
      - "# pulled from:https://gitlab.cern.ch/atlas/athena/-/blob/21.2/PhysicsAnalysis/Algorithms/JetAnalysisAlgorithms/python/JetAnalysisAlgorithmsTest.py"
      - "# Set up the systematics loader/handler service:"
      - "from AnaAlgorithm.DualUseConfig import createService"
      - "from AnaAlgorithm.AlgSequence import AlgSequence"
      - "calibrationAlgSeq = AlgSequence()"
      - "sysService = createService( 'CP::SystematicsSvc', 'SystematicsSvc', sequence = calibrationAlgSeq )"
      - "sysService.systematicsList = ['{{ sys_error }}']"
      - "# Add sequence to job"
  - "name": "templates/pileup_tool.py"
    "init_lines":
      []
    "contents":
      - "from AsgAnalysisAlgorithms.PileupAnalysisSequence import makePileupAnalysisSequence"
      - "pileupSequence = makePileupAnalysisSequence( 'mc' )"
      - "pileupSequence.configure( inputName = {}, outputName = {} )"
      - "print( pileupSequence ) # For debugging"
      - "calibrationAlgSeq += pileupSequence"
  - "name": "templates/corrections_jet.py"
    "init_lines":
      []
    "contents":
      - "jetContainer = '{{calib.jet_collection}}'"
      - "from JetAnalysisAlgorithms.JetAnalysisSequence import makeJetAnalysisSequence"
      - "jetSequence = makeJetAnalysisSequence( 'mc', jetContainer)"
      - "jetSequence.configure( inputName = jetContainer, outputName = jetContainer + '_Base_%SYS%' )"
      - "jetSequence.JvtEfficiencyAlg.truthJetCollection = '{{calib.jet_calib_truth_collection}}'"
      - "jetSequence.ForwardJvtEfficiencyAlg.truthJetCollection = '{{calib.jet_calib_truth_collection}}'"
      - "calibrationAlgSeq += jetSequence"
      - "print( jetSequence ) # For debugging"
      - "# Include, and then set up the jet analysis algorithm sequence:"
      - "from JetAnalysisAlgorithms.JetJvtAnalysisSequence import makeJetJvtAnalysisSequence"
      - "jvtSequence = makeJetJvtAnalysisSequence( 'mc', jetContainer, enableCutflow=True )"
      - "jvtSequence.configure( inputName = {'jets'      : jetContainer + '_Base_%SYS%' },"
      - "                       outputName = { 'jets'      : jetContainer + 'Calib_%SYS%' },"
      - "                       )"
      - "calibrationAlgSeq += jvtSequence"
      - "print( jvtSequence ) # For debugging"
      - "output_jet_container = \"{{calib.jet_collection}}Calib_%SYS%\""
      - "# Output jet_collection = {{calib.jet_collection}}Calib_{{ sys_error }}"
  - "name": "templates/corrections_electron.py"
    "init_lines":
      []
    "contents":
      - "from EgammaAnalysisAlgorithms.ElectronAnalysisSequence import makeElectronAnalysisSequence"
      - "electronSequence = makeElectronAnalysisSequence( 'mc', '{{calib.electron_working_point}}.{{calib.electron_isolation}}', postfix = '{{calib.electron_working_point}}_{{calib.electron_isolation}}')"
      - "electronSequence.configure( inputName = '{{calib.electron_collection}}',"
      - "                            outputName = '{{calib.electron_collection}}_{{calib.electron_working_point}}_{{calib.electron_isolation}}_%SYS%' )"
      - "calibrationAlgSeq += electronSequence"
      - "print( electronSequence ) # For debugging"
      - "output_electron_container = \"{{calib.electron_collection}}_{{calib.electron_working_point}}_{{calib.electron_isolation}}_%SYS%\""
      - "# Output electron_collection = {{calib.electron_collection}}_{{calib.electron_working_point}}_{{calib.electron_isolation}}_{{ sys_error }}"
  - "name": "templates/corrections_photon.py"
    "init_lines":
      []
    "contents":
      - "#TODO: Get photon corrections working. It does not seem possible in R21 and on PHYS_DAOD."
      - "# If you remove the fudge tool, then the photon eff tool has trouble."
      - "# If you remove that, then the sequence has trouble. Needs more work."
      - "# from EgammaAnalysisAlgorithms.PhotonAnalysisSequence import makePhotonAnalysisSequence"
      - "# photonSequence = makePhotonAnalysisSequence( 'mc', '{{calib.photon_working_point}}.{{calib.photon_isolation}}', postfix = '{{calib.photon_working_point}}_{{calib.photon_isolation}}')"
      - "# photonSequence.configure( inputName = '{{calib.photon_collection}}',"
      - "#                             outputName = '{{calib.photon_collection}}_{{calib.photon_working_point}}_{{calib.photon_isolation}}_%SYS%' )"
      - "# print( photonSequence ) # For debugging"
      - "# attr = getattr(photonSequence, 'PhotonShowerShapeFudgeAlg_Tight_FixedCutTight')"
      - "# del attr"
      - "# del photonSequence.PhotonShowerShapeFudgeAlg_Tight_FixedCutTight"
      - "# del photonSequence.PhotonIsolationCorrectionAlg_Tight_FixedCutTight"
      - "# calibrationAlgSeq += photonSequence"
      - "# Output photon_collection = {{calib.photon_collection}}"
  - "name": "templates/corrections_muon.py"
    "init_lines":
      []
    "contents":
      - "muon_container = '{{calib.muon_collection}}'"
      - "from MuonAnalysisAlgorithms.MuonAnalysisSequence import makeMuonAnalysisSequence"
      - "muonSequence = makeMuonAnalysisSequence('mc', workingPoint='{{calib.muon_working_point}}.{{calib.muon_isolation}}', postfix = '{{calib.muon_working_point}}_{{calib.muon_isolation}}')"
      - "muonSequence.configure( inputName = muon_container,"
      - "                        outputName = muon_container + 'Calib_{{calib.muon_working_point}}{{calib.muon_isolation}}_%SYS%' )"
      - "calibrationAlgSeq += muonSequence"
      - "print( muonSequence ) # For debugging"
      - "output_muon_container = \"{{calib.muon_collection}}Calib_{{calib.muon_working_point}}{{calib.muon_isolation}}_%SYS%\""
      - "# Output muon_collection = {{calib.muon_collection}}Calib_{{calib.muon_working_point}}{{calib.muon_isolation}}_{{ sys_error }}"
  - "name": "templates/corrections_tau.py"
    "init_lines":
      []
    "contents":
      - "from TauAnalysisAlgorithms.TauAnalysisSequence import makeTauAnalysisSequence"
      - "tauSequence = makeTauAnalysisSequence( 'mc', '{{calib.tau_working_point}}', postfix = '{{calib.tau_working_point}}', rerunTruthMatching=False)"
      - "tauSequence.configure( inputName = '{{calib.tau_collection}}',"
      - "                       outputName = '{{calib.tau_collection}}_{{calib.tau_working_point}}_%SYS%' )"
      - "calibrationAlgSeq += tauSequence"
      - "print( tauSequence ) # For debugging"
      - "output_tau_container = '{{calib.tau_collection}}_{{calib.tau_working_point}}_%SYS%'"
      - "# Output tau_collection = {{calib.tau_collection}}_{{calib.tau_working_point}}_{{ sys_error }}"
  - "name": "templates/corrections_overlap.py"
    "init_lines":
      []
    "contents":
      - "from AsgAnalysisAlgorithms.OverlapAnalysisSequence import makeOverlapAnalysisSequence"
      - "overlapSequence = makeOverlapAnalysisSequence('mc')"
      - "overlapSequence.configure("
      - "    inputName = {"
      - "        'electrons' : output_electron_container,"
      - "        'photons'   : '{{calib.photon_collection}}',"
      - "        'muons'     : output_muon_container,"
      - "        'jets'      : output_jet_container,"
      - "        'taus'      : output_tau_container,"
      - "    },"
      - "    outputName = {"
      - "        'electrons' : '{{calib.electron_collection}}_{{calib.electron_working_point}}_{{calib.electron_isolation}}_OR_%SYS%',"
      - "        'photons'   : '{{calib.photon_collection}}_OR_%SYS%',"
      - "        'muons'     : '{{calib.muon_collection}}Calib_{{calib.muon_working_point}}{{calib.muon_isolation}}_OR_%SYS%',"
      - "        'jets'      : '{{calib.jet_collection}}Calib_OR_%SYS%',"
      - "        'taus'      : '{{calib.tau_collection}}_{{calib.tau_working_point}}_OR_%SYS%'"
      - "    })"
      - "calibrationAlgSeq += overlapSequence"
      - "# Output electron_collection = {{calib.electron_collection}}_{{calib.electron_working_point}}_{{calib.electron_isolation}}_OR_{{ sys_error }}"
      - "# Output photon_collection = {{calib.photon_collection}}_OR_{{ ssy_error }}"
      - "# Output muon_collection = {{calib.muon_collection}}Calib_{{calib.muon_working_point}}{{calib.muon_isolation}}_OR_{{ sys_error }}"
      - "# Output jet_collection = {{calib.jet_collection}}Calib_OR_{{ sys_error }}"
      - "# Output tau_collection = {{calib.tau_collection}}_{{calib.tau_working_point}}_OR_{{ sys_error }}"
  - "name": "templates/corrections_met.py"
    "init_lines":
      []
    "contents":
      - "from MetAnalysisAlgorithms.MetAnalysisSequence import makeMetAnalysisSequence"
      - "met_jetContainer = '{{calib.jet_collection}}'"
      - "metSequence = makeMetAnalysisSequence('mc', metSuffix = met_jetContainer[:-4] )"
      - "metSequence.configure( inputName = { 'jets'      : output_jet_container,"
      - "                                        'muons'     : output_muon_container,"
      - "                                        'electrons' : output_electron_container },"
      - "                        outputName = 'AnalysisMET_%SYS%' )"
      - "print(metSequence)  # For debugging"
      - "calibrationAlgSeq += metSequence"
      - "# Output met_collection = AnalysisMET_{{ sys_error }}"
  - "name": "templates/add_calibration_to_job.py"
    "init_lines":
      []
    "contents":
      - "calibrationAlgSeq.addSelfToJob( job )"
      - "print(job) # for debugging"
"config":
  "atlas_release": "22.2.113"
metadata:
  - name: sys_error_tool
    data:
      - metadata_type: add_job_script
        name: sys_error_tool
        script:
          - "# pulled from:https://gitlab.cern.ch/atlas/athena/-/blob/21.2/PhysicsAnalysis/Algorithms/JetAnalysisAlgorithms/python/JetAnalysisAlgorithmsTest.py "
          - "# Set up the systematics loader/handler service:"
          - "from AnaAlgorithm.DualUseConfig import createService"
          - "from AnaAlgorithm.AlgSequence import AlgSequence"
          - "calibrationAlgSeq = AlgSequence()"
          - "sysService = createService( 'CP::SystematicsSvc', 'SystematicsSvc', sequence = calibrationAlgSeq )"
          - "sysService.systematicsList = ['{calibration}']"
          - "# Add sequence to job"
  - name: pileup_tool
    data:
      - metadata_type: add_job_script
        name: pileup_tool
        script:
          - "from AsgAnalysisAlgorithms.PileupAnalysisSequence import makePileupAnalysisSequence"
          - "pileupSequence = makePileupAnalysisSequence( 'mc' )"
          - "pileupSequence.configure( inputName = {}, outputName = {} )"
          - "print( pileupSequence ) # For debugging"
          - "calibrationAlgSeq += pileupSequence"
        depends_on: 
          - sys_error_tool
  - name: common_corrections
    data:
      - metadata_type: add_job_script
        name: common_corrections
        script:
          - "jetContainer = '{calib.jet_collection}'"
          - "from JetAnalysisAlgorithms.JetAnalysisSequence import makeJetAnalysisSequence"
          - "jetSequence = makeJetAnalysisSequence( 'mc', jetContainer)"
          - "jetSequence.configure( inputName = jetContainer, outputName = jetContainer + '_Base_%SYS%' )"
          - "jetSequence.JvtEfficiencyAlg.truthJetCollection = '{calib.jet_calib_truth_collection}'"
          - "jetSequence.ForwardJvtEfficiencyAlg.truthJetCollection = '{calib.jet_calib_truth_collection}'"
          - "calibrationAlgSeq += jetSequence"
          - "print( jetSequence ) # For debugging"
          - ""
          - "# Include, and then set up the jet analysis algorithm sequence:"
          - "from JetAnalysisAlgorithms.JetJvtAnalysisSequence import makeJetJvtAnalysisSequence"
          - "jvtSequence = makeJetJvtAnalysisSequence( 'mc', jetContainer, enableCutflow=True )"
          - "jvtSequence.configure( inputName = {'jets'      : jetContainer + '_Base_%SYS%' },"
          - "                       outputName = { 'jets'      : jetContainer + 'Calib_%SYS%' },"
          - "                       )"
          - "calibrationAlgSeq += jvtSequence"
          - "print( jvtSequence ) # For debugging"
          - "#"
          - "muon_container = '{calib.muon_collection}'"
          - "from MuonAnalysisAlgorithms.MuonAnalysisSequence import makeMuonAnalysisSequence"
          - "muonSequence = makeMuonAnalysisSequence('mc', workingPoint='{calib.muon_working_point}.{calib.muon_isolation}', postfix = '{calib.muon_working_point}_{calib.muon_isolation}')"
          - "muonSequence.configure( inputName = muon_container,"
          - "                        outputName = muon_container + 'Calib_{calib.muon_working_point}{calib.muon_isolation}_%SYS%' )"
          - "calibrationAlgSeq += muonSequence"
          - "print( muonSequence ) # For debugging"
          - "#"
          - "from EgammaAnalysisAlgorithms.ElectronAnalysisSequence import makeElectronAnalysisSequence"
          - "electronSequence = makeElectronAnalysisSequence( 'mc', '{working_point}.{isolation}', postfix = '{working_point}_{isolation}')"
          - "electronSequence.configure( inputName = '{calib.electron_collection}',"
          - "                            outputName = '{calib.electron_collection}_{working_point}_{isolation}_%SYS%' )"
          - "calibrationAlgSeq += electronSequence"
          - "print( electronSequence ) # For debugging"
          - "#"
          - "from EgammaAnalysisAlgorithms.PhotonAnalysisSequence import makePhotonAnalysisSequence"
          - "photonSequence = makePhotonAnalysisSequence( 'mc', '{calib.photon_working_point}.{calib.photon_isolation}', postfix = '{calib.photon_working_point}_{calib.photon_isolation}')"
          - "photonSequence.configure( inputName = '{calib.photon_collection}',"
          - "                            outputName = '{calib.photon_collection}_{calib.photon_working_point}_{calib.photon_isolation}_%SYS%' )"
          - "calibrationAlgSeq += photonSequence"
          - "print( photonSequence ) # For debugging"
          - "#"
          - "from TauAnalysisAlgorithms.TauAnalysisSequence import makeTauAnalysisSequence"
          - "tauSequence = makeTauAnalysisSequence( 'mc', '{calib.tau_working_point}', postfix = '{calib.tau_working_point}', rerunTruthMatching=False)"
          - "tauSequence.configure( inputName = '{calib.tau_collection}',"
          - "                       outputName = '{calib.tau_collection}_{calib.tau_working_point}_%SYS%' )"
          - "calibrationAlgSeq += tauSequence"
          - "print( tauSequence ) # For debugging"
        depends_on:
          - 'pileup_tool'
  - name: ditau_corrections
    data:
      - metadata_type: add_job_script
        name: ditau_corrections
        script:
          - "from TauAnalysisAlgorithms.DiTauAnalysisSequence import makeDiTauAnalysisSequence"
          - "diTauSequence = makeDiTauAnalysisSequence( 'mc', '{working_point}', postfix = '{working_point}')"
          - "diTauSequence.configure( inputName = '{bank_name}',"
          - "                       outputName = '{bank_name}_{working_point}_%SYS%' )"
          - "calibrationAlgSeq += diTauSequence"
          - "print( diTauSequence ) # For debugging"
        depends_on:
          - 'pileup_tool'
  - name: add_calibration_to_job
    data:
      - metadata_type: add_job_script
        name: add_calibration_to_job
        script:
          - "calibrationAlgSeq.addSelfToJob( job )"
          - "print(job) # for debugging"
        depends_on:
          - '*PREVIOUS*'
